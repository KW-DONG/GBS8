

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Nov 04 14:01:19 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000D                     	;# 
   469  000E                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0014                     	;# 
   477  0015                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  0081                     	;# 
   491  0085                     	;# 
   492  0086                     	;# 
   493  0087                     	;# 
   494  0088                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009A                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  0105                     	;# 
   519  0107                     	;# 
   520  0108                     	;# 
   521  0109                     	;# 
   522  010C                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  010F                     	;# 
   527  0185                     	;# 
   528  0187                     	;# 
   529  0188                     	;# 
   530  0189                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0088                     	;# 
   573  0089                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  008F                     	;# 
   578  0090                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0093                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  0105                     	;# 
   597  0107                     	;# 
   598  0108                     	;# 
   599  0109                     	;# 
   600  010C                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  010E                     	;# 
   604  010F                     	;# 
   605  0185                     	;# 
   606  0187                     	;# 
   607  0188                     	;# 
   608  0189                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  000E                     	;# 
   627  000F                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0014                     	;# 
   633  0015                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  0019                     	;# 
   639  001A                     	;# 
   640  001B                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  0081                     	;# 
   647  0085                     	;# 
   648  0086                     	;# 
   649  0087                     	;# 
   650  0088                     	;# 
   651  0089                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008F                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  0105                     	;# 
   675  0107                     	;# 
   676  0108                     	;# 
   677  0109                     	;# 
   678  010C                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0187                     	;# 
   685  0188                     	;# 
   686  0189                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  000E                     _TMR1	set	14
   690  001A                     _RCREG	set	26
   691  0019                     _TXREG	set	25
   692  0018                     _RCSTAbits	set	24
   693  0015                     _CCPR1L	set	21
   694  0017                     _CCP1CONbits	set	23
   695  0011                     _TMR2	set	17
   696  0012                     _T2CONbits	set	18
   697  0010                     _T1CONbits	set	16
   698  0001                     _TMR0	set	1
   699  000C                     _PIR1bits	set	12
   700  000B                     _INTCONbits	set	11
   701  0091                     _T2CKPS1	set	145
   702  0092                     _TMR2ON	set	146
   703  0099                     _SPBRG	set	153
   704  0098                     _TXSTAbits	set	152
   705  0092                     _PR2	set	146
   706  008C                     _PIE1bits	set	140
   707  0096                     _IOCBbits	set	150
   708  0081                     _OPTION_REGbits	set	129
   709  0087                     _TRISCbits	set	135
   710  0088                     _TRISDbits	set	136
   711  0086                     _TRISBbits	set	134
   712  0085                     _TRISAbits	set	133
   713  0089                     _TRISEbits	set	137
   714  040D                     _T0CS	set	1037
   715  040B                     _PSA	set	1035
   716  0187                     _BAUDCTLbits	set	391
   717  0189                     _ANSELH	set	393
   718  0188                     _ANSEL	set	392
   719                           
   720                           	psect	strings
   721  0330                     __pstrings:
   722  0330                     stringtab:
   723  0330                     __stringtab:
   724  0330                     stringcode:	
   725                           ;	String table - string pointers are 1 byte each
   726                           
   727  0330                     stringdir:
   728  0330  3003               	movlw	high stringdir
   729  0331  008A               	movwf	10
   730  0332  0804               	movf	4,w
   731  0333  0A84               	incf	4,f
   732  0334  0782               	addwf	2,f
   733  0335                     __stringbase:
   734  0335  3400               	retlw	0
   735  0336                     __end_of__stringtab:
   736  0336                     STR_1:
   737  0336  3443               	retlw	67	;'C'
   738  0337  3452               	retlw	82	;'R'
   739  0338  3465               	retlw	101	;'e'
   740  0339  3463               	retlw	99	;'c'
   741  033A  3465               	retlw	101	;'e'
   742  033B  3469               	retlw	105	;'i'
   743  033C  3476               	retlw	118	;'v'
   744  033D  3465               	retlw	101	;'e'
   745  033E  3464               	retlw	100	;'d'
   746  033F  3400               	retlw	0
   747  0340                     STR_8:
   748  0340  3444               	retlw	68	;'D'
   749  0341  3452               	retlw	82	;'R'
   750  0342  3465               	retlw	101	;'e'
   751  0343  3463               	retlw	99	;'c'
   752  0344  3465               	retlw	101	;'e'
   753  0345  3469               	retlw	105	;'i'
   754  0346  3476               	retlw	118	;'v'
   755  0347  3465               	retlw	101	;'e'
   756  0348  3464               	retlw	100	;'d'
   757  0349  3400               	retlw	0
   758  034A                     STR_2:
   759  034A  344E               	retlw	78	;'N'
   760  034B  3455               	retlw	85	;'U'
   761  034C  344C               	retlw	76	;'L'
   762  034D  344C               	retlw	76	;'L'
   763  034E  3400               	retlw	0
   764  034A                     
   765                           	psect	cinit
   766  0015                     start_initialization:	
   767                           ; #config settings
   768                           
   769  0015                     __initialization:
   770                           
   771                           ; Clear objects allocated to COMMON
   772  0015  01F9               	clrf	__pbssCOMMON& (0+127)
   773  0016  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   774  0017  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   775  0018  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   776  0019  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
   777                           
   778                           ; Clear objects allocated to BANK0
   779  001A  1383               	bcf	3,7	;select IRP bank0
   780  001B  3020               	movlw	low __pbssBANK0
   781  001C  0084               	movwf	4
   782  001D  3052               	movlw	low (__pbssBANK0+50)
   783  001E  120A  118A  2390  120A  118A  	fcall	clear_ram0
   784                           
   785                           ; Clear objects allocated to BANK1
   786  0023  30A0               	movlw	low __pbssBANK1
   787  0024  0084               	movwf	4
   788  0025  30F0               	movlw	low (__pbssBANK1+80)
   789  0026  120A  118A  2390  120A  118A  	fcall	clear_ram0
   790  002B                     end_of_initialization:	
   791                           ;End of C runtime variable initialization code
   792                           
   793  002B                     __end_of__initialization:
   794  002B  0183               	clrf	3
   795  002C  120A  118A  2B4F   	ljmp	_main	;jump to C main() function
   796                           
   797                           	psect	bssCOMMON
   798  0079                     __pbssCOMMON:
   799  0079                     _errno:
   800  0079                     	ds	2
   801  007B                     _ctrlBits:
   802  007B                     	ds	2
   803  007D                     _uFlag:
   804  007D                     	ds	1
   805                           
   806                           	psect	bssBANK0
   807  0020                     __pbssBANK0:
   808  0020                     _usartSendBuffer:
   809  0020                     	ds	19
   810  0033                     _usartReceiveBuffer:
   811  0033                     	ds	19
   812  0046                     _stepperA:
   813  0046                     	ds	12
   814                           
   815                           	psect	bssBANK1
   816  00A0                     __pbssBANK1:
   817  00A0                     _sBufferA:
   818  00A0                     	ds	80
   819                           
   820                           	psect	clrtext
   821  0390                     clear_ram0:	
   822                           ;	Called with FSR containing the base address, and
   823                           ;	W with the last address+1
   824                           
   825  0390  0064               	clrwdt	;clear the watchdog before getting into this loop
   826  0391                     clrloop0:
   827  0391  0180               	clrf	0	;clear RAM location pointed to by FSR
   828  0392  0A84               	incf	4,f	;increment pointer
   829  0393  0604               	xorwf	4,w	;XOR with final address
   830  0394  1903               	btfsc	3,2	;have we reached the end yet?
   831  0395  3400               	retlw	0	;all done for this memory range, return
   832  0396  0604               	xorwf	4,w	;XOR again to restore value
   833  0397  2B91               	goto	clrloop0	;do the next byte
   834                           
   835                           	psect	cstackCOMMON
   836  0070                     __pcstackCOMMON:
   837  0070                     ?_GBS_Interrupt_Init:
   838  0070                     ?_GBS_Message_Update:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_GBS_Interrupt_Enable:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_USART_TX_ISR:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ??_USART_TX_ISR:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?_USART_RX_ISR:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ?_ISR:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_GBS_USART_Buffer_Read:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_GBS_USART_Send:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_GBS_USART_Receive:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?i1_GBS_USART_Buffer_Write:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_main:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     i1GBS_USART_Buffer_Write@value:	
   872                           ; 2 bytes @ 0x0
   873                           
   874                           
   875                           ; 1 bytes @ 0x0
   876  0070                     	ds	1
   877  0071                     ??i1_GBS_USART_Buffer_Write:
   878                           
   879                           ; 1 bytes @ 0x1
   880  0071                     	ds	1
   881  0072                     i1GBS_USART_Buffer_Write@buffer:
   882                           
   883                           ; 1 bytes @ 0x2
   884  0072                     	ds	1
   885  0073                     ??_USART_RX_ISR:
   886  0073                     ??_GBS_USART_Receive:	
   887                           ; 1 bytes @ 0x3
   888                           
   889                           
   890                           ; 1 bytes @ 0x3
   891  0073                     	ds	2
   892  0075                     ??_ISR:
   893                           
   894                           ; 1 bytes @ 0x5
   895  0075                     	ds	4
   896                           
   897                           	psect	cstackBANK0
   898  0052                     __pcstackBANK0:
   899  0052                     ??_GBS_Interrupt_Init:
   900  0052                     ??_GBS_Interrupt_Enable:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  0052                     ?_GBS_USART_Buffer_Write:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0052                     ??_GBS_USART_Buffer_Read:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0052                     ?___aldiv:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0052                     GBS_USART_Buffer_Write@value:	
   913                           ; 4 bytes @ 0x0
   914                           
   915  0052                     ___aldiv@divisor:	
   916                           ; 1 bytes @ 0x0
   917                           
   918                           
   919                           ; 4 bytes @ 0x0
   920  0052                     	ds	1
   921  0053                     ??_GBS_USART_Buffer_Write:
   922  0053                     GBS_USART_Buffer_Read@result:	
   923                           ; 1 bytes @ 0x1
   924                           
   925                           
   926                           ; 1 bytes @ 0x1
   927  0053                     	ds	1
   928  0054                     GBS_USART_Buffer_Write@buffer:
   929  0054                     GBS_USART_Buffer_Read@buffer:	
   930                           ; 1 bytes @ 0x2
   931                           
   932                           
   933                           ; 1 bytes @ 0x2
   934  0054                     	ds	1
   935  0055                     ??_GBS_USART_Send:
   936  0055                     ?_GBS_USART_Write_Char:	
   937                           ; 1 bytes @ 0x3
   938                           
   939  0055                     GBS_USART_Write_Char@size:	
   940                           ; 1 bytes @ 0x3
   941                           
   942                           
   943                           ; 1 bytes @ 0x3
   944  0055                     	ds	1
   945  0056                     ??_GBS_USART_Write_Char:
   946  0056                     ___aldiv@dividend:	
   947                           ; 1 bytes @ 0x4
   948                           
   949                           
   950                           ; 4 bytes @ 0x4
   951  0056                     	ds	2
   952  0058                     GBS_USART_Write_Char@i:
   953                           
   954                           ; 1 bytes @ 0x6
   955  0058                     	ds	1
   956  0059                     GBS_USART_Write_Char@c:
   957                           
   958                           ; 1 bytes @ 0x7
   959  0059                     	ds	1
   960  005A                     ??_GBS_Message_Update:
   961  005A                     ??___aldiv:	
   962                           ; 1 bytes @ 0x8
   963                           
   964                           
   965                           ; 1 bytes @ 0x8
   966  005A                     	ds	1
   967  005B                     ___aldiv@counter:
   968                           
   969                           ; 1 bytes @ 0x9
   970  005B                     	ds	1
   971  005C                     ___aldiv@sign:
   972                           
   973                           ; 1 bytes @ 0xA
   974  005C                     	ds	1
   975  005D                     ___aldiv@quotient:
   976                           
   977                           ; 4 bytes @ 0xB
   978  005D                     	ds	4
   979  0061                     ?_GBS_USART_Init:
   980  0061                     GBS_USART_Init@baudRate:	
   981                           ; 1 bytes @ 0xF
   982                           
   983                           
   984                           ; 2 bytes @ 0xF
   985  0061                     	ds	2
   986  0063                     ??_GBS_USART_Init:
   987  0063                     _GBS_USART_Init$1753:	
   988                           ; 1 bytes @ 0x11
   989                           
   990                           
   991                           ; 4 bytes @ 0x11
   992  0063                     	ds	4
   993  0067                     ??_main:
   994                           
   995                           	psect	maintext
   996  034F                     __pmaintext:	
   997                           ; 1 bytes @ 0x15
   998 ;;
   999 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1000 ;;
  1001 ;; *************** function _main *****************
  1002 ;; Defined at:
  1003 ;;		line 14 in file "../test.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;		None
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  2   24[None  ] int 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : B00/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         0       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         0       0       0       0       0
  1021 ;;Total ram usage:        0 bytes
  1022 ;; Hardware stack levels required when called:    7
  1023 ;; This function calls:
  1024 ;;		_GBS_Interrupt_Init
  1025 ;;		_GBS_Message_Update
  1026 ;;		_GBS_USART_Init
  1027 ;; This function is called by:
  1028 ;;		Startup code after reset
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _main
  1034  034F                     _main:
  1035  034F                     l1660:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1038                           
  1039                           
  1040                           ;../test.c: 16:     GBS_Interrupt_Init();
  1041  034F  120A  118A  2398  120A  118A  	fcall	_GBS_Interrupt_Init
  1042  0354                     l1662:
  1043                           
  1044                           ;../test.c: 18:     GBS_USART_Init(9600);
  1045  0354  3080               	movlw	128
  1046  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1047  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1048  0357  00E1               	movwf	GBS_USART_Init@baudRate
  1049  0358  3025               	movlw	37
  1050  0359  00E2               	movwf	GBS_USART_Init@baudRate+1
  1051  035A  120A  118A  21E8  120A  118A  	fcall	_GBS_USART_Init
  1052  035F                     l1664:
  1053                           
  1054                           ;../test.c: 19:     TRISEbits.TRISE0 = 1;
  1055  035F  1683               	bsf	3,5	;RP0=1, select bank1
  1056  0360  1303               	bcf	3,6	;RP1=0, select bank1
  1057  0361  1409               	bsf	9,0	;volatile
  1058  0362                     l1666:
  1059                           
  1060                           ;../test.c: 22:     {;../test.c: 46:         GBS_Message_Update();
  1061  0362  120A  118A  202F  120A  118A  	fcall	_GBS_Message_Update
  1062  0367  2B62               	goto	l1666
  1063  0368  120A  118A  2812   	ljmp	start
  1064  036B                     __end_of_main:
  1065                           
  1066                           	psect	text1
  1067  01E8                     __ptext1:	
  1068 ;; *************** function _GBS_USART_Init *****************
  1069 ;; Defined at:
  1070 ;;		line 7 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;  baudRate        2   15[BANK0 ] unsigned int 
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       2       0       0       0
  1085 ;;      Locals:         0       4       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       6       0       0       0
  1088 ;;Total ram usage:        6 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    5
  1091 ;; This function calls:
  1092 ;;		___aldiv
  1093 ;; This function is called by:
  1094 ;;		_main
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _GBS_USART_Init
  1100  01E8                     _GBS_USART_Init:
  1101  01E8                     l1484:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _GBS_USART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1104                           
  1105                           
  1106                           ;../gbs8/bsp/scr/gbs8_usart.c: 7: void GBS_USART_Init(uint16_t baudRate);../gbs8/bsp/scr
      +                          /gbs8_usart.c: 8: {;../gbs8/bsp/scr/gbs8_usart.c: 10:     PIE1bits.TXIE = 0;
  1107  01E8  1683               	bsf	3,5	;RP0=1, select bank1
  1108  01E9  1303               	bcf	3,6	;RP1=0, select bank1
  1109  01EA  120C               	bcf	12,4	;volatile
  1110                           
  1111                           ;../gbs8/bsp/scr/gbs8_usart.c: 11:     PIE1bits.RCIE = 1;
  1112  01EB  168C               	bsf	12,5	;volatile
  1113                           
  1114                           ;../gbs8/bsp/scr/gbs8_usart.c: 13:     TXSTAbits.TX9 = 0;
  1115  01EC  1318               	bcf	24,6	;volatile
  1116                           
  1117                           ;../gbs8/bsp/scr/gbs8_usart.c: 16:     TXSTAbits.SYNC = 0;
  1118  01ED  1218               	bcf	24,4	;volatile
  1119                           
  1120                           ;../gbs8/bsp/scr/gbs8_usart.c: 17:     RCSTAbits.RX9 = 0;
  1121  01EE  1283               	bcf	3,5	;RP0=0, select bank0
  1122  01EF  1303               	bcf	3,6	;RP1=0, select bank0
  1123  01F0  1318               	bcf	24,6	;volatile
  1124                           
  1125                           ;../gbs8/bsp/scr/gbs8_usart.c: 18:     BAUDCTLbits.BRG16 = 0;
  1126  01F1  1683               	bsf	3,5	;RP0=1, select bank3
  1127  01F2  1703               	bsf	3,6	;RP1=1, select bank3
  1128  01F3  1187               	bcf	7,3	;volatile
  1129                           
  1130                           ;../gbs8/bsp/scr/gbs8_usart.c: 21:     TXSTAbits.SENDB = 0;
  1131  01F4  1683               	bsf	3,5	;RP0=1, select bank1
  1132  01F5  1303               	bcf	3,6	;RP1=0, select bank1
  1133  01F6  1198               	bcf	24,3	;volatile
  1134                           
  1135                           ;../gbs8/bsp/scr/gbs8_usart.c: 24:     TXSTAbits.BRGH = 1;
  1136  01F7  1518               	bsf	24,2	;volatile
  1137  01F8                     l1486:
  1138                           
  1139                           ;../gbs8/bsp/scr/gbs8_usart.c: 27:     SPBRG = 11059200 / baudRate / 16 - 1;
  1140  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1141  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1142  01FA  0861               	movf	GBS_USART_Init@baudRate,w
  1143  01FB  00D2               	movwf	___aldiv@divisor
  1144  01FC  0862               	movf	GBS_USART_Init@baudRate+1,w
  1145  01FD  00D3               	movwf	___aldiv@divisor+1
  1146  01FE  01D4               	clrf	___aldiv@divisor+2
  1147  01FF  01D5               	clrf	___aldiv@divisor+3
  1148  0200  3000               	movlw	0
  1149  0201  00D9               	movwf	___aldiv@dividend+3
  1150  0202  30A8               	movlw	168
  1151  0203  00D8               	movwf	___aldiv@dividend+2
  1152  0204  30C0               	movlw	192
  1153  0205  00D7               	movwf	___aldiv@dividend+1
  1154  0206  3000               	movlw	0
  1155  0207  00D6               	movwf	___aldiv@dividend
  1156  0208  120A  118A  20E0  120A  118A  	fcall	___aldiv
  1157  020D  1283               	bcf	3,5	;RP0=0, select bank0
  1158  020E  1303               	bcf	3,6	;RP1=0, select bank0
  1159  020F  0855               	movf	?___aldiv+3,w
  1160  0210  00E6               	movwf	_GBS_USART_Init$1753+3
  1161  0211  0854               	movf	?___aldiv+2,w
  1162  0212  00E5               	movwf	_GBS_USART_Init$1753+2
  1163  0213  0853               	movf	?___aldiv+1,w
  1164  0214  00E4               	movwf	_GBS_USART_Init$1753+1
  1165  0215  0852               	movf	?___aldiv,w
  1166  0216  00E3               	movwf	_GBS_USART_Init$1753
  1167                           
  1168                           ;../gbs8/bsp/scr/gbs8_usart.c: 27:     SPBRG = 11059200 / baudRate / 16 - 1;
  1169  0217  3000               	movlw	0
  1170  0218  00D5               	movwf	___aldiv@divisor+3
  1171  0219  3000               	movlw	0
  1172  021A  00D4               	movwf	___aldiv@divisor+2
  1173  021B  3000               	movlw	0
  1174  021C  00D3               	movwf	___aldiv@divisor+1
  1175  021D  3010               	movlw	16
  1176  021E  00D2               	movwf	___aldiv@divisor
  1177  021F  0866               	movf	_GBS_USART_Init$1753+3,w
  1178  0220  00D9               	movwf	___aldiv@dividend+3
  1179  0221  0865               	movf	_GBS_USART_Init$1753+2,w
  1180  0222  00D8               	movwf	___aldiv@dividend+2
  1181  0223  0864               	movf	_GBS_USART_Init$1753+1,w
  1182  0224  00D7               	movwf	___aldiv@dividend+1
  1183  0225  0863               	movf	_GBS_USART_Init$1753,w
  1184  0226  00D6               	movwf	___aldiv@dividend
  1185  0227  120A  118A  20E0  120A  118A  	fcall	___aldiv
  1186  022C  1283               	bcf	3,5	;RP0=0, select bank0
  1187  022D  1303               	bcf	3,6	;RP1=0, select bank0
  1188  022E  0852               	movf	?___aldiv,w
  1189  022F  3EFF               	addlw	255
  1190  0230  1683               	bsf	3,5	;RP0=1, select bank1
  1191  0231  1303               	bcf	3,6	;RP1=0, select bank1
  1192  0232  0099               	movwf	25	;volatile
  1193  0233                     l1488:
  1194                           
  1195                           ;../gbs8/bsp/scr/gbs8_usart.c: 31:     TRISCbits.TRISC7 = 1;
  1196  0233  1787               	bsf	7,7	;volatile
  1197  0234                     l1490:
  1198                           
  1199                           ;../gbs8/bsp/scr/gbs8_usart.c: 34:     TRISCbits.TRISC6 = 0;
  1200  0234  1307               	bcf	7,6	;volatile
  1201  0235                     l1492:
  1202                           
  1203                           ;../gbs8/bsp/scr/gbs8_usart.c: 37:     TXSTAbits.TXEN = 1;
  1204  0235  1698               	bsf	24,5	;volatile
  1205  0236                     l1494:
  1206                           
  1207                           ;../gbs8/bsp/scr/gbs8_usart.c: 38:     RCSTAbits.CREN = 1;
  1208  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1209  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1210  0238  1618               	bsf	24,4	;volatile
  1211  0239                     l1496:
  1212                           
  1213                           ;../gbs8/bsp/scr/gbs8_usart.c: 39:     RCSTAbits.SPEN = 1;
  1214  0239  1798               	bsf	24,7	;volatile
  1215  023A                     l241:
  1216  023A  0008               	return
  1217  023B                     __end_of_GBS_USART_Init:
  1218                           
  1219                           	psect	text2
  1220  00E0                     __ptext2:	
  1221 ;; *************** function ___aldiv *****************
  1222 ;; Defined at:
  1223 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  divisor         4    0[BANK0 ] long 
  1226 ;;  dividend        4    4[BANK0 ] long 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  quotient        4   11[BANK0 ] long 
  1229 ;;  sign            1   10[BANK0 ] unsigned char 
  1230 ;;  counter         1    9[BANK0 ] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  4    0[BANK0 ] long 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, btemp+1
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1240 ;;      Params:         0       8       0       0       0
  1241 ;;      Locals:         0       6       0       0       0
  1242 ;;      Temps:          0       1       0       0       0
  1243 ;;      Totals:         0      15       0       0       0
  1244 ;;Total ram usage:       15 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    4
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_GBS_USART_Init
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function ___aldiv
  1256  00E0                     ___aldiv:
  1257  00E0                     l1440:	
  1258                           ;incstack = 0
  1259                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1260                           
  1261  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1262  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1263  00E2  01DC               	clrf	___aldiv@sign
  1264  00E3                     l1442:
  1265  00E3  1FD5               	btfss	___aldiv@divisor+3,7
  1266  00E4  28E6               	goto	u641
  1267  00E5  28E7               	goto	u640
  1268  00E6                     u641:
  1269  00E6  28F4               	goto	l459
  1270  00E7                     u640:
  1271  00E7                     l1444:
  1272  00E7  09D2               	comf	___aldiv@divisor,f
  1273  00E8  09D3               	comf	___aldiv@divisor+1,f
  1274  00E9  09D4               	comf	___aldiv@divisor+2,f
  1275  00EA  09D5               	comf	___aldiv@divisor+3,f
  1276  00EB  0AD2               	incf	___aldiv@divisor,f
  1277  00EC  1903               	skipnz
  1278  00ED  0AD3               	incf	___aldiv@divisor+1,f
  1279  00EE  1903               	skipnz
  1280  00EF  0AD4               	incf	___aldiv@divisor+2,f
  1281  00F0  1903               	skipnz
  1282  00F1  0AD5               	incf	___aldiv@divisor+3,f
  1283  00F2  01DC               	clrf	___aldiv@sign
  1284  00F3  0ADC               	incf	___aldiv@sign,f
  1285  00F4                     l459:
  1286  00F4  1FD9               	btfss	___aldiv@dividend+3,7
  1287  00F5  28F7               	goto	u651
  1288  00F6  28F8               	goto	u650
  1289  00F7                     u651:
  1290  00F7  2907               	goto	l1450
  1291  00F8                     u650:
  1292  00F8                     l1446:
  1293  00F8  09D6               	comf	___aldiv@dividend,f
  1294  00F9  09D7               	comf	___aldiv@dividend+1,f
  1295  00FA  09D8               	comf	___aldiv@dividend+2,f
  1296  00FB  09D9               	comf	___aldiv@dividend+3,f
  1297  00FC  0AD6               	incf	___aldiv@dividend,f
  1298  00FD  1903               	skipnz
  1299  00FE  0AD7               	incf	___aldiv@dividend+1,f
  1300  00FF  1903               	skipnz
  1301  0100  0AD8               	incf	___aldiv@dividend+2,f
  1302  0101  1903               	skipnz
  1303  0102  0AD9               	incf	___aldiv@dividend+3,f
  1304  0103                     l1448:
  1305  0103  3001               	movlw	1
  1306  0104  00FF               	movwf	btemp+1
  1307  0105  087F               	movf	btemp+1,w
  1308  0106  06DC               	xorwf	___aldiv@sign,f
  1309  0107                     l1450:
  1310  0107  3000               	movlw	0
  1311  0108  00E0               	movwf	___aldiv@quotient+3
  1312  0109  3000               	movlw	0
  1313  010A  00DF               	movwf	___aldiv@quotient+2
  1314  010B  3000               	movlw	0
  1315  010C  00DE               	movwf	___aldiv@quotient+1
  1316  010D  3000               	movlw	0
  1317  010E  00DD               	movwf	___aldiv@quotient
  1318  010F                     l1452:
  1319  010F  0855               	movf	___aldiv@divisor+3,w
  1320  0110  0454               	iorwf	___aldiv@divisor+2,w
  1321  0111  0453               	iorwf	___aldiv@divisor+1,w
  1322  0112  0452               	iorwf	___aldiv@divisor,w
  1323  0113  1903               	skipnz
  1324  0114  2916               	goto	u661
  1325  0115  2917               	goto	u660
  1326  0116                     u661:
  1327  0116  2964               	goto	l1474
  1328  0117                     u660:
  1329  0117                     l1454:
  1330  0117  01DB               	clrf	___aldiv@counter
  1331  0118  0ADB               	incf	___aldiv@counter,f
  1332  0119  2927               	goto	l1460
  1333  011A                     l1456:
  1334  011A  3001               	movlw	1
  1335  011B  00DA               	movwf	??___aldiv
  1336  011C                     u675:
  1337  011C  1003               	clrc
  1338  011D  0DD2               	rlf	___aldiv@divisor,f
  1339  011E  0DD3               	rlf	___aldiv@divisor+1,f
  1340  011F  0DD4               	rlf	___aldiv@divisor+2,f
  1341  0120  0DD5               	rlf	___aldiv@divisor+3,f
  1342  0121  0BDA               	decfsz	??___aldiv,f
  1343  0122  291C               	goto	u675
  1344  0123                     l1458:
  1345  0123  3001               	movlw	1
  1346  0124  00FF               	movwf	btemp+1
  1347  0125  087F               	movf	btemp+1,w
  1348  0126  07DB               	addwf	___aldiv@counter,f
  1349  0127                     l1460:
  1350  0127  1FD5               	btfss	___aldiv@divisor+3,7
  1351  0128  292A               	goto	u681
  1352  0129  292B               	goto	u680
  1353  012A                     u681:
  1354  012A  291A               	goto	l1456
  1355  012B                     u680:
  1356  012B                     l1462:
  1357  012B  3001               	movlw	1
  1358  012C  00DA               	movwf	??___aldiv
  1359  012D                     u695:
  1360  012D  1003               	clrc
  1361  012E  0DDD               	rlf	___aldiv@quotient,f
  1362  012F  0DDE               	rlf	___aldiv@quotient+1,f
  1363  0130  0DDF               	rlf	___aldiv@quotient+2,f
  1364  0131  0DE0               	rlf	___aldiv@quotient+3,f
  1365  0132  0BDA               	decfsz	??___aldiv,f
  1366  0133  292D               	goto	u695
  1367  0134                     l1464:
  1368  0134  0855               	movf	___aldiv@divisor+3,w
  1369  0135  0259               	subwf	___aldiv@dividend+3,w
  1370  0136  1D03               	skipz
  1371  0137  2942               	goto	u705
  1372  0138  0854               	movf	___aldiv@divisor+2,w
  1373  0139  0258               	subwf	___aldiv@dividend+2,w
  1374  013A  1D03               	skipz
  1375  013B  2942               	goto	u705
  1376  013C  0853               	movf	___aldiv@divisor+1,w
  1377  013D  0257               	subwf	___aldiv@dividend+1,w
  1378  013E  1D03               	skipz
  1379  013F  2942               	goto	u705
  1380  0140  0852               	movf	___aldiv@divisor,w
  1381  0141  0256               	subwf	___aldiv@dividend,w
  1382  0142                     u705:
  1383  0142  1C03               	skipc
  1384  0143  2945               	goto	u701
  1385  0144  2946               	goto	u700
  1386  0145                     u701:
  1387  0145  2955               	goto	l1470
  1388  0146                     u700:
  1389  0146                     l1466:
  1390  0146  0852               	movf	___aldiv@divisor,w
  1391  0147  02D6               	subwf	___aldiv@dividend,f
  1392  0148  0853               	movf	___aldiv@divisor+1,w
  1393  0149  1C03               	skipc
  1394  014A  0F53               	incfsz	___aldiv@divisor+1,w
  1395  014B  02D7               	subwf	___aldiv@dividend+1,f
  1396  014C  0854               	movf	___aldiv@divisor+2,w
  1397  014D  1C03               	skipc
  1398  014E  0F54               	incfsz	___aldiv@divisor+2,w
  1399  014F  02D8               	subwf	___aldiv@dividend+2,f
  1400  0150  0855               	movf	___aldiv@divisor+3,w
  1401  0151  1C03               	skipc
  1402  0152  0F55               	incfsz	___aldiv@divisor+3,w
  1403  0153  02D9               	subwf	___aldiv@dividend+3,f
  1404  0154                     l1468:
  1405  0154  145D               	bsf	___aldiv@quotient,0
  1406  0155                     l1470:
  1407  0155  3001               	movlw	1
  1408  0156                     u715:
  1409  0156  1003               	clrc
  1410  0157  0CD5               	rrf	___aldiv@divisor+3,f
  1411  0158  0CD4               	rrf	___aldiv@divisor+2,f
  1412  0159  0CD3               	rrf	___aldiv@divisor+1,f
  1413  015A  0CD2               	rrf	___aldiv@divisor,f
  1414  015B  3EFF               	addlw	-1
  1415  015C  1D03               	skipz
  1416  015D  2956               	goto	u715
  1417  015E                     l1472:
  1418  015E  3001               	movlw	1
  1419  015F  02DB               	subwf	___aldiv@counter,f
  1420  0160  1D03               	btfss	3,2
  1421  0161  2963               	goto	u721
  1422  0162  2964               	goto	u720
  1423  0163                     u721:
  1424  0163  292B               	goto	l1462
  1425  0164                     u720:
  1426  0164                     l1474:
  1427  0164  085C               	movf	___aldiv@sign,w
  1428  0165  1903               	btfsc	3,2
  1429  0166  2968               	goto	u731
  1430  0167  2969               	goto	u730
  1431  0168                     u731:
  1432  0168  2974               	goto	l1478
  1433  0169                     u730:
  1434  0169                     l1476:
  1435  0169  09DD               	comf	___aldiv@quotient,f
  1436  016A  09DE               	comf	___aldiv@quotient+1,f
  1437  016B  09DF               	comf	___aldiv@quotient+2,f
  1438  016C  09E0               	comf	___aldiv@quotient+3,f
  1439  016D  0ADD               	incf	___aldiv@quotient,f
  1440  016E  1903               	skipnz
  1441  016F  0ADE               	incf	___aldiv@quotient+1,f
  1442  0170  1903               	skipnz
  1443  0171  0ADF               	incf	___aldiv@quotient+2,f
  1444  0172  1903               	skipnz
  1445  0173  0AE0               	incf	___aldiv@quotient+3,f
  1446  0174                     l1478:
  1447  0174  0860               	movf	___aldiv@quotient+3,w
  1448  0175  00D5               	movwf	?___aldiv+3
  1449  0176  085F               	movf	___aldiv@quotient+2,w
  1450  0177  00D4               	movwf	?___aldiv+2
  1451  0178  085E               	movf	___aldiv@quotient+1,w
  1452  0179  00D3               	movwf	?___aldiv+1
  1453  017A  085D               	movf	___aldiv@quotient,w
  1454  017B  00D2               	movwf	?___aldiv
  1455  017C                     l469:
  1456  017C  0008               	return
  1457  017D                     __end_of___aldiv:
  1458                           
  1459                           	psect	text3
  1460  002F                     __ptext3:	
  1461 ;; *************** function _GBS_Message_Update *****************
  1462 ;; Defined at:
  1463 ;;		line 151 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;		None
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1477 ;;      Params:         0       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0
  1479 ;;      Temps:          0       0       0       0       0
  1480 ;;      Totals:         0       0       0       0       0
  1481 ;;Total ram usage:        0 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    6
  1484 ;; This function calls:
  1485 ;;		_GBS_USART_Send
  1486 ;;		_GBS_USART_Write_Char
  1487 ;; This function is called by:
  1488 ;;		_main
  1489 ;; This function uses a non-reentrant model
  1490 ;;
  1491                           
  1492                           
  1493                           ;psect for function _GBS_Message_Update
  1494  002F                     _GBS_Message_Update:
  1495  002F                     l1498:	
  1496                           ;incstack = 0
  1497                           ; Regs used in _GBS_Message_Update: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498                           
  1499                           
  1500                           ;../gbs8/bsp/scr/gbs8_usart.c: 153:     if (ctrlBits.s0)
  1501  002F  1C7C               	btfss	_ctrlBits+1,0
  1502  0030  2832               	goto	u741
  1503  0031  2833               	goto	u740
  1504  0032                     u741:
  1505  0032  2845               	goto	l1504
  1506  0033                     u740:
  1507  0033                     l1500:
  1508                           
  1509                           ;../gbs8/bsp/scr/gbs8_usart.c: 154:     {;../gbs8/bsp/scr/gbs8_usart.c: 155:         ctr
      +                          lBits.s0 = 0;
  1510  0033  107C               	bcf	_ctrlBits+1,0
  1511  0034                     l1502:
  1512                           
  1513                           ;../gbs8/bsp/scr/gbs8_usart.c: 156:         GBS_USART_Write_Char("CReceived", sizeof("CR
      +                          eceived"));
  1514  0034  300A               	movlw	10
  1515  0035  00FF               	movwf	btemp+1
  1516  0036  087F               	movf	btemp+1,w
  1517  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0039  00D5               	movwf	GBS_USART_Write_Char@size
  1520  003A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1521  003B  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1522                           
  1523                           ;../gbs8/bsp/scr/gbs8_usart.c: 157:         GBS_USART_Send();
  1524  0040  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1525  0045                     l1504:
  1526                           
  1527                           ;../gbs8/bsp/scr/gbs8_usart.c: 159:     if (ctrlBits.s1)
  1528  0045  1CFC               	btfss	_ctrlBits+1,1
  1529  0046  2848               	goto	u751
  1530  0047  2849               	goto	u750
  1531  0048                     u751:
  1532  0048  285B               	goto	l1510
  1533  0049                     u750:
  1534  0049                     l1506:
  1535                           
  1536                           ;../gbs8/bsp/scr/gbs8_usart.c: 160:     {;../gbs8/bsp/scr/gbs8_usart.c: 161:         ctr
      +                          lBits.s1 = 0;
  1537  0049  10FC               	bcf	_ctrlBits+1,1
  1538  004A                     l1508:
  1539                           
  1540                           ;../gbs8/bsp/scr/gbs8_usart.c: 162:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1541  004A  3005               	movlw	5
  1542  004B  00FF               	movwf	btemp+1
  1543  004C  087F               	movf	btemp+1,w
  1544  004D  1283               	bcf	3,5	;RP0=0, select bank0
  1545  004E  1303               	bcf	3,6	;RP1=0, select bank0
  1546  004F  00D5               	movwf	GBS_USART_Write_Char@size
  1547  0050  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1548  0051  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1549                           
  1550                           ;../gbs8/bsp/scr/gbs8_usart.c: 163:         GBS_USART_Send();
  1551  0056  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1552  005B                     l1510:
  1553                           
  1554                           ;../gbs8/bsp/scr/gbs8_usart.c: 165:     if (ctrlBits.s2)
  1555  005B  1D7C               	btfss	_ctrlBits+1,2
  1556  005C  285E               	goto	u761
  1557  005D  285F               	goto	u760
  1558  005E                     u761:
  1559  005E  2871               	goto	l1516
  1560  005F                     u760:
  1561  005F                     l1512:
  1562                           
  1563                           ;../gbs8/bsp/scr/gbs8_usart.c: 166:     {;../gbs8/bsp/scr/gbs8_usart.c: 167:         ctr
      +                          lBits.s2 = 0;
  1564  005F  117C               	bcf	_ctrlBits+1,2
  1565  0060                     l1514:
  1566                           
  1567                           ;../gbs8/bsp/scr/gbs8_usart.c: 168:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1568  0060  3005               	movlw	5
  1569  0061  00FF               	movwf	btemp+1
  1570  0062  087F               	movf	btemp+1,w
  1571  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0065  00D5               	movwf	GBS_USART_Write_Char@size
  1574  0066  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1575  0067  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1576                           
  1577                           ;../gbs8/bsp/scr/gbs8_usart.c: 169:         GBS_USART_Send();
  1578  006C  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1579  0071                     l1516:
  1580                           
  1581                           ;../gbs8/bsp/scr/gbs8_usart.c: 171:     if (ctrlBits.s3)
  1582  0071  1DFC               	btfss	_ctrlBits+1,3
  1583  0072  2874               	goto	u771
  1584  0073  2875               	goto	u770
  1585  0074                     u771:
  1586  0074  2887               	goto	l1522
  1587  0075                     u770:
  1588  0075                     l1518:
  1589                           
  1590                           ;../gbs8/bsp/scr/gbs8_usart.c: 172:     {;../gbs8/bsp/scr/gbs8_usart.c: 173:         ctr
      +                          lBits.s3 = 0;
  1591  0075  11FC               	bcf	_ctrlBits+1,3
  1592  0076                     l1520:
  1593                           
  1594                           ;../gbs8/bsp/scr/gbs8_usart.c: 174:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1595  0076  3005               	movlw	5
  1596  0077  00FF               	movwf	btemp+1
  1597  0078  087F               	movf	btemp+1,w
  1598  0079  1283               	bcf	3,5	;RP0=0, select bank0
  1599  007A  1303               	bcf	3,6	;RP1=0, select bank0
  1600  007B  00D5               	movwf	GBS_USART_Write_Char@size
  1601  007C  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1602  007D  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1603                           
  1604                           ;../gbs8/bsp/scr/gbs8_usart.c: 175:         GBS_USART_Send();
  1605  0082  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1606  0087                     l1522:
  1607                           
  1608                           ;../gbs8/bsp/scr/gbs8_usart.c: 177:     if (ctrlBits.s4)
  1609  0087  1E7C               	btfss	_ctrlBits+1,4
  1610  0088  288A               	goto	u781
  1611  0089  288B               	goto	u780
  1612  008A                     u781:
  1613  008A  289D               	goto	l1528
  1614  008B                     u780:
  1615  008B                     l1524:
  1616                           
  1617                           ;../gbs8/bsp/scr/gbs8_usart.c: 178:     {;../gbs8/bsp/scr/gbs8_usart.c: 179:         ctr
      +                          lBits.s4 = 0;
  1618  008B  127C               	bcf	_ctrlBits+1,4
  1619  008C                     l1526:
  1620                           
  1621                           ;../gbs8/bsp/scr/gbs8_usart.c: 180:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1622  008C  3005               	movlw	5
  1623  008D  00FF               	movwf	btemp+1
  1624  008E  087F               	movf	btemp+1,w
  1625  008F  1283               	bcf	3,5	;RP0=0, select bank0
  1626  0090  1303               	bcf	3,6	;RP1=0, select bank0
  1627  0091  00D5               	movwf	GBS_USART_Write_Char@size
  1628  0092  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1629  0093  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1630                           
  1631                           ;../gbs8/bsp/scr/gbs8_usart.c: 181:         GBS_USART_Send();
  1632  0098  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1633  009D                     l1528:
  1634                           
  1635                           ;../gbs8/bsp/scr/gbs8_usart.c: 183:     if (ctrlBits.s5)
  1636  009D  1EFC               	btfss	_ctrlBits+1,5
  1637  009E  28A0               	goto	u791
  1638  009F  28A1               	goto	u790
  1639  00A0                     u791:
  1640  00A0  28B3               	goto	l1534
  1641  00A1                     u790:
  1642  00A1                     l1530:
  1643                           
  1644                           ;../gbs8/bsp/scr/gbs8_usart.c: 184:     {;../gbs8/bsp/scr/gbs8_usart.c: 185:         ctr
      +                          lBits.s5 = 0;
  1645  00A1  12FC               	bcf	_ctrlBits+1,5
  1646  00A2                     l1532:
  1647                           
  1648                           ;../gbs8/bsp/scr/gbs8_usart.c: 186:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1649  00A2  3005               	movlw	5
  1650  00A3  00FF               	movwf	btemp+1
  1651  00A4  087F               	movf	btemp+1,w
  1652  00A5  1283               	bcf	3,5	;RP0=0, select bank0
  1653  00A6  1303               	bcf	3,6	;RP1=0, select bank0
  1654  00A7  00D5               	movwf	GBS_USART_Write_Char@size
  1655  00A8  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1656  00A9  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1657                           
  1658                           ;../gbs8/bsp/scr/gbs8_usart.c: 187:         GBS_USART_Send();
  1659  00AE  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1660  00B3                     l1534:
  1661                           
  1662                           ;../gbs8/bsp/scr/gbs8_usart.c: 189:     if (ctrlBits.s6)
  1663  00B3  1F7C               	btfss	_ctrlBits+1,6
  1664  00B4  28B6               	goto	u801
  1665  00B5  28B7               	goto	u800
  1666  00B6                     u801:
  1667  00B6  28C9               	goto	l1540
  1668  00B7                     u800:
  1669  00B7                     l1536:
  1670                           
  1671                           ;../gbs8/bsp/scr/gbs8_usart.c: 190:     {;../gbs8/bsp/scr/gbs8_usart.c: 191:         ctr
      +                          lBits.s6 = 0;
  1672  00B7  137C               	bcf	_ctrlBits+1,6
  1673  00B8                     l1538:
  1674                           
  1675                           ;../gbs8/bsp/scr/gbs8_usart.c: 192:         GBS_USART_Write_Char("NULL", sizeof("NULL"))
      +                          ;
  1676  00B8  3005               	movlw	5
  1677  00B9  00FF               	movwf	btemp+1
  1678  00BA  087F               	movf	btemp+1,w
  1679  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1680  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1681  00BD  00D5               	movwf	GBS_USART_Write_Char@size
  1682  00BE  3015               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1683  00BF  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1684                           
  1685                           ;../gbs8/bsp/scr/gbs8_usart.c: 193:         GBS_USART_Send();
  1686  00C4  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1687  00C9                     l1540:
  1688                           
  1689                           ;../gbs8/bsp/scr/gbs8_usart.c: 195:     if (ctrlBits.sd)
  1690  00C9  1FFC               	btfss	_ctrlBits+1,7
  1691  00CA  28CC               	goto	u811
  1692  00CB  28CD               	goto	u810
  1693  00CC                     u811:
  1694  00CC  28DF               	goto	l308
  1695  00CD                     u810:
  1696  00CD                     l1542:
  1697                           
  1698                           ;../gbs8/bsp/scr/gbs8_usart.c: 196:     {;../gbs8/bsp/scr/gbs8_usart.c: 197:         ctr
      +                          lBits.sd = 0;
  1699  00CD  13FC               	bcf	_ctrlBits+1,7
  1700  00CE                     l1544:
  1701                           
  1702                           ;../gbs8/bsp/scr/gbs8_usart.c: 198:         GBS_USART_Write_Char("DReceived", sizeof("DR
      +                          eceived"));
  1703  00CE  300A               	movlw	10
  1704  00CF  00FF               	movwf	btemp+1
  1705  00D0  087F               	movf	btemp+1,w
  1706  00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1707  00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1708  00D3  00D5               	movwf	GBS_USART_Write_Char@size
  1709  00D4  300B               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1710  00D5  120A  118A  223B  120A  118A  	fcall	_GBS_USART_Write_Char
  1711                           
  1712                           ;../gbs8/bsp/scr/gbs8_usart.c: 199:         GBS_USART_Send();
  1713  00DA  120A  118A  236B  120A  118A  	fcall	_GBS_USART_Send
  1714  00DF                     l308:
  1715  00DF  0008               	return
  1716  00E0                     __end_of_GBS_Message_Update:
  1717                           
  1718                           	psect	text4
  1719  023B                     __ptext4:	
  1720 ;; *************** function _GBS_USART_Write_Char *****************
  1721 ;; Defined at:
  1722 ;;		line 138 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;  c               1    wreg     PTR unsigned char 
  1725 ;;		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(5), 
  1726 ;;		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(10), 
  1727 ;;  size            1    3[BANK0 ] unsigned char 
  1728 ;; Auto vars:     Size  Location     Type
  1729 ;;  c               1    7[BANK0 ] PTR unsigned char 
  1730 ;;		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(5), 
  1731 ;;		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(10), 
  1732 ;;  i               1    6[BANK0 ] unsigned char 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       1       0       0       0
  1743 ;;      Locals:         0       2       0       0       0
  1744 ;;      Temps:          0       2       0       0       0
  1745 ;;      Totals:         0       5       0       0       0
  1746 ;;Total ram usage:        5 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    5
  1749 ;; This function calls:
  1750 ;;		_GBS_USART_Buffer_Write
  1751 ;; This function is called by:
  1752 ;;		_GBS_Message_Update
  1753 ;; This function uses a non-reentrant model
  1754 ;;
  1755                           
  1756                           
  1757                           ;psect for function _GBS_USART_Write_Char
  1758  023B                     _GBS_USART_Write_Char:
  1759                           
  1760                           ;incstack = 0
  1761                           ; Regs used in _GBS_USART_Write_Char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1762                           ;GBS_USART_Write_Char@c stored from wreg
  1763  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1764  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1765  023D  00D9               	movwf	GBS_USART_Write_Char@c
  1766  023E                     l1428:
  1767                           
  1768                           ;../gbs8/bsp/scr/gbs8_usart.c: 138: void GBS_USART_Write_Char(char* c, uint8_t size);../
      +                          gbs8/bsp/scr/gbs8_usart.c: 139: {;../gbs8/bsp/scr/gbs8_usart.c: 140:     if (size < (16 
      +                          -2))
  1769  023E  300E               	movlw	14
  1770  023F  0255               	subwf	GBS_USART_Write_Char@size,w
  1771  0240  1803               	skipnc
  1772  0241  2A43               	goto	u621
  1773  0242  2A44               	goto	u620
  1774  0243                     u621:
  1775  0243  2A89               	goto	l297
  1776  0244                     u620:
  1777  0244                     l1430:
  1778                           
  1779                           ;../gbs8/bsp/scr/gbs8_usart.c: 141:     {;../gbs8/bsp/scr/gbs8_usart.c: 142:         for
      +                           (uint8_t i = 0; i<(size-1); i++)
  1780  0244  01D8               	clrf	GBS_USART_Write_Char@i
  1781  0245  2A5F               	goto	l1436
  1782  0246                     l1432:
  1783                           
  1784                           ;../gbs8/bsp/scr/gbs8_usart.c: 143:         {;../gbs8/bsp/scr/gbs8_usart.c: 144:        
      +                               GBS_USART_Buffer_Write(&usartSendBuffer, c[i]);
  1785  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1786  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1787  0248  0858               	movf	GBS_USART_Write_Char@i,w
  1788  0249  0759               	addwf	GBS_USART_Write_Char@c,w
  1789  024A  0084               	movwf	4
  1790  024B  120A  118A  2330  120A  118A  	fcall	stringdir
  1791  0250  00FF               	movwf	btemp+1
  1792  0251  087F               	movf	btemp+1,w
  1793  0252  00D2               	movwf	GBS_USART_Buffer_Write@value
  1794  0253  3020               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1795  0254  120A  118A  228A  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1796  0259                     l1434:
  1797                           
  1798                           ;../gbs8/bsp/scr/gbs8_usart.c: 145:         }
  1799  0259  3001               	movlw	1
  1800  025A  00FF               	movwf	btemp+1
  1801  025B  087F               	movf	btemp+1,w
  1802  025C  1283               	bcf	3,5	;RP0=0, select bank0
  1803  025D  1303               	bcf	3,6	;RP1=0, select bank0
  1804  025E  07D8               	addwf	GBS_USART_Write_Char@i,f
  1805  025F                     l1436:
  1806  025F  0855               	movf	GBS_USART_Write_Char@size,w
  1807  0260  3EFF               	addlw	255
  1808  0261  00D6               	movwf	??_GBS_USART_Write_Char
  1809  0262  30FF               	movlw	255
  1810  0263  1803               	skipnc
  1811  0264  3000               	movlw	0
  1812  0265  00D7               	movwf	??_GBS_USART_Write_Char+1
  1813  0266  0857               	movf	??_GBS_USART_Write_Char+1,w
  1814  0267  3A80               	xorlw	128
  1815  0268  3C80               	sublw	128
  1816  0269  1D03               	skipz
  1817  026A  2A6D               	goto	u635
  1818  026B  0856               	movf	??_GBS_USART_Write_Char,w
  1819  026C  0258               	subwf	GBS_USART_Write_Char@i,w
  1820  026D                     u635:
  1821  026D  1C03               	skipc
  1822  026E  2A70               	goto	u631
  1823  026F  2A71               	goto	u630
  1824  0270                     u631:
  1825  0270  2A46               	goto	l1432
  1826  0271                     u630:
  1827  0271                     l1438:
  1828                           
  1829                           ;../gbs8/bsp/scr/gbs8_usart.c: 146:         GBS_USART_Buffer_Write(&usartSendBuffer, 13)
      +                          ;
  1830  0271  300D               	movlw	13
  1831  0272  00FF               	movwf	btemp+1
  1832  0273  087F               	movf	btemp+1,w
  1833  0274  1283               	bcf	3,5	;RP0=0, select bank0
  1834  0275  1303               	bcf	3,6	;RP1=0, select bank0
  1835  0276  00D2               	movwf	GBS_USART_Buffer_Write@value
  1836  0277  3020               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1837  0278  120A  118A  228A  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1838                           
  1839                           ;../gbs8/bsp/scr/gbs8_usart.c: 147:         GBS_USART_Buffer_Write(&usartSendBuffer, 10)
      +                          ;
  1840  027D  300A               	movlw	10
  1841  027E  00FF               	movwf	btemp+1
  1842  027F  087F               	movf	btemp+1,w
  1843  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1844  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1845  0282  00D2               	movwf	GBS_USART_Buffer_Write@value
  1846  0283  3020               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1847  0284  120A  118A  228A  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1848  0289                     l297:
  1849  0289  0008               	return
  1850  028A                     __end_of_GBS_USART_Write_Char:
  1851                           
  1852                           	psect	text5
  1853  028A                     __ptext5:	
  1854 ;; *************** function _GBS_USART_Buffer_Write *****************
  1855 ;; Defined at:
  1856 ;;		line 42 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1857 ;; Parameters:    Size  Location     Type
  1858 ;;  buffer          1    wreg     PTR struct .
  1859 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1860 ;;  value           1    0[BANK0 ] unsigned char 
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;  buffer          1    2[BANK0 ] PTR struct .
  1863 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  1    wreg      void 
  1866 ;; Registers used:
  1867 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       1       0       0       0
  1874 ;;      Locals:         0       1       0       0       0
  1875 ;;      Temps:          0       1       0       0       0
  1876 ;;      Totals:         0       3       0       0       0
  1877 ;;Total ram usage:        3 bytes
  1878 ;; Hardware stack levels used:    1
  1879 ;; Hardware stack levels required when called:    4
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_GBS_USART_Write_Char
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function _GBS_USART_Buffer_Write
  1889  028A                     _GBS_USART_Buffer_Write:
  1890                           
  1891                           ;incstack = 0
  1892                           ; Regs used in _GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1893                           ;GBS_USART_Buffer_Write@buffer stored from wreg
  1894  028A  1283               	bcf	3,5	;RP0=0, select bank0
  1895  028B  1303               	bcf	3,6	;RP1=0, select bank0
  1896  028C  00D4               	movwf	GBS_USART_Buffer_Write@buffer
  1897  028D                     l1396:
  1898                           
  1899                           ;../gbs8/bsp/scr/gbs8_usart.c: 42: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 43: {;../gbs8/bsp/scr/gbs8_usart.c: 44:     
      +                          buffer->buffer[buffer->tail] = value;
  1900  028D  0852               	movf	GBS_USART_Buffer_Write@value,w
  1901  028E  00FF               	movwf	btemp+1
  1902  028F  0854               	movf	GBS_USART_Buffer_Write@buffer,w
  1903  0290  3E11               	addlw	17
  1904  0291  0084               	movwf	4
  1905  0292  1383               	bcf	3,7	;select IRP bank0
  1906  0293  0800               	movf	0,w
  1907  0294  0754               	addwf	GBS_USART_Buffer_Write@buffer,w
  1908  0295  00D3               	movwf	??_GBS_USART_Buffer_Write
  1909  0296  0853               	movf	??_GBS_USART_Buffer_Write,w
  1910  0297  0084               	movwf	4
  1911  0298  087F               	movf	btemp+1,w
  1912  0299  0080               	movwf	0
  1913                           
  1914                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     buffer->tail = (buffer->tail + 1)%16;
  1915  029A  0854               	movf	GBS_USART_Buffer_Write@buffer,w
  1916  029B  3E11               	addlw	17
  1917  029C  0084               	movwf	4
  1918  029D  0800               	movf	0,w
  1919  029E  3E01               	addlw	1
  1920  029F  390F               	andlw	15
  1921  02A0  00FF               	movwf	btemp+1
  1922  02A1  0854               	movf	GBS_USART_Buffer_Write@buffer,w
  1923  02A2  3E11               	addlw	17
  1924  02A3  0084               	movwf	4
  1925  02A4  087F               	movf	btemp+1,w
  1926  02A5  0080               	movwf	0
  1927  02A6                     l1398:
  1928                           
  1929                           ;../gbs8/bsp/scr/gbs8_usart.c: 46:     if (buffer->size<16) buffer->size++;
  1930  02A6  0854               	movf	GBS_USART_Buffer_Write@buffer,w
  1931  02A7  3E12               	addlw	18
  1932  02A8  0084               	movwf	4
  1933  02A9  3010               	movlw	16
  1934  02AA  0200               	subwf	0,w
  1935  02AB  1803               	skipnc
  1936  02AC  2AAE               	goto	u571
  1937  02AD  2AAF               	goto	u570
  1938  02AE                     u571:
  1939  02AE  2AB6               	goto	l245
  1940  02AF                     u570:
  1941  02AF                     l1400:
  1942  02AF  3001               	movlw	1
  1943  02B0  00FF               	movwf	btemp+1
  1944  02B1  0854               	movf	GBS_USART_Buffer_Write@buffer,w
  1945  02B2  3E12               	addlw	18
  1946  02B3  0084               	movwf	4
  1947  02B4  087F               	movf	btemp+1,w
  1948  02B5  0780               	addwf	0,f
  1949  02B6                     l245:
  1950  02B6  0008               	return
  1951  02B7                     __end_of_GBS_USART_Buffer_Write:
  1952                           
  1953                           	psect	text6
  1954  036B                     __ptext6:	
  1955 ;; *************** function _GBS_USART_Send *****************
  1956 ;; Defined at:
  1957 ;;		line 61 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;		None
  1960 ;; Auto vars:     Size  Location     Type
  1961 ;;		None
  1962 ;; Return value:  Size  Location     Type
  1963 ;;                  1    wreg      void 
  1964 ;; Registers used:
  1965 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1966 ;; Tracked objects:
  1967 ;;		On entry : 0/0
  1968 ;;		On exit  : 0/0
  1969 ;;		Unchanged: 0/0
  1970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1971 ;;      Params:         0       0       0       0       0
  1972 ;;      Locals:         0       0       0       0       0
  1973 ;;      Temps:          0       0       0       0       0
  1974 ;;      Totals:         0       0       0       0       0
  1975 ;;Total ram usage:        0 bytes
  1976 ;; Hardware stack levels used:    1
  1977 ;; Hardware stack levels required when called:    5
  1978 ;; This function calls:
  1979 ;;		_GBS_USART_Buffer_Read
  1980 ;; This function is called by:
  1981 ;;		_GBS_Message_Update
  1982 ;; This function uses a non-reentrant model
  1983 ;;
  1984                           
  1985                           
  1986                           ;psect for function _GBS_USART_Send
  1987  036B                     _GBS_USART_Send:
  1988  036B                     l1420:	
  1989                           ;incstack = 0
  1990                           ; Regs used in _GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1991                           
  1992                           
  1993                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     while (usartSendBuffer.size>0)
  1994  036B  2B7B               	goto	l1424
  1995  036C                     l1422:
  1996                           
  1997                           ;../gbs8/bsp/scr/gbs8_usart.c: 65:     {;../gbs8/bsp/scr/gbs8_usart.c: 66:         TXREG
      +                           = GBS_USART_Buffer_Read(&usartSendBuffer);
  1998  036C  3020               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1999  036D  120A  118A  22B7  120A  118A  	fcall	_GBS_USART_Buffer_Read
  2000  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2001  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2002  0374  0099               	movwf	25	;volatile
  2003  0375                     l254:	
  2004                           ;../gbs8/bsp/scr/gbs8_usart.c: 67:         while (TXSTAbits.TRMT==0);
  2005                           
  2006  0375  1683               	bsf	3,5	;RP0=1, select bank1
  2007  0376  1303               	bcf	3,6	;RP1=0, select bank1
  2008  0377  1C98               	btfss	24,1	;volatile
  2009  0378  2B7A               	goto	u601
  2010  0379  2B7B               	goto	u600
  2011  037A                     u601:
  2012  037A  2B75               	goto	l254
  2013  037B                     u600:
  2014  037B                     l1424:
  2015                           
  2016                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     while (usartSendBuffer.size>0)
  2017  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2018  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2019  037D  0832               	movf	_usartSendBuffer+18,w
  2020  037E  1D03               	btfss	3,2
  2021  037F  2B81               	goto	u611
  2022  0380  2B82               	goto	u610
  2023  0381                     u611:
  2024  0381  2B6C               	goto	l1422
  2025  0382                     u610:
  2026  0382                     l258:
  2027  0382  0008               	return
  2028  0383                     __end_of_GBS_USART_Send:
  2029                           
  2030                           	psect	text7
  2031  02B7                     __ptext7:	
  2032 ;; *************** function _GBS_USART_Buffer_Read *****************
  2033 ;; Defined at:
  2034 ;;		line 49 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2035 ;; Parameters:    Size  Location     Type
  2036 ;;  buffer          1    wreg     PTR struct .
  2037 ;;		 -> usartSendBuffer(19), 
  2038 ;; Auto vars:     Size  Location     Type
  2039 ;;  buffer          1    2[BANK0 ] PTR struct .
  2040 ;;		 -> usartSendBuffer(19), 
  2041 ;;  result          1    1[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      unsigned char 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       0       0       0       0
  2052 ;;      Locals:         0       2       0       0       0
  2053 ;;      Temps:          0       1       0       0       0
  2054 ;;      Totals:         0       3       0       0       0
  2055 ;;Total ram usage:        3 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    4
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_GBS_USART_Send
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           
  2066                           ;psect for function _GBS_USART_Buffer_Read
  2067  02B7                     _GBS_USART_Buffer_Read:
  2068                           
  2069                           ;incstack = 0
  2070                           ; Regs used in _GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  2071                           ;GBS_USART_Buffer_Read@buffer stored from wreg
  2072  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2073  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2074  02B9  00D4               	movwf	GBS_USART_Buffer_Read@buffer
  2075  02BA                     l1402:
  2076                           
  2077                           ;../gbs8/bsp/scr/gbs8_usart.c: 49: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 50: {;../gbs8/bsp/scr/gbs8_usart.c: 51:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 52:     if (buffer->size>0)
  2078  02BA  0854               	movf	GBS_USART_Buffer_Read@buffer,w
  2079  02BB  3E12               	addlw	18
  2080  02BC  0084               	movwf	4
  2081  02BD  1383               	bcf	3,7	;select IRP bank0
  2082  02BE  0800               	movf	0,w
  2083  02BF  1903               	btfsc	3,2
  2084  02C0  2AC2               	goto	u581
  2085  02C1  2AC3               	goto	u580
  2086  02C2                     u581:
  2087  02C2  2AE1               	goto	l249
  2088  02C3                     u580:
  2089  02C3                     l1404:
  2090                           
  2091                           ;../gbs8/bsp/scr/gbs8_usart.c: 53:     {;../gbs8/bsp/scr/gbs8_usart.c: 54:         resul
      +                          t = buffer->buffer[buffer->head];
  2092  02C3  0854               	movf	GBS_USART_Buffer_Read@buffer,w
  2093  02C4  3E10               	addlw	16
  2094  02C5  0084               	movwf	4
  2095  02C6  0800               	movf	0,w
  2096  02C7  0754               	addwf	GBS_USART_Buffer_Read@buffer,w
  2097  02C8  00D2               	movwf	??_GBS_USART_Buffer_Read
  2098  02C9  0852               	movf	??_GBS_USART_Buffer_Read,w
  2099  02CA  0084               	movwf	4
  2100  02CB  0800               	movf	0,w
  2101  02CC  00FF               	movwf	btemp+1
  2102  02CD  087F               	movf	btemp+1,w
  2103  02CE  00D3               	movwf	GBS_USART_Buffer_Read@result
  2104                           
  2105                           ;../gbs8/bsp/scr/gbs8_usart.c: 55:         buffer->head = (buffer->head + 1)%16;
  2106  02CF  0854               	movf	GBS_USART_Buffer_Read@buffer,w
  2107  02D0  3E10               	addlw	16
  2108  02D1  0084               	movwf	4
  2109  02D2  0800               	movf	0,w
  2110  02D3  3E01               	addlw	1
  2111  02D4  390F               	andlw	15
  2112  02D5  00FF               	movwf	btemp+1
  2113  02D6  0854               	movf	GBS_USART_Buffer_Read@buffer,w
  2114  02D7  3E10               	addlw	16
  2115  02D8  0084               	movwf	4
  2116  02D9  087F               	movf	btemp+1,w
  2117  02DA  0080               	movwf	0
  2118  02DB                     l1406:
  2119                           
  2120                           ;../gbs8/bsp/scr/gbs8_usart.c: 56:         buffer->size--;
  2121  02DB  0854               	movf	GBS_USART_Buffer_Read@buffer,w
  2122  02DC  3E12               	addlw	18
  2123  02DD  0084               	movwf	4
  2124  02DE  3001               	movlw	1
  2125  02DF  0280               	subwf	0,f
  2126  02E0                     l1408:
  2127                           
  2128                           ;../gbs8/bsp/scr/gbs8_usart.c: 57:         return result;
  2129  02E0  0853               	movf	GBS_USART_Buffer_Read@result,w
  2130  02E1                     l249:
  2131  02E1  0008               	return
  2132  02E2                     __end_of_GBS_USART_Buffer_Read:
  2133                           
  2134                           	psect	text8
  2135  0398                     __ptext8:	
  2136 ;; *************** function _GBS_Interrupt_Init *****************
  2137 ;; Defined at:
  2138 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2139 ;; Parameters:    Size  Location     Type
  2140 ;;		None
  2141 ;; Auto vars:     Size  Location     Type
  2142 ;;		None
  2143 ;; Return value:  Size  Location     Type
  2144 ;;                  1    wreg      void 
  2145 ;; Registers used:
  2146 ;;		status,2, status,0, pclath, cstack
  2147 ;; Tracked objects:
  2148 ;;		On entry : 0/0
  2149 ;;		On exit  : 0/0
  2150 ;;		Unchanged: 0/0
  2151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2152 ;;      Params:         0       0       0       0       0
  2153 ;;      Locals:         0       0       0       0       0
  2154 ;;      Temps:          0       0       0       0       0
  2155 ;;      Totals:         0       0       0       0       0
  2156 ;;Total ram usage:        0 bytes
  2157 ;; Hardware stack levels used:    1
  2158 ;; Hardware stack levels required when called:    5
  2159 ;; This function calls:
  2160 ;;		_GBS_Interrupt_Enable
  2161 ;; This function is called by:
  2162 ;;		_main
  2163 ;; This function uses a non-reentrant model
  2164 ;;
  2165                           
  2166                           
  2167                           ;psect for function _GBS_Interrupt_Init
  2168  0398                     _GBS_Interrupt_Init:
  2169  0398                     l1482:	
  2170                           ;incstack = 0
  2171                           ; Regs used in _GBS_Interrupt_Init: [status,2+status,0+pclath+cstack]
  2172                           
  2173                           
  2174                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 23:     GBS_Interrupt_Enable();
  2175  0398  120A  118A  239E  120A  118A  	fcall	_GBS_Interrupt_Enable
  2176  039D                     l74:
  2177  039D  0008               	return
  2178  039E                     __end_of_GBS_Interrupt_Init:
  2179                           
  2180                           	psect	text9
  2181  039E                     __ptext9:	
  2182 ;; *************** function _GBS_Interrupt_Enable *****************
  2183 ;; Defined at:
  2184 ;;		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;		None
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  1    wreg      void 
  2191 ;; Registers used:
  2192 ;;		None
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2198 ;;      Params:         0       0       0       0       0
  2199 ;;      Locals:         0       0       0       0       0
  2200 ;;      Temps:          0       0       0       0       0
  2201 ;;      Totals:         0       0       0       0       0
  2202 ;;Total ram usage:        0 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    4
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		_GBS_Interrupt_Init
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _GBS_Interrupt_Enable
  2214  039E                     _GBS_Interrupt_Enable:
  2215  039E                     l1418:	
  2216                           ;incstack = 0
  2217                           ; Regs used in _GBS_Interrupt_Enable: []
  2218                           
  2219                           
  2220                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 28:     INTCONbits.PEIE = 1;
  2221  039E  170B               	bsf	11,6	;volatile
  2222                           
  2223                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 29:     INTCONbits.GIE = 1;
  2224  039F  178B               	bsf	11,7	;volatile
  2225  03A0                     l77:
  2226  03A0  0008               	return
  2227  03A1                     __end_of_GBS_Interrupt_Enable:
  2228                           
  2229                           	psect	text10
  2230  030D                     __ptext10:	
  2231 ;; *************** function _ISR *****************
  2232 ;; Defined at:
  2233 ;;		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2234 ;; Parameters:    Size  Location     Type
  2235 ;;		None
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;                  1    wreg      void 
  2240 ;; Registers used:
  2241 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2247 ;;      Params:         0       0       0       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          4       0       0       0       0
  2250 ;;      Totals:         4       0       0       0       0
  2251 ;;Total ram usage:        4 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:    3
  2254 ;; This function calls:
  2255 ;;		_USART_RX_ISR
  2256 ;;		_USART_TX_ISR
  2257 ;; This function is called by:
  2258 ;;		Interrupt level 1
  2259 ;; This function uses a non-reentrant model
  2260 ;;
  2261                           
  2262                           
  2263                           ;psect for function _ISR
  2264  030D                     _ISR:
  2265  030D                     i1l1668:
  2266                           
  2267                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 137:     if (PIR1bits.TXIF)
  2268  030D  1E0C               	btfss	12,4	;volatile
  2269  030E  2B10               	goto	u105_21
  2270  030F  2B11               	goto	u105_20
  2271  0310                     u105_21:
  2272  0310  2B19               	goto	i1l1674
  2273  0311                     u105_20:
  2274  0311                     i1l1670:
  2275                           
  2276                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 138:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 139:    
      +                               USART_TX_ISR();
  2277  0311  120A  118A  23A1  120A  118A  	fcall	_USART_TX_ISR
  2278  0316                     i1l1672:
  2279                           
  2280                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 140:         PIR1bits.TXIF = 0;
  2281  0316  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0317  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0318  120C               	bcf	12,4	;volatile
  2284  0319                     i1l1674:
  2285                           
  2286                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 143:     if (PIR1bits.RCIF)
  2287  0319  1E8C               	btfss	12,5	;volatile
  2288  031A  2B1C               	goto	u106_21
  2289  031B  2B1D               	goto	u106_20
  2290  031C                     u106_21:
  2291  031C  2B25               	goto	i1l102
  2292  031D                     u106_20:
  2293  031D                     i1l1676:
  2294                           
  2295                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 144:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 145:    
      +                               USART_RX_ISR();
  2296  031D  120A  118A  217D  120A  118A  	fcall	_USART_RX_ISR
  2297  0322                     i1l1678:
  2298                           
  2299                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 146:         PIR1bits.RCIF = 0;
  2300  0322  1283               	bcf	3,5	;RP0=0, select bank0
  2301  0323  1303               	bcf	3,6	;RP1=0, select bank0
  2302  0324  128C               	bcf	12,5	;volatile
  2303  0325                     i1l102:
  2304  0325  0878               	movf	??_ISR+3,w
  2305  0326  00FF               	movwf	btemp+1
  2306  0327  0877               	movf	??_ISR+2,w
  2307  0328  008A               	movwf	10
  2308  0329  0876               	movf	??_ISR+1,w
  2309  032A  0084               	movwf	4
  2310  032B  0E75               	swapf	??_ISR^(0+4294967168),w
  2311  032C  0083               	movwf	3
  2312  032D  0EFE               	swapf	btemp,f
  2313  032E  0E7E               	swapf	btemp,w
  2314  032F  0009               	retfie
  2315  0330                     __end_of_ISR:
  2316                           
  2317                           	psect	intentry
  2318  0004                     __pintentry:	
  2319                           ;incstack = 0
  2320                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2321                           
  2322  0004                     interrupt_function:
  2323  007E                     saved_w	set	btemp
  2324  0004  00FE               	movwf	btemp
  2325  0005  0E03               	swapf	3,w
  2326  0006  00F5               	movwf	??_ISR
  2327  0007  0804               	movf	4,w
  2328  0008  00F6               	movwf	??_ISR+1
  2329  0009  080A               	movf	10,w
  2330  000A  00F7               	movwf	??_ISR+2
  2331  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2332  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2333  000D  087F               	movf	btemp+1,w
  2334  000E  00F8               	movwf	??_ISR+3
  2335  000F  120A  118A  2B0D   	ljmp	_ISR
  2336                           
  2337                           	psect	text11
  2338  03A1                     __ptext11:	
  2339 ;; *************** function _USART_TX_ISR *****************
  2340 ;; Defined at:
  2341 ;;		line 76 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		None
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2355 ;;      Params:         0       0       0       0       0
  2356 ;;      Locals:         0       0       0       0       0
  2357 ;;      Temps:          0       0       0       0       0
  2358 ;;      Totals:         0       0       0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_ISR
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function _USART_TX_ISR
  2370  03A1                     _USART_TX_ISR:
  2371  03A1                     i1l264:	
  2372                           ;incstack = 0
  2373                           ; Regs used in _USART_TX_ISR: []
  2374                           
  2375  03A1  0008               	return
  2376  03A2                     __end_of_USART_TX_ISR:
  2377                           
  2378                           	psect	text12
  2379  017D                     __ptext12:	
  2380 ;; *************** function _USART_RX_ISR *****************
  2381 ;; Defined at:
  2382 ;;		line 81 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2383 ;; Parameters:    Size  Location     Type
  2384 ;;		None
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;		None
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       0       0       0       0
  2397 ;;      Locals:         0       0       0       0       0
  2398 ;;      Temps:          2       0       0       0       0
  2399 ;;      Totals:         2       0       0       0       0
  2400 ;;Total ram usage:        2 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    2
  2403 ;; This function calls:
  2404 ;;		_GBS_USART_Receive
  2405 ;; This function is called by:
  2406 ;;		_ISR
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function _USART_RX_ISR
  2412  017D                     _USART_RX_ISR:
  2413  017D                     i1l1546:	
  2414                           ;incstack = 0
  2415                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2416                           
  2417                           
  2418                           ;../gbs8/bsp/scr/gbs8_usart.c: 83:     if (uFlag.dFlag)
  2419  017D  1CFD               	btfss	_uFlag,1
  2420  017E  2980               	goto	u82_21
  2421  017F  2981               	goto	u82_20
  2422  0180                     u82_21:
  2423  0180  2999               	goto	i1l1554
  2424  0181                     u82_20:
  2425  0181                     i1l1548:
  2426                           
  2427                           ;../gbs8/bsp/scr/gbs8_usart.c: 84:     {;../gbs8/bsp/scr/gbs8_usart.c: 85:         if (R
      +                          CREG == ' ')
  2428  0181  3020               	movlw	32
  2429  0182  1283               	bcf	3,5	;RP0=0, select bank0
  2430  0183  1303               	bcf	3,6	;RP1=0, select bank0
  2431  0184  061A               	xorwf	26,w	;volatile
  2432  0185  1D03               	btfss	3,2
  2433  0186  2988               	goto	u83_21
  2434  0187  2989               	goto	u83_20
  2435  0188                     u83_21:
  2436  0188  2993               	goto	i1l1552
  2437  0189                     u83_20:
  2438  0189                     i1l1550:
  2439                           
  2440                           ;../gbs8/bsp/scr/gbs8_usart.c: 86:         {;../gbs8/bsp/scr/gbs8_usart.c: 87:          
      +                             uFlag.dFlag = 0;
  2441  0189  10FD               	bcf	_uFlag,1
  2442                           
  2443                           ;../gbs8/bsp/scr/gbs8_usart.c: 88:             uFlag.rFlag = 1;
  2444  018A  157D               	bsf	_uFlag,2
  2445                           
  2446                           ;../gbs8/bsp/scr/gbs8_usart.c: 91:             ctrlBits.sd = 1;
  2447  018B  17FC               	bsf	_ctrlBits+1,7
  2448  018C                     i1l269:	
  2449                           ;../gbs8/bsp/scr/gbs8_usart.c: 93:             while (TXSTAbits.TRMT==0);
  2450                           
  2451  018C  1683               	bsf	3,5	;RP0=1, select bank1
  2452  018D  1303               	bcf	3,6	;RP1=0, select bank1
  2453  018E  1C98               	btfss	24,1	;volatile
  2454  018F  2991               	goto	u84_21
  2455  0190  2992               	goto	u84_20
  2456  0191                     u84_21:
  2457  0191  298C               	goto	i1l269
  2458  0192                     u84_20:
  2459  0192  29E7               	goto	i1l290
  2460  0193                     i1l1552:
  2461  0193  120A  118A  2383  120A  118A  	fcall	_GBS_USART_Receive
  2462  0198  29E7               	goto	i1l290
  2463  0199                     i1l1554:
  2464  0199  3043               	movlw	67
  2465  019A  1283               	bcf	3,5	;RP0=0, select bank0
  2466  019B  1303               	bcf	3,6	;RP1=0, select bank0
  2467  019C  061A               	xorwf	26,w	;volatile
  2468  019D  1D03               	btfss	3,2
  2469  019E  29A0               	goto	u85_21
  2470  019F  29A1               	goto	u85_20
  2471  01A0                     u85_21:
  2472  01A0  29A7               	goto	i1l1560
  2473  01A1                     u85_20:
  2474  01A1                     i1l1556:
  2475                           
  2476                           ;../gbs8/bsp/scr/gbs8_usart.c: 98:     {;../gbs8/bsp/scr/gbs8_usart.c: 99:         if (u
      +                          Flag.dFlag != 1) uFlag.cFlag = 1;
  2477  01A1  18FD               	btfsc	_uFlag,1
  2478  01A2  29A4               	goto	u86_21
  2479  01A3  29A5               	goto	u86_20
  2480  01A4                     u86_21:
  2481  01A4  29E7               	goto	i1l290
  2482  01A5                     u86_20:
  2483  01A5                     i1l1558:
  2484  01A5  147D               	bsf	_uFlag,0
  2485  01A6  29E7               	goto	i1l290
  2486  01A7                     i1l1560:
  2487  01A7  3044               	movlw	68
  2488  01A8  061A               	xorwf	26,w	;volatile
  2489  01A9  1D03               	btfss	3,2
  2490  01AA  29AC               	goto	u87_21
  2491  01AB  29AD               	goto	u87_20
  2492  01AC                     u87_21:
  2493  01AC  29B3               	goto	i1l277
  2494  01AD                     u87_20:
  2495  01AD                     i1l1562:
  2496                           
  2497                           ;../gbs8/bsp/scr/gbs8_usart.c: 102:     {;../gbs8/bsp/scr/gbs8_usart.c: 103:         if 
      +                          (uFlag.cFlag != 1) uFlag.dFlag = 1;
  2498  01AD  187D               	btfsc	_uFlag,0
  2499  01AE  29B0               	goto	u88_21
  2500  01AF  29B1               	goto	u88_20
  2501  01B0                     u88_21:
  2502  01B0  29E7               	goto	i1l290
  2503  01B1                     u88_20:
  2504  01B1                     i1l1564:
  2505  01B1  14FD               	bsf	_uFlag,1
  2506  01B2  29E7               	goto	i1l290
  2507  01B3                     i1l277:	
  2508                           ;../gbs8/bsp/scr/gbs8_usart.c: 105:     else if (uFlag.cFlag == 1)
  2509                           
  2510  01B3  1C7D               	btfss	_uFlag,0
  2511  01B4  29B6               	goto	u89_21
  2512  01B5  29B7               	goto	u89_20
  2513  01B6                     u89_21:
  2514  01B6  29E7               	goto	i1l290
  2515  01B7                     u89_20:
  2516  01B7  29C6               	goto	i1l1570
  2517  01B8                     i1l282:	
  2518                           ;../gbs8/bsp/scr/gbs8_usart.c: 108:         {;../gbs8/bsp/scr/gbs8_usart.c: 109:        
      +                           case '0':
  2519                           
  2520                           
  2521                           ;../gbs8/bsp/scr/gbs8_usart.c: 110:             ctrlBits.r0 = 1;
  2522  01B8  147B               	bsf	_ctrlBits,0
  2523                           
  2524                           ;../gbs8/bsp/scr/gbs8_usart.c: 111:             break;
  2525  01B9  29E5               	goto	i1l283
  2526  01BA                     i1l284:	
  2527                           ;../gbs8/bsp/scr/gbs8_usart.c: 112:         case '1':
  2528                           
  2529                           
  2530                           ;../gbs8/bsp/scr/gbs8_usart.c: 113:             ctrlBits.r1 = 1;
  2531  01BA  14FB               	bsf	_ctrlBits,1
  2532                           
  2533                           ;../gbs8/bsp/scr/gbs8_usart.c: 114:             break;
  2534  01BB  29E5               	goto	i1l283
  2535  01BC                     i1l285:	
  2536                           ;../gbs8/bsp/scr/gbs8_usart.c: 115:         case '2':
  2537                           
  2538                           
  2539                           ;../gbs8/bsp/scr/gbs8_usart.c: 116:             ctrlBits.r2 = 1;
  2540  01BC  157B               	bsf	_ctrlBits,2
  2541                           
  2542                           ;../gbs8/bsp/scr/gbs8_usart.c: 117:             break;
  2543  01BD  29E5               	goto	i1l283
  2544  01BE                     i1l286:	
  2545                           ;../gbs8/bsp/scr/gbs8_usart.c: 118:         case '3':
  2546                           
  2547                           
  2548                           ;../gbs8/bsp/scr/gbs8_usart.c: 119:             ctrlBits.r3 = 1;
  2549  01BE  15FB               	bsf	_ctrlBits,3
  2550                           
  2551                           ;../gbs8/bsp/scr/gbs8_usart.c: 120:             break;
  2552  01BF  29E5               	goto	i1l283
  2553  01C0                     i1l287:	
  2554                           ;../gbs8/bsp/scr/gbs8_usart.c: 121:         case '4':
  2555                           
  2556                           
  2557                           ;../gbs8/bsp/scr/gbs8_usart.c: 122:             ctrlBits.r4 = 1;
  2558  01C0  167B               	bsf	_ctrlBits,4
  2559                           
  2560                           ;../gbs8/bsp/scr/gbs8_usart.c: 123:             break;
  2561  01C1  29E5               	goto	i1l283
  2562  01C2                     i1l288:	
  2563                           ;../gbs8/bsp/scr/gbs8_usart.c: 124:         case '5':
  2564                           
  2565                           
  2566                           ;../gbs8/bsp/scr/gbs8_usart.c: 125:             ctrlBits.r5 = 1;
  2567  01C2  16FB               	bsf	_ctrlBits,5
  2568                           
  2569                           ;../gbs8/bsp/scr/gbs8_usart.c: 126:             break;
  2570  01C3  29E5               	goto	i1l283
  2571  01C4                     i1l289:	
  2572                           ;../gbs8/bsp/scr/gbs8_usart.c: 127:         case '6':
  2573                           
  2574                           
  2575                           ;../gbs8/bsp/scr/gbs8_usart.c: 128:             ctrlBits.r6 = 1;
  2576  01C4  177B               	bsf	_ctrlBits,6
  2577                           
  2578                           ;../gbs8/bsp/scr/gbs8_usart.c: 129:             break;
  2579  01C5  29E5               	goto	i1l283
  2580  01C6                     i1l1570:
  2581  01C6  081A               	movf	26,w	;volatile
  2582  01C7  00F3               	movwf	??_USART_RX_ISR
  2583  01C8  01F4               	clrf	??_USART_RX_ISR+1
  2584                           
  2585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2586                           ; Switch size 1, requested type "simple"
  2587                           ; Number of cases is 1, Range of values is 0 to 0
  2588                           ; switch strategies available:
  2589                           ; Name         Instructions Cycles
  2590                           ; simple_byte            4     3 (average)
  2591                           ; direct_byte           11     8 (fixed)
  2592                           ; jumptable            260     6 (fixed)
  2593                           ;	Chosen strategy is simple_byte
  2594  01C9  0874               	movf	??_USART_RX_ISR+1,w
  2595  01CA  3A00               	xorlw	0	; case 0
  2596  01CB  1903               	skipnz
  2597  01CC  29CE               	goto	i1l2188
  2598  01CD  29E5               	goto	i1l283
  2599  01CE                     i1l2188:
  2600                           
  2601                           ; Switch size 1, requested type "simple"
  2602                           ; Number of cases is 7, Range of values is 48 to 54
  2603                           ; switch strategies available:
  2604                           ; Name         Instructions Cycles
  2605                           ; simple_byte           22    12 (average)
  2606                           ; direct_byte           32    11 (fixed)
  2607                           ; jumptable            263     9 (fixed)
  2608                           ;	Chosen strategy is simple_byte
  2609  01CE  0873               	movf	??_USART_RX_ISR,w
  2610  01CF  3A30               	xorlw	48	; case 48
  2611  01D0  1903               	skipnz
  2612  01D1  29B8               	goto	i1l282
  2613  01D2  3A01               	xorlw	1	; case 49
  2614  01D3  1903               	skipnz
  2615  01D4  29BA               	goto	i1l284
  2616  01D5  3A03               	xorlw	3	; case 50
  2617  01D6  1903               	skipnz
  2618  01D7  29BC               	goto	i1l285
  2619  01D8  3A01               	xorlw	1	; case 51
  2620  01D9  1903               	skipnz
  2621  01DA  29BE               	goto	i1l286
  2622  01DB  3A07               	xorlw	7	; case 52
  2623  01DC  1903               	skipnz
  2624  01DD  29C0               	goto	i1l287
  2625  01DE  3A01               	xorlw	1	; case 53
  2626  01DF  1903               	skipnz
  2627  01E0  29C2               	goto	i1l288
  2628  01E1  3A03               	xorlw	3	; case 54
  2629  01E2  1903               	skipnz
  2630  01E3  29C4               	goto	i1l289
  2631  01E4  29E5               	goto	i1l283
  2632  01E5                     i1l283:
  2633                           
  2634                           ;../gbs8/bsp/scr/gbs8_usart.c: 131:         uFlag.cFlag = 0;
  2635  01E5  107D               	bcf	_uFlag,0
  2636                           
  2637                           ;../gbs8/bsp/scr/gbs8_usart.c: 133:         ctrlBits.s1 = 1;
  2638  01E6  14FC               	bsf	_ctrlBits+1,1
  2639  01E7                     i1l290:
  2640  01E7  0008               	return
  2641  01E8                     __end_of_USART_RX_ISR:
  2642                           
  2643                           	psect	text13
  2644  0383                     __ptext13:	
  2645 ;; *************** function _GBS_USART_Receive *****************
  2646 ;; Defined at:
  2647 ;;		line 71 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2648 ;; Parameters:    Size  Location     Type
  2649 ;;		None
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  1    wreg      void 
  2654 ;; Registers used:
  2655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2661 ;;      Params:         0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0
  2664 ;;      Totals:         0       0       0       0       0
  2665 ;;Total ram usage:        0 bytes
  2666 ;; Hardware stack levels used:    1
  2667 ;; Hardware stack levels required when called:    1
  2668 ;; This function calls:
  2669 ;;		i1_GBS_USART_Buffer_Write
  2670 ;; This function is called by:
  2671 ;;		_USART_RX_ISR
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           
  2676                           ;psect for function _GBS_USART_Receive
  2677  0383                     _GBS_USART_Receive:
  2678  0383                     i1l1426:	
  2679                           ;incstack = 0
  2680                           ; Regs used in _GBS_USART_Receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2681                           
  2682                           
  2683                           ;../gbs8/bsp/scr/gbs8_usart.c: 73:     GBS_USART_Buffer_Write(&usartReceiveBuffer, RCREG
      +                          );
  2684  0383  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0384  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0385  081A               	movf	26,w	;volatile
  2687  0386  00FF               	movwf	btemp+1
  2688  0387  087F               	movf	btemp+1,w
  2689  0388  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2690  0389  3033               	movlw	(low (_usartReceiveBuffer| 0))& (0+255)
  2691  038A  120A  118A  22E2  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2692  038F                     i1l261:
  2693  038F  0008               	return
  2694  0390                     __end_of_GBS_USART_Receive:
  2695                           
  2696                           	psect	text14
  2697  02E2                     __ptext14:	
  2698 ;; *************** function i1_GBS_USART_Buffer_Write *****************
  2699 ;; Defined at:
  2700 ;;		line 42 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2701 ;; Parameters:    Size  Location     Type
  2702 ;;  buffer          1    wreg     PTR struct .
  2703 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2704 ;;  value           1    0[COMMON] unsigned char 
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  buffer          1    2[COMMON] PTR struct .
  2707 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2717 ;;      Params:         1       0       0       0       0
  2718 ;;      Locals:         1       0       0       0       0
  2719 ;;      Temps:          1       0       0       0       0
  2720 ;;      Totals:         3       0       0       0       0
  2721 ;;Total ram usage:        3 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; This function calls:
  2724 ;;		Nothing
  2725 ;; This function is called by:
  2726 ;;		_GBS_USART_Receive
  2727 ;; This function uses a non-reentrant model
  2728 ;;
  2729                           
  2730                           
  2731                           ;psect for function i1_GBS_USART_Buffer_Write
  2732  02E2                     i1_GBS_USART_Buffer_Write:
  2733                           
  2734                           ;incstack = 0
  2735                           ; Regs used in i1_GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  2736                           ;i1GBS_USART_Buffer_Write@buffer stored from wreg
  2737  02E2  00F2               	movwf	i1GBS_USART_Buffer_Write@buffer
  2738  02E3                     i1l1412:
  2739                           
  2740                           ;../gbs8/bsp/scr/gbs8_usart.c: 42: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 43: {;../gbs8/bsp/scr/gbs8_usart.c: 44:     
      +                          buffer->buffer[buffer->tail] = value;
  2741  02E3  0870               	movf	i1GBS_USART_Buffer_Write@value,w
  2742  02E4  00FF               	movwf	btemp+1
  2743  02E5  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2744  02E6  3E11               	addlw	17
  2745  02E7  0084               	movwf	4
  2746  02E8  1383               	bcf	3,7	;select IRP bank0
  2747  02E9  0800               	movf	0,w
  2748  02EA  0772               	addwf	i1GBS_USART_Buffer_Write@buffer,w
  2749  02EB  00F1               	movwf	??i1_GBS_USART_Buffer_Write
  2750  02EC  0871               	movf	??i1_GBS_USART_Buffer_Write,w
  2751  02ED  0084               	movwf	4
  2752  02EE  087F               	movf	btemp+1,w
  2753  02EF  0080               	movwf	0
  2754                           
  2755                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     buffer->tail = (buffer->tail + 1)%16;
  2756  02F0  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2757  02F1  3E11               	addlw	17
  2758  02F2  0084               	movwf	4
  2759  02F3  0800               	movf	0,w
  2760  02F4  3E01               	addlw	1
  2761  02F5  390F               	andlw	15
  2762  02F6  00FF               	movwf	btemp+1
  2763  02F7  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2764  02F8  3E11               	addlw	17
  2765  02F9  0084               	movwf	4
  2766  02FA  087F               	movf	btemp+1,w
  2767  02FB  0080               	movwf	0
  2768  02FC                     i1l1414:
  2769                           
  2770                           ;../gbs8/bsp/scr/gbs8_usart.c: 46:     if (buffer->size<16) buffer->size++;
  2771  02FC  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2772  02FD  3E12               	addlw	18
  2773  02FE  0084               	movwf	4
  2774  02FF  3010               	movlw	16
  2775  0300  0200               	subwf	0,w
  2776  0301  1803               	skipnc
  2777  0302  2B04               	goto	u59_21
  2778  0303  2B05               	goto	u59_20
  2779  0304                     u59_21:
  2780  0304  2B0C               	goto	i1l245
  2781  0305                     u59_20:
  2782  0305                     i1l1416:
  2783  0305  3001               	movlw	1
  2784  0306  00FF               	movwf	btemp+1
  2785  0307  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2786  0308  3E12               	addlw	18
  2787  0309  0084               	movwf	4
  2788  030A  087F               	movf	btemp+1,w
  2789  030B  0780               	addwf	0,f
  2790  030C                     i1l245:
  2791  030C  0008               	return
  2792  030D                     __end_ofi1_GBS_USART_Buffer_Write:
  2793  007E                     btemp	set	126	;btemp
  2794  007E                     wtemp0	set	126
  2795                           
  2796                           	psect	config
  2797                           
  2798                           ;Config register CONFIG1 @ 0x2007
  2799                           ;	Oscillator Selection bits
  2800                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2801                           ;	Watchdog Timer Enable bit
  2802                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2803                           ;	Power-up Timer Enable bit
  2804                           ;	PWRTE = OFF, PWRT disabled
  2805                           ;	RE3/MCLR pin function select bit
  2806                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2807                           ;	Code Protection bit
  2808                           ;	CP = OFF, Program memory code protection is disabled
  2809                           ;	Data Code Protection bit
  2810                           ;	CPD = OFF, Data memory code protection is disabled
  2811                           ;	Brown Out Reset Selection bits
  2812                           ;	BOREN = OFF, BOR disabled
  2813                           ;	Internal External Switchover bit
  2814                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2815                           ;	Fail-Safe Clock Monitor Enabled bit
  2816                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2817                           ;	Low Voltage Programming Enable bit
  2818                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2819                           ;	In-Circuit Debugger Mode bit
  2820                           ;	DEBUG = 0x1, unprogrammed default
  2821  2007                     	org	8199
  2822  2007  20F2               	dw	8434
  2823                           
  2824                           ;Config register CONFIG2 @ 0x2008
  2825                           ;	Brown-out Reset Selection bit
  2826                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2827                           ;	Flash Program Memory Self Write Enable bits
  2828                           ;	WRT = OFF, Write protection off
  2829  2008                     	org	8200
  2830  2008  3EFF               	dw	16127

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         135
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     21      71
    BANK1            80      0      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GBS_USART_Write_Char@c	PTR unsigned char  size(1) Largest target is 10
		 -> STR_8(CODE[10]), STR_7(CODE[5]), STR_6(CODE[5]), STR_5(CODE[5]), 
		 -> STR_4(CODE[5]), STR_3(CODE[5]), STR_2(CODE[5]), STR_1(CODE[10]), 

    GBS_USART_Buffer_Read@buffer	PTR struct . size(1) Largest target is 19
		 -> usartSendBuffer(BANK0[19]), 

    GBS_USART_Buffer_Write@buffer	PTR struct . size(1) Largest target is 19
		 -> usartReceiveBuffer(BANK0[19]), usartSendBuffer(BANK0[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USART_RX_ISR
    _GBS_USART_Receive->i1_GBS_USART_Buffer_Write

Critical Paths under _main in BANK0

    _main->_GBS_USART_Init
    _GBS_USART_Init->___aldiv
    _GBS_Message_Update->_GBS_USART_Write_Char
    _GBS_USART_Write_Char->_GBS_USART_Buffer_Write
    _GBS_USART_Send->_GBS_USART_Buffer_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2461
                 _GBS_Interrupt_Init
                 _GBS_Message_Update
                     _GBS_USART_Init
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Init                                       6     4      2     725
                                             15 BANK0      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _GBS_Message_Update                                   0     0      0    1736
                     _GBS_USART_Send
               _GBS_USART_Write_Char
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Write_Char                                 5     4      1    1548
                                              3 BANK0      5     4      1
             _GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (3) _GBS_USART_Buffer_Write                               3     2      1     564
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Send                                       0     0      0     188
              _GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (3) _GBS_USART_Buffer_Read                                3     3      0     188
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GBS_Interrupt_Init                                   0     0      0       0
               _GBS_Interrupt_Enable
 ---------------------------------------------------------------------------------
 (2) _GBS_Interrupt_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0     180
                                              5 COMMON     4     4      0
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (5) _USART_TX_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _USART_RX_ISR                                         2     2      0     180
                                              3 COMMON     2     2      0
                  _GBS_USART_Receive
 ---------------------------------------------------------------------------------
 (6) _GBS_USART_Receive                                    0     0      0     180
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (7) i1_GBS_USART_Buffer_Write                             3     2      1     180
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GBS_Interrupt_Init
     _GBS_Interrupt_Enable
   _GBS_Message_Update
     _GBS_USART_Send
       _GBS_USART_Buffer_Read
     _GBS_USART_Write_Char
       _GBS_USART_Buffer_Write
   _GBS_USART_Init
     ___aldiv

 _ISR (ROOT)
   _USART_RX_ISR
     _GBS_USART_Receive
       i1_GBS_USART_Buffer_Write
   _USART_TX_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      A5       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      47       5       88.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      A5      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Nov 04 14:01:19 2020

                                pc 0002                                 l74 039D  
                               l77 03A0                                 fsr 0004  
           ??_GBS_USART_Write_Char 0056                                l241 023A  
                              l308 00DF                                l245 02B6  
                              l254 0375                                l249 02E1  
                              l258 0382                                l297 0289  
                              l459 00F4                                l469 017C  
        __end_of_GBS_USART_Receive 0390                                _PR2 0092  
                              u600 037B                                u601 037A  
                              u610 0382                                u611 0381  
                              u620 0244                                u700 0146  
                              _ISR 030D                                u621 0243  
                              u701 0145                                u630 0271  
                              u631 0270                                u800 00B7  
                              u720 0164                                u640 00E7  
                              u801 00B6                                u721 0163  
                              u705 0142                                u641 00E6  
                              u570 02AF                                u810 00CD  
                              u730 0169                                u650 00F8  
                              u571 02AE                                u635 026D  
                              u811 00CC                                u731 0168  
                              u715 0156                                u651 00F7  
                              u580 02C3                                u740 0033  
                              u660 0117                                u581 02C2  
                              u741 0032                                u661 0116  
                              u750 0049                                u751 0048  
                              _PSA 040B                                u760 005F  
                              u680 012B                                u761 005E  
                              u681 012A                                u770 0075  
                              u771 0074                                u675 011C  
                              u780 008B                                u781 008A  
                              u790 00A1                                u791 00A0  
                              u695 012D                                fsr0 0004  
                              indf 0000                               ?_ISR 0070  
                             l1400 02AF                               l1402 02BA  
                             l1404 02C3                               l1420 036B  
                             l1500 0033                               l1406 02DB  
                             l1422 036C                               l1430 0244  
                             l1510 005B                               l1502 0034  
                             l1408 02E0                               l1424 037B  
                             l1432 0246                               l1520 0076  
                             l1512 005F                               l1504 0045  
                             l1440 00E0                               l1418 039E  
                             l1434 0259                               l1530 00A1  
                             l1522 0087                               l1514 0060  
                             l1506 0049                               l1450 0107  
                             l1442 00E3                               l1436 025F  
                             l1428 023E                               l1540 00C9  
                             l1532 00A2                               l1524 008B  
                             l1516 0071                               l1508 004A  
                             l1460 0127                               l1452 010F  
                             l1444 00E7                               l1438 0271  
                             l1542 00CD                               l1534 00B3  
                             l1526 008C                               l1518 0075  
                             l1470 0155                               l1462 012B  
                             l1454 0117                               l1446 00F8  
                             l1544 00CE                               l1536 00B7  
                             l1528 009D                               l1472 015E  
                             l1464 0134                               l1456 011A  
                             l1448 0103                               l1482 0398  
                             l1538 00B8                               l1466 0146  
                             l1458 0123                               l1474 0164  
                             l1490 0234                               l1396 028D  
                             l1476 0169                               l1468 0154  
                             l1492 0235                               l1484 01E8  
                             l1660 034F                               l1398 02A6  
                             l1478 0174                               l1494 0236  
                             l1486 01F8                               l1662 0354  
                             l1496 0239                               l1488 0233  
                             l1664 035F                               l1498 002F  
                             l1666 0362                               STR_1 0336  
                             STR_2 034A                               STR_3 034A  
                             STR_4 034A                               STR_5 034A  
                             STR_6 034A                               STR_7 034A  
                             STR_8 0340                               _T0CS 040D  
                             _TMR0 0001                               _TMR1 000E  
                             _TMR2 0011                               _main 034F  
                             btemp 007E                               start 0012  
                            ??_ISR 0075                    __end_of___aldiv 017D  
                            ?_main 0070                              _ANSEL 0188  
                            i1l102 0325                              i1l245 030C  
                            i1l261 038F                              i1l264 03A1  
                            i1l282 01B8                              i1l290 01E7  
                            i1l283 01E5                              i1l284 01BA  
                            i1l285 01BC                              i1l277 01B3  
                            i1l269 018C                              i1l286 01BE  
                            i1l287 01C0                              i1l288 01C2  
                            i1l289 01C4                              _RCREG 001A  
                            _SPBRG 0099                              u82_20 0181  
                            u82_21 0180                              u59_20 0305  
                            u83_20 0189                              u59_21 0304  
                            u83_21 0188                              u84_20 0192  
                            u84_21 0191                              u85_20 01A1  
                            u85_21 01A0                              u86_20 01A5  
                            u86_21 01A4                              u87_20 01AD  
                            u87_21 01AC                              u88_20 01B1  
                            u88_21 01B0                              u89_20 01B7  
                            u89_21 01B6                              _TXREG 0019  
                            _uFlag 007D                              _errno 0079  
                            pclath 000A                              status 0003  
                            wtemp0 007E                    __initialization 0015  
                     __end_of_main 036B                             ??_main 0067  
       __size_of_GBS_USART_Receive 000D   __end_ofi1_GBS_USART_Buffer_Write 030D  
      GBS_USART_Buffer_Read@buffer 0054                             _CCPR1L 0015  
                           _ANSELH 0189        GBS_USART_Buffer_Read@result 0053  
                           i1l1412 02E3                             i1l1414 02FC  
                           i1l1416 0305                             i1l1426 0383  
                           i1l1550 0189                             i1l1560 01A7  
                           i1l1552 0193                             u105_20 0311  
                           u105_21 0310                             i1l1570 01C6  
                           i1l1562 01AD                             i1l1554 0199  
                           i1l1546 017D                             i1l2188 01CE  
                           i1l1564 01B1                             i1l1556 01A1  
                           i1l1548 0181                             i1l1558 01A5  
                           i1l1670 0311                             u106_20 031D  
                           i1l1672 0316                             u106_21 031C  
                           i1l1674 0319                             i1l1676 031D  
                           i1l1668 030D                             i1l1678 0322  
                           _TMR2ON 0092         __end_of_GBS_Message_Update 00E0  
                        ??___aldiv 005A                             saved_w 007E  
     __end_of_GBS_Interrupt_Enable 03A1            __end_of__initialization 002B  
                   __pcstackCOMMON 0070     i1GBS_USART_Buffer_Write@buffer 0072  
                   _OPTION_REGbits 0081              _GBS_USART_Buffer_Read 02B7  
               _usartReceiveBuffer 0033         __end_of_GBS_Interrupt_Init 039E  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
         i1_GBS_USART_Buffer_Write 02E2                         __pmaintext 034F  
                       __pintentry 0004                            _T2CKPS1 0091  
    __size_of_GBS_USART_Write_Char 004F           ??_GBS_USART_Buffer_Write 0053  
                       __stringtab 0330                            ___aldiv 00E0  
             _GBS_Interrupt_Enable 039E                            __ptext1 01E8  
                          __ptext2 00E0                            __ptext3 002F  
                          __ptext4 023B                            __ptext5 028A  
                          __ptext6 036B                            __ptext7 02B7  
                          __ptext8 0398                            __ptext9 039E  
          __size_of_GBS_USART_Init 0053             ?_GBS_USART_Buffer_Read 0070  
                     __size_of_ISR 0023            __size_of_GBS_USART_Send 0018  
                        _T1CONbits 0010                          _T2CONbits 0012  
                 ___aldiv@dividend 0056                            clrloop0 0391  
             end_of_initialization 002B              GBS_USART_Write_Char@c 0059  
            GBS_USART_Write_Char@i 0058        GBS_USART_Buffer_Write@value 0052  
                        _RCSTAbits 0018                   ___aldiv@quotient 005D  
            ?_GBS_Interrupt_Enable 0070                 _GBS_Message_Update 002F  
     GBS_USART_Buffer_Write@buffer 0054    __size_of_GBS_USART_Buffer_Write 002D  
                        _TRISAbits 0085                          _TRISBbits 0086  
                        _TRISCbits 0087                          _TRISDbits 0088  
                        _TRISEbits 0089                ?_GBS_Message_Update 0070  
                    ?_USART_RX_ISR 0070                      ?_USART_TX_ISR 0070  
                      _CCP1CONbits 0017                          _TXSTAbits 0098  
             ??_GBS_Message_Update 005A                        _BAUDCTLbits 0187  
       ??i1_GBS_USART_Buffer_Write 0071                start_initialization 0015  
                      __end_of_ISR 0330                     ??_USART_RX_ISR 0073  
                   ??_USART_TX_ISR 0070           GBS_USART_Write_Char@size 0055  
           _GBS_USART_Buffer_Write 028A             ??_GBS_Interrupt_Enable 0052  
               _GBS_Interrupt_Init 0398                ?_GBS_Interrupt_Init 0070  
                   _GBS_USART_Init 01E8                     _GBS_USART_Send 036B  
                      __pbssCOMMON 0079                          ___latbits 0002  
                    __pcstackBANK0 0052               ??_GBS_Interrupt_Init 0052  
     __end_of_GBS_USART_Write_Char 028A                           ?___aldiv 0052  
                  _usartSendBuffer 0020             __end_of_GBS_USART_Init 023B  
          ??_GBS_USART_Buffer_Read 0052             __end_of_GBS_USART_Send 0383  
                        __pstrings 0330             GBS_USART_Init@baudRate 0061  
                  ___aldiv@divisor 0052                  interrupt_function 0004  
                  ___aldiv@counter 005B                           _IOCBbits 0096  
                        clear_ram0 0390                           _PIE1bits 008C  
                         _PIR1bits 000C               __end_of_USART_RX_ISR 01E8  
             __end_of_USART_TX_ISR 03A2                    ?_GBS_USART_Init 0061  
                  ?_GBS_USART_Send 0070                        __stringbase 0335  
                 __size_of___aldiv 009D                 __end_of__stringtab 0336  
              _GBS_USART_Init$1753 0063               _GBS_USART_Write_Char 023B  
                         _sBufferA 00A0                           __ptext10 030D  
                         __ptext11 03A1                           __ptext12 017D  
                         __ptext13 0383                           __ptext14 02E2  
    i1GBS_USART_Buffer_Write@value 0070                           _ctrlBits 007B  
          ?_GBS_USART_Buffer_Write 0052                      __size_of_main 001C  
      __size_of_GBS_Message_Update 00B1                           _stepperA 0046  
            ?_GBS_USART_Write_Char 0055                         _INTCONbits 000B  
   __end_of_GBS_USART_Buffer_Write 02B7                           intlevel1 0000  
__size_ofi1_GBS_USART_Buffer_Write 002B          ?i1_GBS_USART_Buffer_Write 0070  
                        stringcode 0330              __size_of_USART_RX_ISR 006B  
            __size_of_USART_TX_ISR 0001      __size_of_GBS_Interrupt_Enable 0003  
   __size_of_GBS_USART_Buffer_Read 002B      __end_of_GBS_USART_Buffer_Read 02E2  
                _GBS_USART_Receive 0383                           stringdir 0330  
                         stringtab 0330                       ___aldiv@sign 005C  
               ?_GBS_USART_Receive 0070                       _USART_RX_ISR 017D  
                     _USART_TX_ISR 03A1        __size_of_GBS_Interrupt_Init 0006  
              ??_GBS_USART_Receive 0073                   ??_GBS_USART_Init 0063  
                 ??_GBS_USART_Send 0055  
