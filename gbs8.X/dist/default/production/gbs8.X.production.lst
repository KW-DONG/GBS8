

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 03 16:22:23 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0000                     	;# 
   456  0001                     	;# 
   457  0002                     	;# 
   458  0003                     	;# 
   459  0004                     	;# 
   460  0005                     	;# 
   461  0006                     	;# 
   462  0007                     	;# 
   463  0008                     	;# 
   464  0009                     	;# 
   465  000A                     	;# 
   466  000B                     	;# 
   467  000C                     	;# 
   468  000D                     	;# 
   469  000E                     	;# 
   470  000E                     	;# 
   471  000F                     	;# 
   472  0010                     	;# 
   473  0011                     	;# 
   474  0012                     	;# 
   475  0013                     	;# 
   476  0014                     	;# 
   477  0015                     	;# 
   478  0015                     	;# 
   479  0016                     	;# 
   480  0017                     	;# 
   481  0018                     	;# 
   482  0019                     	;# 
   483  001A                     	;# 
   484  001B                     	;# 
   485  001B                     	;# 
   486  001C                     	;# 
   487  001D                     	;# 
   488  001E                     	;# 
   489  001F                     	;# 
   490  0081                     	;# 
   491  0085                     	;# 
   492  0086                     	;# 
   493  0087                     	;# 
   494  0088                     	;# 
   495  0089                     	;# 
   496  008C                     	;# 
   497  008D                     	;# 
   498  008E                     	;# 
   499  008F                     	;# 
   500  0090                     	;# 
   501  0091                     	;# 
   502  0092                     	;# 
   503  0093                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0094                     	;# 
   507  0095                     	;# 
   508  0096                     	;# 
   509  0097                     	;# 
   510  0098                     	;# 
   511  0099                     	;# 
   512  009A                     	;# 
   513  009B                     	;# 
   514  009C                     	;# 
   515  009D                     	;# 
   516  009E                     	;# 
   517  009F                     	;# 
   518  0105                     	;# 
   519  0107                     	;# 
   520  0108                     	;# 
   521  0109                     	;# 
   522  010C                     	;# 
   523  010C                     	;# 
   524  010D                     	;# 
   525  010E                     	;# 
   526  010F                     	;# 
   527  0185                     	;# 
   528  0187                     	;# 
   529  0188                     	;# 
   530  0189                     	;# 
   531  018C                     	;# 
   532  018D                     	;# 
   533  0000                     	;# 
   534  0001                     	;# 
   535  0002                     	;# 
   536  0003                     	;# 
   537  0004                     	;# 
   538  0005                     	;# 
   539  0006                     	;# 
   540  0007                     	;# 
   541  0008                     	;# 
   542  0009                     	;# 
   543  000A                     	;# 
   544  000B                     	;# 
   545  000C                     	;# 
   546  000D                     	;# 
   547  000E                     	;# 
   548  000E                     	;# 
   549  000F                     	;# 
   550  0010                     	;# 
   551  0011                     	;# 
   552  0012                     	;# 
   553  0013                     	;# 
   554  0014                     	;# 
   555  0015                     	;# 
   556  0015                     	;# 
   557  0016                     	;# 
   558  0017                     	;# 
   559  0018                     	;# 
   560  0019                     	;# 
   561  001A                     	;# 
   562  001B                     	;# 
   563  001B                     	;# 
   564  001C                     	;# 
   565  001D                     	;# 
   566  001E                     	;# 
   567  001F                     	;# 
   568  0081                     	;# 
   569  0085                     	;# 
   570  0086                     	;# 
   571  0087                     	;# 
   572  0088                     	;# 
   573  0089                     	;# 
   574  008C                     	;# 
   575  008D                     	;# 
   576  008E                     	;# 
   577  008F                     	;# 
   578  0090                     	;# 
   579  0091                     	;# 
   580  0092                     	;# 
   581  0093                     	;# 
   582  0093                     	;# 
   583  0093                     	;# 
   584  0094                     	;# 
   585  0095                     	;# 
   586  0096                     	;# 
   587  0097                     	;# 
   588  0098                     	;# 
   589  0099                     	;# 
   590  009A                     	;# 
   591  009B                     	;# 
   592  009C                     	;# 
   593  009D                     	;# 
   594  009E                     	;# 
   595  009F                     	;# 
   596  0105                     	;# 
   597  0107                     	;# 
   598  0108                     	;# 
   599  0109                     	;# 
   600  010C                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  010E                     	;# 
   604  010F                     	;# 
   605  0185                     	;# 
   606  0187                     	;# 
   607  0188                     	;# 
   608  0189                     	;# 
   609  018C                     	;# 
   610  018D                     	;# 
   611  0000                     	;# 
   612  0001                     	;# 
   613  0002                     	;# 
   614  0003                     	;# 
   615  0004                     	;# 
   616  0005                     	;# 
   617  0006                     	;# 
   618  0007                     	;# 
   619  0008                     	;# 
   620  0009                     	;# 
   621  000A                     	;# 
   622  000B                     	;# 
   623  000C                     	;# 
   624  000D                     	;# 
   625  000E                     	;# 
   626  000E                     	;# 
   627  000F                     	;# 
   628  0010                     	;# 
   629  0011                     	;# 
   630  0012                     	;# 
   631  0013                     	;# 
   632  0014                     	;# 
   633  0015                     	;# 
   634  0015                     	;# 
   635  0016                     	;# 
   636  0017                     	;# 
   637  0018                     	;# 
   638  0019                     	;# 
   639  001A                     	;# 
   640  001B                     	;# 
   641  001B                     	;# 
   642  001C                     	;# 
   643  001D                     	;# 
   644  001E                     	;# 
   645  001F                     	;# 
   646  0081                     	;# 
   647  0085                     	;# 
   648  0086                     	;# 
   649  0087                     	;# 
   650  0088                     	;# 
   651  0089                     	;# 
   652  008C                     	;# 
   653  008D                     	;# 
   654  008E                     	;# 
   655  008F                     	;# 
   656  0090                     	;# 
   657  0091                     	;# 
   658  0092                     	;# 
   659  0093                     	;# 
   660  0093                     	;# 
   661  0093                     	;# 
   662  0094                     	;# 
   663  0095                     	;# 
   664  0096                     	;# 
   665  0097                     	;# 
   666  0098                     	;# 
   667  0099                     	;# 
   668  009A                     	;# 
   669  009B                     	;# 
   670  009C                     	;# 
   671  009D                     	;# 
   672  009E                     	;# 
   673  009F                     	;# 
   674  0105                     	;# 
   675  0107                     	;# 
   676  0108                     	;# 
   677  0109                     	;# 
   678  010C                     	;# 
   679  010C                     	;# 
   680  010D                     	;# 
   681  010E                     	;# 
   682  010F                     	;# 
   683  0185                     	;# 
   684  0187                     	;# 
   685  0188                     	;# 
   686  0189                     	;# 
   687  018C                     	;# 
   688  018D                     	;# 
   689  000E                     _TMR1	set	14
   690  001A                     _RCREG	set	26
   691  0019                     _TXREG	set	25
   692  0018                     _RCSTAbits	set	24
   693  0015                     _CCPR1L	set	21
   694  0017                     _CCP1CONbits	set	23
   695  0011                     _TMR2	set	17
   696  0012                     _T2CONbits	set	18
   697  0010                     _T1CONbits	set	16
   698  0001                     _TMR0	set	1
   699  000C                     _PIR1bits	set	12
   700  000B                     _INTCONbits	set	11
   701  0091                     _T2CKPS1	set	145
   702  0092                     _TMR2ON	set	146
   703  0099                     _SPBRG	set	153
   704  0098                     _TXSTAbits	set	152
   705  0092                     _PR2	set	146
   706  008C                     _PIE1bits	set	140
   707  0096                     _IOCBbits	set	150
   708  0081                     _OPTION_REGbits	set	129
   709  0087                     _TRISCbits	set	135
   710  0088                     _TRISDbits	set	136
   711  0086                     _TRISBbits	set	134
   712  0085                     _TRISAbits	set	133
   713  0089                     _TRISEbits	set	137
   714  040D                     _T0CS	set	1037
   715  040B                     _PSA	set	1035
   716  0187                     _BAUDCTLbits	set	391
   717  0189                     _ANSELH	set	393
   718  0188                     _ANSEL	set	392
   719                           
   720                           	psect	strings
   721  0256                     __pstrings:
   722  0256                     stringtab:
   723  0256                     __stringtab:
   724  0256                     stringcode:	
   725                           ;	String table - string pointers are 1 byte each
   726                           
   727  0256                     stringdir:
   728  0256  3002               	movlw	high stringdir
   729  0257  008A               	movwf	10
   730  0258  0804               	movf	4,w
   731  0259  0A84               	incf	4,f
   732  025A  0782               	addwf	2,f
   733  025B                     __stringbase:
   734  025B  3400               	retlw	0
   735  025C                     __end_of__stringtab:
   736  025C                     STR_3:
   737  025C  3443               	retlw	67	;'C'
   738  025D  3452               	retlw	82	;'R'
   739  025E  3465               	retlw	101	;'e'
   740  025F  3463               	retlw	99	;'c'
   741  0260  3465               	retlw	101	;'e'
   742  0261  3469               	retlw	105	;'i'
   743  0262  3476               	retlw	118	;'v'
   744  0263  3465               	retlw	101	;'e'
   745  0264  3400               	retlw	0
   746  0265                     STR_2:
   747  0265  3444               	retlw	68	;'D'
   748  0266  3452               	retlw	82	;'R'
   749  0267  3465               	retlw	101	;'e'
   750  0268  3463               	retlw	99	;'c'
   751  0269  3465               	retlw	101	;'e'
   752  026A  3469               	retlw	105	;'i'
   753  026B  3476               	retlw	118	;'v'
   754  026C  3465               	retlw	101	;'e'
   755  026D  3400               	retlw	0
   756  026E                     STR_1:
   757  026E  3431               	retlw	49	;'1'
   758  026F  3432               	retlw	50	;'2'
   759  0270  3433               	retlw	51	;'3'
   760  0271  3434               	retlw	52	;'4'
   761  0272  3400               	retlw	0
   762                           
   763                           	psect	cinit
   764  0015                     start_initialization:	
   765                           ; #config settings
   766                           
   767  0015                     __initialization:
   768                           
   769                           ; Clear objects allocated to BANK0
   770  0015  1383               	bcf	3,7	;select IRP bank0
   771  0016  3020               	movlw	low __pbssBANK0
   772  0017  0084               	movwf	4
   773  0018  3056               	movlw	low (__pbssBANK0+54)
   774  0019  120A  118A  22DE  120A  118A  	fcall	clear_ram0
   775                           
   776                           ; Clear objects allocated to BANK1
   777  001E  30A0               	movlw	low __pbssBANK1
   778  001F  0084               	movwf	4
   779  0020  30F0               	movlw	low (__pbssBANK1+80)
   780  0021  120A  118A  22DE  120A  118A  	fcall	clear_ram0
   781  0026                     end_of_initialization:	
   782                           ;End of C runtime variable initialization code
   783                           
   784  0026                     __end_of__initialization:
   785  0026  0183               	clrf	3
   786  0027  120A  118A  28F9   	ljmp	_main	;jump to C main() function
   787                           
   788                           	psect	bssBANK0
   789  0020                     __pbssBANK0:
   790  0020                     _errno:
   791  0020                     	ds	2
   792  0022                     _uFlag:
   793  0022                     	ds	1
   794  0023                     _ctrlBits:
   795  0023                     	ds	1
   796  0024                     _usartSendBuffer:
   797  0024                     	ds	19
   798  0037                     _usartReceiveBuffer:
   799  0037                     	ds	19
   800  004A                     _stepperA:
   801  004A                     	ds	12
   802                           
   803                           	psect	bssBANK1
   804  00A0                     __pbssBANK1:
   805  00A0                     _sBufferA:
   806  00A0                     	ds	80
   807                           
   808                           	psect	clrtext
   809  02DE                     clear_ram0:	
   810                           ;	Called with FSR containing the base address, and
   811                           ;	W with the last address+1
   812                           
   813  02DE  0064               	clrwdt	;clear the watchdog before getting into this loop
   814  02DF                     clrloop0:
   815  02DF  0180               	clrf	0	;clear RAM location pointed to by FSR
   816  02E0  0A84               	incf	4,f	;increment pointer
   817  02E1  0604               	xorwf	4,w	;XOR with final address
   818  02E2  1903               	btfsc	3,2	;have we reached the end yet?
   819  02E3  3400               	retlw	0	;all done for this memory range, return
   820  02E4  0604               	xorwf	4,w	;XOR again to restore value
   821  02E5  2ADF               	goto	clrloop0	;do the next byte
   822                           
   823                           	psect	cstackCOMMON
   824  0070                     __pcstackCOMMON:
   825  0070                     ?_GBS_Interrupt_Init:
   826  0070                     ?_GBS_USART_Send:	
   827                           ; 1 bytes @ 0x0
   828                           
   829  0070                     ?_GBS_Interrupt_Enable:	
   830                           ; 1 bytes @ 0x0
   831                           
   832  0070                     ?_USART_TX_ISR:	
   833                           ; 1 bytes @ 0x0
   834                           
   835  0070                     ?_USART_RX_ISR:	
   836                           ; 1 bytes @ 0x0
   837                           
   838  0070                     ?_ISR:	
   839                           ; 1 bytes @ 0x0
   840                           
   841  0070                     ?_GBS_USART_Buffer_Read:	
   842                           ; 1 bytes @ 0x0
   843                           
   844  0070                     ?_GBS_USART_Receive:	
   845                           ; 1 bytes @ 0x0
   846                           
   847  0070                     ?i1_GBS_USART_Buffer_Write:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ?i1_GBS_USART_Buffer_Read:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ??i1_GBS_USART_Buffer_Read:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?i1_GBS_USART_Send:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ?_main:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     i1GBS_USART_Buffer_Write@value:	
   863                           ; 2 bytes @ 0x0
   864                           
   865                           
   866                           ; 1 bytes @ 0x0
   867  0070                     	ds	1
   868  0071                     ??i1_GBS_USART_Buffer_Write:
   869  0071                     i1GBS_USART_Buffer_Read@result:	
   870                           ; 1 bytes @ 0x1
   871                           
   872                           
   873                           ; 1 bytes @ 0x1
   874  0071                     	ds	1
   875  0072                     i1GBS_USART_Buffer_Write@buffer:
   876  0072                     i1GBS_USART_Buffer_Read@buffer:	
   877                           ; 1 bytes @ 0x2
   878                           
   879                           
   880                           ; 1 bytes @ 0x2
   881  0072                     	ds	1
   882  0073                     ??_USART_TX_ISR:
   883  0073                     ??_GBS_USART_Receive:	
   884                           ; 1 bytes @ 0x3
   885                           
   886  0073                     ??i1_GBS_USART_Send:	
   887                           ; 1 bytes @ 0x3
   888                           
   889  0073                     ?i1_GBS_USART_Write_Char:	
   890                           ; 1 bytes @ 0x3
   891                           
   892  0073                     i1GBS_USART_Write_Char@size:	
   893                           ; 1 bytes @ 0x3
   894                           
   895                           
   896                           ; 1 bytes @ 0x3
   897  0073                     	ds	1
   898  0074                     ??i1_GBS_USART_Write_Char:
   899                           
   900                           ; 1 bytes @ 0x4
   901  0074                     	ds	2
   902  0076                     i1GBS_USART_Write_Char@c:
   903                           
   904                           ; 1 bytes @ 0x6
   905  0076                     	ds	1
   906  0077                     i1GBS_USART_Write_Char@i:
   907                           
   908                           ; 1 bytes @ 0x7
   909  0077                     	ds	1
   910  0078                     ??_USART_RX_ISR:
   911                           
   912                           ; 1 bytes @ 0x8
   913  0078                     	ds	2
   914  007A                     ??_ISR:
   915                           
   916                           ; 1 bytes @ 0xA
   917  007A                     	ds	4
   918                           
   919                           	psect	cstackBANK0
   920  0056                     __pcstackBANK0:
   921  0056                     ??_GBS_Interrupt_Init:
   922  0056                     ?_GBS_USART_Init:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0056                     ??_GBS_Interrupt_Enable:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0056                     ?_GBS_USART_Buffer_Write:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0056                     ??_GBS_USART_Buffer_Read:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0056                     GBS_USART_Buffer_Write@value:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0056                     GBS_USART_Init@baudRate:	
   938                           ; 1 bytes @ 0x0
   939                           
   940                           
   941                           ; 2 bytes @ 0x0
   942  0056                     	ds	1
   943  0057                     ??_GBS_USART_Buffer_Write:
   944  0057                     GBS_USART_Buffer_Read@result:	
   945                           ; 1 bytes @ 0x1
   946                           
   947                           
   948                           ; 1 bytes @ 0x1
   949  0057                     	ds	1
   950  0058                     ??_GBS_USART_Init:
   951  0058                     GBS_USART_Buffer_Write@buffer:	
   952                           ; 1 bytes @ 0x2
   953                           
   954  0058                     GBS_USART_Buffer_Read@buffer:	
   955                           ; 1 bytes @ 0x2
   956                           
   957                           
   958                           ; 1 bytes @ 0x2
   959  0058                     	ds	1
   960  0059                     ?_GBS_USART_Write_Char:
   961  0059                     ??_GBS_USART_Send:	
   962                           ; 1 bytes @ 0x3
   963                           
   964  0059                     GBS_USART_Write_Char@size:	
   965                           ; 1 bytes @ 0x3
   966                           
   967                           
   968                           ; 1 bytes @ 0x3
   969  0059                     	ds	1
   970  005A                     ??_GBS_USART_Write_Char:
   971                           
   972                           ; 1 bytes @ 0x4
   973  005A                     	ds	2
   974  005C                     GBS_USART_Write_Char@c:
   975                           
   976                           ; 1 bytes @ 0x6
   977  005C                     	ds	1
   978  005D                     GBS_USART_Write_Char@i:
   979                           
   980                           ; 1 bytes @ 0x7
   981  005D                     	ds	1
   982  005E                     ??_main:
   983                           
   984                           ; 1 bytes @ 0x8
   985  005E                     	ds	3
   986                           
   987                           	psect	maintext
   988  00F9                     __pmaintext:	
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 14 in file "../test.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  2   28[None  ] int 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : B00/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       3       0       0       0
  1011 ;;      Totals:         0       3       0       0       0
  1012 ;;Total ram usage:        3 bytes
  1013 ;; Hardware stack levels required when called:    6
  1014 ;; This function calls:
  1015 ;;		_GBS_Interrupt_Init
  1016 ;;		_GBS_USART_Init
  1017 ;;		_GBS_USART_Send
  1018 ;;		_GBS_USART_Write_Char
  1019 ;; This function is called by:
  1020 ;;		Startup code after reset
  1021 ;; This function uses a non-reentrant model
  1022 ;;
  1023                           
  1024                           
  1025                           ;psect for function _main
  1026  00F9                     _main:
  1027  00F9                     l1553:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1030                           
  1031                           
  1032                           ;../test.c: 16:     GBS_Interrupt_Init();
  1033  00F9  120A  118A  22E6  120A  118A  	fcall	_GBS_Interrupt_Init
  1034  00FE                     l1555:
  1035                           
  1036                           ;../test.c: 18:     GBS_USART_Init(9600);
  1037  00FE  3080               	movlw	128
  1038  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1039  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1040  0101  00D6               	movwf	GBS_USART_Init@baudRate
  1041  0102  3025               	movlw	37
  1042  0103  00D7               	movwf	GBS_USART_Init@baudRate+1
  1043  0104  120A  118A  228D  120A  118A  	fcall	_GBS_USART_Init
  1044  0109                     l1557:
  1045                           
  1046                           ;../test.c: 21:     {;../test.c: 22:         TRISEbits.TRISE0 = 1;
  1047  0109  1683               	bsf	3,5	;RP0=1, select bank1
  1048  010A  1303               	bcf	3,6	;RP1=0, select bank1
  1049  010B  1409               	bsf	9,0	;volatile
  1050                           
  1051                           ;../test.c: 24:         _delay((unsigned long)((1000)*(11059200/4000.0)));
  1052  010C  300F               	movlw	15
  1053  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1054  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1055  010F  00E0               	movwf	??_main+2
  1056  0110  3007               	movlw	7
  1057  0111  00DF               	movwf	??_main+1
  1058  0112  3099               	movlw	153
  1059  0113  00DE               	movwf	??_main
  1060  0114                     u1857:
  1061  0114  0BDE               	decfsz	??_main,f
  1062  0115  2914               	goto	u1857
  1063  0116  0BDF               	decfsz	??_main+1,f
  1064  0117  2914               	goto	u1857
  1065  0118  0BE0               	decfsz	??_main+2,f
  1066  0119  2914               	goto	u1857
  1067  011A  291B               	nop2
  1068  011B                     l1559:
  1069                           
  1070                           ;../test.c: 25:         TRISEbits.TRISE0 = 0;
  1071  011B  1683               	bsf	3,5	;RP0=1, select bank1
  1072  011C  1303               	bcf	3,6	;RP1=0, select bank1
  1073  011D  1009               	bcf	9,0	;volatile
  1074                           
  1075                           ;../test.c: 26:         _delay((unsigned long)((1000)*(11059200/4000.0)));
  1076  011E  300F               	movlw	15
  1077  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0121  00E0               	movwf	??_main+2
  1080  0122  3007               	movlw	7
  1081  0123  00DF               	movwf	??_main+1
  1082  0124  3099               	movlw	153
  1083  0125  00DE               	movwf	??_main
  1084  0126                     u1867:
  1085  0126  0BDE               	decfsz	??_main,f
  1086  0127  2926               	goto	u1867
  1087  0128  0BDF               	decfsz	??_main+1,f
  1088  0129  2926               	goto	u1867
  1089  012A  0BE0               	decfsz	??_main+2,f
  1090  012B  2926               	goto	u1867
  1091  012C  292D               	nop2
  1092  012D                     l1561:
  1093                           
  1094                           ;../test.c: 27:         GBS_USART_Write_Char("1234", sizeof("1234"));;
  1095  012D  3005               	movlw	5
  1096  012E  00FF               	movwf	btemp+1
  1097  012F  087F               	movf	btemp+1,w
  1098  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1099  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1100  0132  00D9               	movwf	GBS_USART_Write_Char@size
  1101  0133  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1102  0134  120A  118A  20AA  120A  118A  	fcall	_GBS_USART_Write_Char
  1103  0139                     l1563:
  1104                           
  1105                           ;../test.c: 28:         GBS_USART_Send();
  1106  0139  120A  118A  2273  120A  118A  	fcall	_GBS_USART_Send
  1107  013E  2909               	goto	l1557
  1108  013F  120A  118A  2812   	ljmp	start
  1109  0142                     __end_of_main:
  1110                           
  1111                           	psect	text1
  1112  00AA                     __ptext1:	
  1113 ;; *************** function _GBS_USART_Write_Char *****************
  1114 ;; Defined at:
  1115 ;;		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1116 ;; Parameters:    Size  Location     Type
  1117 ;;  c               1    wreg     PTR unsigned char 
  1118 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  1119 ;;  size            1    3[BANK0 ] unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  c               1    6[BANK0 ] PTR unsigned char 
  1122 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  1123 ;;  i               1    7[BANK0 ] unsigned char 
  1124 ;; Return value:  Size  Location     Type
  1125 ;;                  1    wreg      void 
  1126 ;; Registers used:
  1127 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1128 ;; Tracked objects:
  1129 ;;		On entry : 0/0
  1130 ;;		On exit  : 0/0
  1131 ;;		Unchanged: 0/0
  1132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1133 ;;      Params:         0       1       0       0       0
  1134 ;;      Locals:         0       2       0       0       0
  1135 ;;      Temps:          0       2       0       0       0
  1136 ;;      Totals:         0       5       0       0       0
  1137 ;;Total ram usage:        5 bytes
  1138 ;; Hardware stack levels used:    1
  1139 ;; Hardware stack levels required when called:    5
  1140 ;; This function calls:
  1141 ;;		_GBS_USART_Buffer_Write
  1142 ;; This function is called by:
  1143 ;;		_main
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _GBS_USART_Write_Char
  1149  00AA                     _GBS_USART_Write_Char:
  1150                           
  1151                           ;incstack = 0
  1152                           ; Regs used in _GBS_USART_Write_Char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1153                           ;GBS_USART_Write_Char@c stored from wreg
  1154  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1155  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1156  00AC  00DC               	movwf	GBS_USART_Write_Char@c
  1157  00AD                     l1413:
  1158                           
  1159                           ;../gbs8/bsp/scr/gbs8_usart.c: 142: void GBS_USART_Write_Char(char* c, uint8_t size);../
      +                          gbs8/bsp/scr/gbs8_usart.c: 143: {;../gbs8/bsp/scr/gbs8_usart.c: 144:     if (size < (16 
      +                          -2))
  1160  00AD  300E               	movlw	14
  1161  00AE  0259               	subwf	GBS_USART_Write_Char@size,w
  1162  00AF  1803               	skipnc
  1163  00B0  28B2               	goto	u531
  1164  00B1  28B3               	goto	u530
  1165  00B2                     u531:
  1166  00B2  28F8               	goto	l303
  1167  00B3                     u530:
  1168  00B3                     l1415:
  1169                           
  1170                           ;../gbs8/bsp/scr/gbs8_usart.c: 145:     {;../gbs8/bsp/scr/gbs8_usart.c: 146:         for
      +                           (uint8_t i = 0; i<(size-1); i++)
  1171  00B3  01DD               	clrf	GBS_USART_Write_Char@i
  1172  00B4  28CE               	goto	l1421
  1173  00B5                     l1417:
  1174                           
  1175                           ;../gbs8/bsp/scr/gbs8_usart.c: 147:         {;../gbs8/bsp/scr/gbs8_usart.c: 149:        
      +                               GBS_USART_Buffer_Write(&usartSendBuffer, c[i]);
  1176  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1177  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1178  00B7  085D               	movf	GBS_USART_Write_Char@i,w
  1179  00B8  075C               	addwf	GBS_USART_Write_Char@c,w
  1180  00B9  0084               	movwf	4
  1181  00BA  120A  118A  2256  120A  118A  	fcall	stringdir
  1182  00BF  00FF               	movwf	btemp+1
  1183  00C0  087F               	movf	btemp+1,w
  1184  00C1  00D6               	movwf	GBS_USART_Buffer_Write@value
  1185  00C2  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1186  00C3  120A  118A  2187  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1187  00C8                     l1419:
  1188                           
  1189                           ;../gbs8/bsp/scr/gbs8_usart.c: 150:         }
  1190  00C8  3001               	movlw	1
  1191  00C9  00FF               	movwf	btemp+1
  1192  00CA  087F               	movf	btemp+1,w
  1193  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00CD  07DD               	addwf	GBS_USART_Write_Char@i,f
  1196  00CE                     l1421:
  1197  00CE  0859               	movf	GBS_USART_Write_Char@size,w
  1198  00CF  3EFF               	addlw	255
  1199  00D0  00DA               	movwf	??_GBS_USART_Write_Char
  1200  00D1  30FF               	movlw	255
  1201  00D2  1803               	skipnc
  1202  00D3  3000               	movlw	0
  1203  00D4  00DB               	movwf	??_GBS_USART_Write_Char+1
  1204  00D5  085B               	movf	??_GBS_USART_Write_Char+1,w
  1205  00D6  3A80               	xorlw	128
  1206  00D7  3C80               	sublw	128
  1207  00D8  1D03               	skipz
  1208  00D9  28DC               	goto	u545
  1209  00DA  085A               	movf	??_GBS_USART_Write_Char,w
  1210  00DB  025D               	subwf	GBS_USART_Write_Char@i,w
  1211  00DC                     u545:
  1212  00DC  1C03               	skipc
  1213  00DD  28DF               	goto	u541
  1214  00DE  28E0               	goto	u540
  1215  00DF                     u541:
  1216  00DF  28B5               	goto	l1417
  1217  00E0                     u540:
  1218  00E0                     l1423:
  1219                           
  1220                           ;../gbs8/bsp/scr/gbs8_usart.c: 151:         GBS_USART_Buffer_Write(&usartSendBuffer, 13)
      +                          ;
  1221  00E0  300D               	movlw	13
  1222  00E1  00FF               	movwf	btemp+1
  1223  00E2  087F               	movf	btemp+1,w
  1224  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1225  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1226  00E5  00D6               	movwf	GBS_USART_Buffer_Write@value
  1227  00E6  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1228  00E7  120A  118A  2187  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1229                           
  1230                           ;../gbs8/bsp/scr/gbs8_usart.c: 152:         GBS_USART_Buffer_Write(&usartSendBuffer, 10)
      +                          ;
  1231  00EC  300A               	movlw	10
  1232  00ED  00FF               	movwf	btemp+1
  1233  00EE  087F               	movf	btemp+1,w
  1234  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1235  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1236  00F1  00D6               	movwf	GBS_USART_Buffer_Write@value
  1237  00F2  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1238  00F3  120A  118A  2187  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1239  00F8                     l303:
  1240  00F8  0008               	return
  1241  00F9                     __end_of_GBS_USART_Write_Char:
  1242                           
  1243                           	psect	text2
  1244  0187                     __ptext2:	
  1245 ;; *************** function _GBS_USART_Buffer_Write *****************
  1246 ;; Defined at:
  1247 ;;		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1248 ;; Parameters:    Size  Location     Type
  1249 ;;  buffer          1    wreg     PTR struct .
  1250 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1251 ;;  value           1    0[BANK0 ] unsigned char 
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;  buffer          1    2[BANK0 ] PTR struct .
  1254 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  1    wreg      void 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         0       1       0       0       0
  1265 ;;      Locals:         0       1       0       0       0
  1266 ;;      Temps:          0       1       0       0       0
  1267 ;;      Totals:         0       3       0       0       0
  1268 ;;Total ram usage:        3 bytes
  1269 ;; Hardware stack levels used:    1
  1270 ;; Hardware stack levels required when called:    4
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_GBS_USART_Write_Char
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           
  1279                           ;psect for function _GBS_USART_Buffer_Write
  1280  0187                     _GBS_USART_Buffer_Write:
  1281                           
  1282                           ;incstack = 0
  1283                           ; Regs used in _GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1284                           ;GBS_USART_Buffer_Write@buffer stored from wreg
  1285  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1286  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1287  0189  00D8               	movwf	GBS_USART_Buffer_Write@buffer
  1288  018A                     l1361:
  1289                           
  1290                           ;../gbs8/bsp/scr/gbs8_usart.c: 41: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 42: {;../gbs8/bsp/scr/gbs8_usart.c: 43:     
      +                          buffer->buffer[buffer->tail] = value;
  1291  018A  0856               	movf	GBS_USART_Buffer_Write@value,w
  1292  018B  00FF               	movwf	btemp+1
  1293  018C  0858               	movf	GBS_USART_Buffer_Write@buffer,w
  1294  018D  3E11               	addlw	17
  1295  018E  0084               	movwf	4
  1296  018F  1383               	bcf	3,7	;select IRP bank0
  1297  0190  0800               	movf	0,w
  1298  0191  0758               	addwf	GBS_USART_Buffer_Write@buffer,w
  1299  0192  00D7               	movwf	??_GBS_USART_Buffer_Write
  1300  0193  0857               	movf	??_GBS_USART_Buffer_Write,w
  1301  0194  0084               	movwf	4
  1302  0195  087F               	movf	btemp+1,w
  1303  0196  0080               	movwf	0
  1304                           
  1305                           ;../gbs8/bsp/scr/gbs8_usart.c: 44:     buffer->tail = (buffer->tail + 1)%16;
  1306  0197  0858               	movf	GBS_USART_Buffer_Write@buffer,w
  1307  0198  3E11               	addlw	17
  1308  0199  0084               	movwf	4
  1309  019A  0800               	movf	0,w
  1310  019B  3E01               	addlw	1
  1311  019C  390F               	andlw	15
  1312  019D  00FF               	movwf	btemp+1
  1313  019E  0858               	movf	GBS_USART_Buffer_Write@buffer,w
  1314  019F  3E11               	addlw	17
  1315  01A0  0084               	movwf	4
  1316  01A1  087F               	movf	btemp+1,w
  1317  01A2  0080               	movwf	0
  1318  01A3                     l1363:
  1319                           
  1320                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     if (buffer->size<16) buffer->size++;
  1321  01A3  0858               	movf	GBS_USART_Buffer_Write@buffer,w
  1322  01A4  3E12               	addlw	18
  1323  01A5  0084               	movwf	4
  1324  01A6  3010               	movlw	16
  1325  01A7  0200               	subwf	0,w
  1326  01A8  1803               	skipnc
  1327  01A9  29AB               	goto	u471
  1328  01AA  29AC               	goto	u470
  1329  01AB                     u471:
  1330  01AB  29B3               	goto	l251
  1331  01AC                     u470:
  1332  01AC                     l1365:
  1333  01AC  3001               	movlw	1
  1334  01AD  00FF               	movwf	btemp+1
  1335  01AE  0858               	movf	GBS_USART_Buffer_Write@buffer,w
  1336  01AF  3E12               	addlw	18
  1337  01B0  0084               	movwf	4
  1338  01B1  087F               	movf	btemp+1,w
  1339  01B2  0780               	addwf	0,f
  1340  01B3                     l251:
  1341  01B3  0008               	return
  1342  01B4                     __end_of_GBS_USART_Buffer_Write:
  1343                           
  1344                           	psect	text3
  1345  0273                     __ptext3:	
  1346 ;; *************** function _GBS_USART_Send *****************
  1347 ;; Defined at:
  1348 ;;		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         0       0       0       0       0
  1366 ;;Total ram usage:        0 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; Hardware stack levels required when called:    5
  1369 ;; This function calls:
  1370 ;;		_GBS_USART_Buffer_Read
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _GBS_USART_Send
  1378  0273                     _GBS_USART_Send:
  1379  0273                     l1425:	
  1380                           ;incstack = 0
  1381                           ; Regs used in _GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1382                           
  1383                           
  1384                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     PIE1bits.TXIE = 1;
  1385  0273  1683               	bsf	3,5	;RP0=1, select bank1
  1386  0274  1303               	bcf	3,6	;RP1=0, select bank1
  1387  0275  160C               	bsf	12,4	;volatile
  1388  0276                     l1427:
  1389                           
  1390                           ;../gbs8/bsp/scr/gbs8_usart.c: 63:     if (usartSendBuffer.size>0)
  1391  0276  1283               	bcf	3,5	;RP0=0, select bank0
  1392  0277  1303               	bcf	3,6	;RP1=0, select bank0
  1393  0278  0836               	movf	_usartSendBuffer+18,w
  1394  0279  1903               	btfsc	3,2
  1395  027A  2A7C               	goto	u551
  1396  027B  2A7D               	goto	u550
  1397  027C                     u551:
  1398  027C  2A8C               	goto	l262
  1399  027D                     u550:
  1400  027D                     l1429:
  1401                           
  1402                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     {;../gbs8/bsp/scr/gbs8_usart.c: 65:         TXREG
      +                           = GBS_USART_Buffer_Read(&usartSendBuffer);
  1403  027D  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1404  027E  120A  118A  21B4  120A  118A  	fcall	_GBS_USART_Buffer_Read
  1405  0283  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0284  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0285  0099               	movwf	25	;volatile
  1408  0286                     l259:	
  1409                           ;../gbs8/bsp/scr/gbs8_usart.c: 66:         while (TXSTAbits.TRMT==0);
  1410                           
  1411  0286  1683               	bsf	3,5	;RP0=1, select bank1
  1412  0287  1303               	bcf	3,6	;RP1=0, select bank1
  1413  0288  1C98               	btfss	24,1	;volatile
  1414  0289  2A8B               	goto	u561
  1415  028A  2A8C               	goto	u560
  1416  028B                     u561:
  1417  028B  2A86               	goto	l259
  1418  028C                     u560:
  1419  028C                     l262:
  1420  028C  0008               	return
  1421  028D                     __end_of_GBS_USART_Send:
  1422                           
  1423                           	psect	text4
  1424  01B4                     __ptext4:	
  1425 ;; *************** function _GBS_USART_Buffer_Read *****************
  1426 ;; Defined at:
  1427 ;;		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  buffer          1    wreg     PTR struct .
  1430 ;;		 -> usartSendBuffer(19), 
  1431 ;; Auto vars:     Size  Location     Type
  1432 ;;  buffer          1    2[BANK0 ] PTR struct .
  1433 ;;		 -> usartSendBuffer(19), 
  1434 ;;  result          1    1[BANK0 ] unsigned char 
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      unsigned char 
  1437 ;; Registers used:
  1438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       0       0       0       0
  1445 ;;      Locals:         0       2       0       0       0
  1446 ;;      Temps:          0       1       0       0       0
  1447 ;;      Totals:         0       3       0       0       0
  1448 ;;Total ram usage:        3 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    4
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_GBS_USART_Send
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _GBS_USART_Buffer_Read
  1460  01B4                     _GBS_USART_Buffer_Read:
  1461                           
  1462                           ;incstack = 0
  1463                           ; Regs used in _GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  1464                           ;GBS_USART_Buffer_Read@buffer stored from wreg
  1465  01B4  1283               	bcf	3,5	;RP0=0, select bank0
  1466  01B5  1303               	bcf	3,6	;RP1=0, select bank0
  1467  01B6  00D8               	movwf	GBS_USART_Buffer_Read@buffer
  1468  01B7                     l1367:
  1469                           
  1470                           ;../gbs8/bsp/scr/gbs8_usart.c: 48: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 49: {;../gbs8/bsp/scr/gbs8_usart.c: 50:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 51:     if (buffer->size>0)
  1471  01B7  0858               	movf	GBS_USART_Buffer_Read@buffer,w
  1472  01B8  3E12               	addlw	18
  1473  01B9  0084               	movwf	4
  1474  01BA  1383               	bcf	3,7	;select IRP bank0
  1475  01BB  0800               	movf	0,w
  1476  01BC  1903               	btfsc	3,2
  1477  01BD  29BF               	goto	u481
  1478  01BE  29C0               	goto	u480
  1479  01BF                     u481:
  1480  01BF  29DE               	goto	l255
  1481  01C0                     u480:
  1482  01C0                     l1369:
  1483                           
  1484                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:     {;../gbs8/bsp/scr/gbs8_usart.c: 53:         resul
      +                          t = buffer->buffer[buffer->head];
  1485  01C0  0858               	movf	GBS_USART_Buffer_Read@buffer,w
  1486  01C1  3E10               	addlw	16
  1487  01C2  0084               	movwf	4
  1488  01C3  0800               	movf	0,w
  1489  01C4  0758               	addwf	GBS_USART_Buffer_Read@buffer,w
  1490  01C5  00D6               	movwf	??_GBS_USART_Buffer_Read
  1491  01C6  0856               	movf	??_GBS_USART_Buffer_Read,w
  1492  01C7  0084               	movwf	4
  1493  01C8  0800               	movf	0,w
  1494  01C9  00FF               	movwf	btemp+1
  1495  01CA  087F               	movf	btemp+1,w
  1496  01CB  00D7               	movwf	GBS_USART_Buffer_Read@result
  1497                           
  1498                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         buffer->head = (buffer->head + 1)%16;
  1499  01CC  0858               	movf	GBS_USART_Buffer_Read@buffer,w
  1500  01CD  3E10               	addlw	16
  1501  01CE  0084               	movwf	4
  1502  01CF  0800               	movf	0,w
  1503  01D0  3E01               	addlw	1
  1504  01D1  390F               	andlw	15
  1505  01D2  00FF               	movwf	btemp+1
  1506  01D3  0858               	movf	GBS_USART_Buffer_Read@buffer,w
  1507  01D4  3E10               	addlw	16
  1508  01D5  0084               	movwf	4
  1509  01D6  087F               	movf	btemp+1,w
  1510  01D7  0080               	movwf	0
  1511  01D8                     l1371:
  1512                           
  1513                           ;../gbs8/bsp/scr/gbs8_usart.c: 55:         buffer->size--;
  1514  01D8  0858               	movf	GBS_USART_Buffer_Read@buffer,w
  1515  01D9  3E12               	addlw	18
  1516  01DA  0084               	movwf	4
  1517  01DB  3001               	movlw	1
  1518  01DC  0280               	subwf	0,f
  1519  01DD                     l1373:
  1520                           
  1521                           ;../gbs8/bsp/scr/gbs8_usart.c: 56:         return result;
  1522  01DD  0857               	movf	GBS_USART_Buffer_Read@result,w
  1523  01DE                     l255:
  1524  01DE  0008               	return
  1525  01DF                     __end_of_GBS_USART_Buffer_Read:
  1526                           
  1527                           	psect	text5
  1528  028D                     __ptext5:	
  1529 ;; *************** function _GBS_USART_Init *****************
  1530 ;; Defined at:
  1531 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  baudRate        2    0[BANK0 ] unsigned int 
  1534 ;; Auto vars:     Size  Location     Type
  1535 ;;		None
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       2       0       0       0
  1546 ;;      Locals:         0       0       0       0       0
  1547 ;;      Temps:          0       0       0       0       0
  1548 ;;      Totals:         0       2       0       0       0
  1549 ;;Total ram usage:        2 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    4
  1552 ;; This function calls:
  1553 ;;		Nothing
  1554 ;; This function is called by:
  1555 ;;		_main
  1556 ;; This function uses a non-reentrant model
  1557 ;;
  1558                           
  1559                           
  1560                           ;psect for function _GBS_USART_Init
  1561  028D                     _GBS_USART_Init:
  1562  028D                     l1399:	
  1563                           ;incstack = 0
  1564                           ; Regs used in _GBS_USART_Init: [wreg]
  1565                           
  1566                           
  1567                           ;../gbs8/bsp/scr/gbs8_usart.c: 6: void GBS_USART_Init(uint16_t baudRate);../gbs8/bsp/scr
      +                          /gbs8_usart.c: 7: {;../gbs8/bsp/scr/gbs8_usart.c: 9:     PIE1bits.TXIE = 0;
  1568  028D  1683               	bsf	3,5	;RP0=1, select bank1
  1569  028E  1303               	bcf	3,6	;RP1=0, select bank1
  1570  028F  120C               	bcf	12,4	;volatile
  1571                           
  1572                           ;../gbs8/bsp/scr/gbs8_usart.c: 10:     PIE1bits.RCIE = 1;
  1573  0290  168C               	bsf	12,5	;volatile
  1574                           
  1575                           ;../gbs8/bsp/scr/gbs8_usart.c: 12:     TXSTAbits.TX9 = 0;
  1576  0291  1318               	bcf	24,6	;volatile
  1577                           
  1578                           ;../gbs8/bsp/scr/gbs8_usart.c: 15:     TXSTAbits.SYNC = 0;
  1579  0292  1218               	bcf	24,4	;volatile
  1580                           
  1581                           ;../gbs8/bsp/scr/gbs8_usart.c: 16:     RCSTAbits.RX9 = 0;
  1582  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1583  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1584  0295  1318               	bcf	24,6	;volatile
  1585                           
  1586                           ;../gbs8/bsp/scr/gbs8_usart.c: 17:     BAUDCTLbits.BRG16 = 0;
  1587  0296  1683               	bsf	3,5	;RP0=1, select bank3
  1588  0297  1703               	bsf	3,6	;RP1=1, select bank3
  1589  0298  1187               	bcf	7,3	;volatile
  1590                           
  1591                           ;../gbs8/bsp/scr/gbs8_usart.c: 20:     TXSTAbits.SENDB = 0;
  1592  0299  1683               	bsf	3,5	;RP0=1, select bank1
  1593  029A  1303               	bcf	3,6	;RP1=0, select bank1
  1594  029B  1198               	bcf	24,3	;volatile
  1595                           
  1596                           ;../gbs8/bsp/scr/gbs8_usart.c: 23:     TXSTAbits.BRGH = 1;
  1597  029C  1518               	bsf	24,2	;volatile
  1598  029D                     l1401:
  1599                           
  1600                           ;../gbs8/bsp/scr/gbs8_usart.c: 27:     SPBRG = 71;
  1601  029D  3047               	movlw	71
  1602  029E  0099               	movwf	25	;volatile
  1603  029F                     l1403:
  1604                           
  1605                           ;../gbs8/bsp/scr/gbs8_usart.c: 30:     TRISCbits.TRISC7 = 1;
  1606  029F  1787               	bsf	7,7	;volatile
  1607  02A0                     l1405:
  1608                           
  1609                           ;../gbs8/bsp/scr/gbs8_usart.c: 33:     TRISCbits.TRISC6 = 0;
  1610  02A0  1307               	bcf	7,6	;volatile
  1611  02A1                     l1407:
  1612                           
  1613                           ;../gbs8/bsp/scr/gbs8_usart.c: 36:     TXSTAbits.TXEN = 1;
  1614  02A1  1698               	bsf	24,5	;volatile
  1615  02A2                     l1409:
  1616                           
  1617                           ;../gbs8/bsp/scr/gbs8_usart.c: 37:     RCSTAbits.CREN = 1;
  1618  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1619  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1620  02A4  1618               	bsf	24,4	;volatile
  1621  02A5                     l1411:
  1622                           
  1623                           ;../gbs8/bsp/scr/gbs8_usart.c: 38:     RCSTAbits.SPEN = 1;
  1624  02A5  1798               	bsf	24,7	;volatile
  1625  02A6                     l247:
  1626  02A6  0008               	return
  1627  02A7                     __end_of_GBS_USART_Init:
  1628                           
  1629                           	psect	text6
  1630  02E6                     __ptext6:	
  1631 ;; *************** function _GBS_Interrupt_Init *****************
  1632 ;; Defined at:
  1633 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1634 ;; Parameters:    Size  Location     Type
  1635 ;;		None
  1636 ;; Auto vars:     Size  Location     Type
  1637 ;;		None
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  1    wreg      void 
  1640 ;; Registers used:
  1641 ;;		status,2, status,0, pclath, cstack
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       0       0       0       0
  1648 ;;      Locals:         0       0       0       0       0
  1649 ;;      Temps:          0       0       0       0       0
  1650 ;;      Totals:         0       0       0       0       0
  1651 ;;Total ram usage:        0 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    5
  1654 ;; This function calls:
  1655 ;;		_GBS_Interrupt_Enable
  1656 ;; This function is called by:
  1657 ;;		_main
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _GBS_Interrupt_Init
  1663  02E6                     _GBS_Interrupt_Init:
  1664  02E6                     l1397:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _GBS_Interrupt_Init: [status,2+status,0+pclath+cstack]
  1667                           
  1668                           
  1669                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 23:     GBS_Interrupt_Enable();
  1670  02E6  120A  118A  22EC  120A  118A  	fcall	_GBS_Interrupt_Enable
  1671  02EB                     l78:
  1672  02EB  0008               	return
  1673  02EC                     __end_of_GBS_Interrupt_Init:
  1674                           
  1675                           	psect	text7
  1676  02EC                     __ptext7:	
  1677 ;; *************** function _GBS_Interrupt_Enable *****************
  1678 ;; Defined at:
  1679 ;;		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1680 ;; Parameters:    Size  Location     Type
  1681 ;;		None
  1682 ;; Auto vars:     Size  Location     Type
  1683 ;;		None
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		None
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0       0       0       0       0
  1695 ;;      Temps:          0       0       0       0       0
  1696 ;;      Totals:         0       0       0       0       0
  1697 ;;Total ram usage:        0 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    4
  1700 ;; This function calls:
  1701 ;;		Nothing
  1702 ;; This function is called by:
  1703 ;;		_GBS_Interrupt_Init
  1704 ;; This function uses a non-reentrant model
  1705 ;;
  1706                           
  1707                           
  1708                           ;psect for function _GBS_Interrupt_Enable
  1709  02EC                     _GBS_Interrupt_Enable:
  1710  02EC                     l1359:	
  1711                           ;incstack = 0
  1712                           ; Regs used in _GBS_Interrupt_Enable: []
  1713                           
  1714                           
  1715                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 28:     INTCONbits.PEIE = 1;
  1716  02EC  170B               	bsf	11,6	;volatile
  1717                           
  1718                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 29:     INTCONbits.GIE = 1;
  1719  02ED  178B               	bsf	11,7	;volatile
  1720  02EE                     l81:
  1721  02EE  0008               	return
  1722  02EF                     __end_of_GBS_Interrupt_Enable:
  1723                           
  1724                           	psect	text8
  1725  0233                     __ptext8:	
  1726 ;; *************** function _ISR *****************
  1727 ;; Defined at:
  1728 ;;		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;		None
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1742 ;;      Params:         0       0       0       0       0
  1743 ;;      Locals:         0       0       0       0       0
  1744 ;;      Temps:          4       0       0       0       0
  1745 ;;      Totals:         4       0       0       0       0
  1746 ;;Total ram usage:        4 bytes
  1747 ;; Hardware stack levels used:    1
  1748 ;; Hardware stack levels required when called:    3
  1749 ;; This function calls:
  1750 ;;		_USART_RX_ISR
  1751 ;;		_USART_TX_ISR
  1752 ;; This function is called by:
  1753 ;;		Interrupt level 1
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _ISR
  1759  0233                     _ISR:
  1760  0233                     i1l1565:
  1761                           
  1762                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 137:     if (PIR1bits.TXIF)
  1763  0233  1E0C               	btfss	12,4	;volatile
  1764  0234  2A36               	goto	u81_21
  1765  0235  2A37               	goto	u81_20
  1766  0236                     u81_21:
  1767  0236  2A3F               	goto	i1l1571
  1768  0237                     u81_20:
  1769  0237                     i1l1567:
  1770                           
  1771                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 138:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 139:    
      +                               USART_TX_ISR();
  1772  0237  120A  118A  22C1  120A  118A  	fcall	_USART_TX_ISR
  1773  023C                     i1l1569:
  1774                           
  1775                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 140:         PIR1bits.TXIF = 0;
  1776  023C  1283               	bcf	3,5	;RP0=0, select bank0
  1777  023D  1303               	bcf	3,6	;RP1=0, select bank0
  1778  023E  120C               	bcf	12,4	;volatile
  1779  023F                     i1l1571:
  1780                           
  1781                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 143:     if (PIR1bits.RCIF)
  1782  023F  1E8C               	btfss	12,5	;volatile
  1783  0240  2A42               	goto	u82_21
  1784  0241  2A43               	goto	u82_20
  1785  0242                     u82_21:
  1786  0242  2A4B               	goto	i1l106
  1787  0243                     u82_20:
  1788  0243                     i1l1573:
  1789                           
  1790                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 144:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 145:    
      +                               USART_RX_ISR();
  1791  0243  120A  118A  202A  120A  118A  	fcall	_USART_RX_ISR
  1792  0248                     i1l1575:
  1793                           
  1794                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 146:         PIR1bits.RCIF = 0;
  1795  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1797  024A  128C               	bcf	12,5	;volatile
  1798  024B                     i1l106:
  1799  024B  087D               	movf	??_ISR+3,w
  1800  024C  00FF               	movwf	btemp+1
  1801  024D  087C               	movf	??_ISR+2,w
  1802  024E  008A               	movwf	10
  1803  024F  087B               	movf	??_ISR+1,w
  1804  0250  0084               	movwf	4
  1805  0251  0E7A               	swapf	??_ISR^(0+4294967168),w
  1806  0252  0083               	movwf	3
  1807  0253  0EFE               	swapf	btemp,f
  1808  0254  0E7E               	swapf	btemp,w
  1809  0255  0009               	retfie
  1810  0256                     __end_of_ISR:
  1811                           
  1812                           	psect	intentry
  1813  0004                     __pintentry:	
  1814                           ;incstack = 0
  1815                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1816                           
  1817  0004                     interrupt_function:
  1818  007E                     saved_w	set	btemp
  1819  0004  00FE               	movwf	btemp
  1820  0005  0E03               	swapf	3,w
  1821  0006  00FA               	movwf	??_ISR
  1822  0007  0804               	movf	4,w
  1823  0008  00FB               	movwf	??_ISR+1
  1824  0009  080A               	movf	10,w
  1825  000A  00FC               	movwf	??_ISR+2
  1826  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1827  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1828  000D  087F               	movf	btemp+1,w
  1829  000E  00FD               	movwf	??_ISR+3
  1830  000F  120A  118A  2A33   	ljmp	_ISR
  1831                           
  1832                           	psect	text9
  1833  02C1                     __ptext9:	
  1834 ;; *************** function _USART_TX_ISR *****************
  1835 ;; Defined at:
  1836 ;;		line 75 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1850 ;;      Params:         0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0
  1852 ;;      Temps:          0       0       0       0       0
  1853 ;;      Totals:         0       0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    2
  1857 ;; This function calls:
  1858 ;;		i1_GBS_USART_Send
  1859 ;; This function is called by:
  1860 ;;		_ISR
  1861 ;; This function uses a non-reentrant model
  1862 ;;
  1863                           
  1864                           
  1865                           ;psect for function _USART_TX_ISR
  1866  02C1                     _USART_TX_ISR:
  1867  02C1                     i1l1431:	
  1868                           ;incstack = 0
  1869                           ; Regs used in _USART_TX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1870                           
  1871                           
  1872                           ;../gbs8/bsp/scr/gbs8_usart.c: 77:     if (usartSendBuffer.size!=0)
  1873  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  1874  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  1875  02C3  0836               	movf	_usartSendBuffer+18,w
  1876  02C4  1903               	btfsc	3,2
  1877  02C5  2AC7               	goto	u57_21
  1878  02C6  2AC8               	goto	u57_20
  1879  02C7                     u57_21:
  1880  02C7  2ACD               	goto	i1l1435
  1881  02C8                     u57_20:
  1882  02C8                     i1l1433:
  1883                           
  1884                           ;../gbs8/bsp/scr/gbs8_usart.c: 78:     GBS_USART_Send();
  1885  02C8  120A  118A  22A7  120A  118A  	fcall	i1_GBS_USART_Send
  1886  02CD                     i1l1435:
  1887                           
  1888                           ;../gbs8/bsp/scr/gbs8_usart.c: 79:     PIE1bits.TXIE = 0;
  1889  02CD  1683               	bsf	3,5	;RP0=1, select bank1
  1890  02CE  1303               	bcf	3,6	;RP1=0, select bank1
  1891  02CF  120C               	bcf	12,4	;volatile
  1892  02D0                     i1l269:
  1893  02D0  0008               	return
  1894  02D1                     __end_of_USART_TX_ISR:
  1895                           
  1896                           	psect	text10
  1897  02A7                     __ptext10:	
  1898 ;; *************** function i1_GBS_USART_Send *****************
  1899 ;; Defined at:
  1900 ;;		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;		None
  1903 ;; Auto vars:     Size  Location     Type
  1904 ;;		None
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       0       0
  1915 ;;      Locals:         0       0       0       0       0
  1916 ;;      Temps:          0       0       0       0       0
  1917 ;;      Totals:         0       0       0       0       0
  1918 ;;Total ram usage:        0 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    1
  1921 ;; This function calls:
  1922 ;;		i1_GBS_USART_Buffer_Read
  1923 ;; This function is called by:
  1924 ;;		_USART_TX_ISR
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function i1_GBS_USART_Send
  1930  02A7                     i1_GBS_USART_Send:
  1931  02A7                     i1l1379:	
  1932                           ;incstack = 0
  1933                           ; Regs used in i1_GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1934                           
  1935                           
  1936                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     PIE1bits.TXIE = 1;
  1937  02A7  1683               	bsf	3,5	;RP0=1, select bank1
  1938  02A8  1303               	bcf	3,6	;RP1=0, select bank1
  1939  02A9  160C               	bsf	12,4	;volatile
  1940  02AA                     i1l1381:
  1941                           
  1942                           ;../gbs8/bsp/scr/gbs8_usart.c: 63:     if (usartSendBuffer.size>0)
  1943  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  1944  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  1945  02AC  0836               	movf	_usartSendBuffer+18,w
  1946  02AD  1903               	btfsc	3,2
  1947  02AE  2AB0               	goto	u49_21
  1948  02AF  2AB1               	goto	u49_20
  1949  02B0                     u49_21:
  1950  02B0  2AC0               	goto	i1l262
  1951  02B1                     u49_20:
  1952  02B1                     i1l1383:
  1953                           
  1954                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     {;../gbs8/bsp/scr/gbs8_usart.c: 65:         TXREG
      +                           = GBS_USART_Buffer_Read(&usartSendBuffer);
  1955  02B1  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1956  02B2  120A  118A  220A  120A  118A  	fcall	i1_GBS_USART_Buffer_Read
  1957  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1958  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1959  02B9  0099               	movwf	25	;volatile
  1960  02BA                     i1l259:	
  1961                           ;../gbs8/bsp/scr/gbs8_usart.c: 66:         while (TXSTAbits.TRMT==0);
  1962                           
  1963  02BA  1683               	bsf	3,5	;RP0=1, select bank1
  1964  02BB  1303               	bcf	3,6	;RP1=0, select bank1
  1965  02BC  1C98               	btfss	24,1	;volatile
  1966  02BD  2ABF               	goto	u50_21
  1967  02BE  2AC0               	goto	u50_20
  1968  02BF                     u50_21:
  1969  02BF  2ABA               	goto	i1l259
  1970  02C0                     u50_20:
  1971  02C0                     i1l262:
  1972  02C0  0008               	return
  1973  02C1                     __end_ofi1_GBS_USART_Send:
  1974                           
  1975                           	psect	text11
  1976  020A                     __ptext11:	
  1977 ;; *************** function i1_GBS_USART_Buffer_Read *****************
  1978 ;; Defined at:
  1979 ;;		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  buffer          1    wreg     PTR struct .
  1982 ;;		 -> usartSendBuffer(19), 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  buffer          1    2[COMMON] PTR struct .
  1985 ;;		 -> usartSendBuffer(19), 
  1986 ;;  result          1    1[COMMON] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  1    wreg      unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1996 ;;      Params:         0       0       0       0       0
  1997 ;;      Locals:         2       0       0       0       0
  1998 ;;      Temps:          1       0       0       0       0
  1999 ;;      Totals:         3       0       0       0       0
  2000 ;;Total ram usage:        3 bytes
  2001 ;; Hardware stack levels used:    1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		i1_GBS_USART_Send
  2006 ;; This function uses a non-reentrant model
  2007 ;;
  2008                           
  2009                           
  2010                           ;psect for function i1_GBS_USART_Buffer_Read
  2011  020A                     i1_GBS_USART_Buffer_Read:
  2012                           
  2013                           ;incstack = 0
  2014                           ; Regs used in i1_GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  2015                           ;i1GBS_USART_Buffer_Read@buffer stored from wreg
  2016  020A  00F2               	movwf	i1GBS_USART_Buffer_Read@buffer
  2017  020B                     i1l1349:
  2018                           
  2019                           ;../gbs8/bsp/scr/gbs8_usart.c: 48: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 49: {;../gbs8/bsp/scr/gbs8_usart.c: 50:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 51:     if (buffer->size>0)
  2020  020B  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2021  020C  3E12               	addlw	18
  2022  020D  0084               	movwf	4
  2023  020E  1383               	bcf	3,7	;select IRP bank0
  2024  020F  0800               	movf	0,w
  2025  0210  1903               	btfsc	3,2
  2026  0211  2A13               	goto	u46_21
  2027  0212  2A14               	goto	u46_20
  2028  0213                     u46_21:
  2029  0213  2A32               	goto	i1l255
  2030  0214                     u46_20:
  2031  0214                     i1l1351:
  2032                           
  2033                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:     {;../gbs8/bsp/scr/gbs8_usart.c: 53:         resul
      +                          t = buffer->buffer[buffer->head];
  2034  0214  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2035  0215  3E10               	addlw	16
  2036  0216  0084               	movwf	4
  2037  0217  0800               	movf	0,w
  2038  0218  0772               	addwf	i1GBS_USART_Buffer_Read@buffer,w
  2039  0219  00F0               	movwf	??i1_GBS_USART_Buffer_Read
  2040  021A  0870               	movf	??i1_GBS_USART_Buffer_Read,w
  2041  021B  0084               	movwf	4
  2042  021C  0800               	movf	0,w
  2043  021D  00FF               	movwf	btemp+1
  2044  021E  087F               	movf	btemp+1,w
  2045  021F  00F1               	movwf	i1GBS_USART_Buffer_Read@result
  2046                           
  2047                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         buffer->head = (buffer->head + 1)%16;
  2048  0220  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2049  0221  3E10               	addlw	16
  2050  0222  0084               	movwf	4
  2051  0223  0800               	movf	0,w
  2052  0224  3E01               	addlw	1
  2053  0225  390F               	andlw	15
  2054  0226  00FF               	movwf	btemp+1
  2055  0227  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2056  0228  3E10               	addlw	16
  2057  0229  0084               	movwf	4
  2058  022A  087F               	movf	btemp+1,w
  2059  022B  0080               	movwf	0
  2060  022C                     i1l1353:
  2061                           
  2062                           ;../gbs8/bsp/scr/gbs8_usart.c: 55:         buffer->size--;
  2063  022C  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2064  022D  3E12               	addlw	18
  2065  022E  0084               	movwf	4
  2066  022F  3001               	movlw	1
  2067  0230  0280               	subwf	0,f
  2068  0231                     i1l1355:
  2069                           
  2070                           ;../gbs8/bsp/scr/gbs8_usart.c: 56:         return result;
  2071  0231  0871               	movf	i1GBS_USART_Buffer_Read@result,w
  2072  0232                     i1l255:
  2073  0232  0008               	return
  2074  0233                     __end_ofi1_GBS_USART_Buffer_Read:
  2075                           
  2076                           	psect	text12
  2077  002A                     __ptext12:	
  2078 ;; *************** function _USART_RX_ISR *****************
  2079 ;; Defined at:
  2080 ;;		line 82 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;		None
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;		None
  2085 ;; Return value:  Size  Location     Type
  2086 ;;                  1    wreg      void 
  2087 ;; Registers used:
  2088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2089 ;; Tracked objects:
  2090 ;;		On entry : 0/0
  2091 ;;		On exit  : 0/0
  2092 ;;		Unchanged: 0/0
  2093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2094 ;;      Params:         0       0       0       0       0
  2095 ;;      Locals:         0       0       0       0       0
  2096 ;;      Temps:          2       0       0       0       0
  2097 ;;      Totals:         2       0       0       0       0
  2098 ;;Total ram usage:        2 bytes
  2099 ;; Hardware stack levels used:    1
  2100 ;; Hardware stack levels required when called:    2
  2101 ;; This function calls:
  2102 ;;		_GBS_USART_Receive
  2103 ;;		i1_GBS_USART_Write_Char
  2104 ;; This function is called by:
  2105 ;;		_ISR
  2106 ;; This function uses a non-reentrant model
  2107 ;;
  2108                           
  2109                           
  2110                           ;psect for function _USART_RX_ISR
  2111  002A                     _USART_RX_ISR:
  2112  002A                     i1l1437:	
  2113                           ;incstack = 0
  2114                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2115                           
  2116                           
  2117                           ;../gbs8/bsp/scr/gbs8_usart.c: 84:     if (uFlag.dFlag)
  2118  002A  1283               	bcf	3,5	;RP0=0, select bank0
  2119  002B  1303               	bcf	3,6	;RP1=0, select bank0
  2120  002C  1CA2               	btfss	_uFlag,1
  2121  002D  282F               	goto	u58_21
  2122  002E  2830               	goto	u58_20
  2123  002F                     u58_21:
  2124  002F  284F               	goto	i1l1447
  2125  0030                     u58_20:
  2126  0030                     i1l1439:
  2127                           
  2128                           ;../gbs8/bsp/scr/gbs8_usart.c: 85:     {;../gbs8/bsp/scr/gbs8_usart.c: 86:         if (R
      +                          CREG == ' ')
  2129  0030  3020               	movlw	32
  2130  0031  061A               	xorwf	26,w	;volatile
  2131  0032  1D03               	btfss	3,2
  2132  0033  2835               	goto	u59_21
  2133  0034  2836               	goto	u59_20
  2134  0035                     u59_21:
  2135  0035  2849               	goto	i1l1445
  2136  0036                     u59_20:
  2137  0036                     i1l1441:
  2138                           
  2139                           ;../gbs8/bsp/scr/gbs8_usart.c: 87:         {;../gbs8/bsp/scr/gbs8_usart.c: 88:          
      +                             uFlag.dFlag = 0;
  2140  0036  10A2               	bcf	_uFlag,1
  2141                           
  2142                           ;../gbs8/bsp/scr/gbs8_usart.c: 89:             uFlag.rFlag = 1;
  2143  0037  1522               	bsf	_uFlag,2
  2144  0038                     i1l1443:
  2145                           
  2146                           ;../gbs8/bsp/scr/gbs8_usart.c: 92:             GBS_USART_Write_Char("DReceive", sizeof("
      +                          DReceive"));;
  2147  0038  3009               	movlw	9
  2148  0039  00FF               	movwf	btemp+1
  2149  003A  087F               	movf	btemp+1,w
  2150  003B  00F3               	movwf	i1GBS_USART_Write_Char@size
  2151  003C  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2152  003D  120A  118A  2142  120A  118A  	fcall	i1_GBS_USART_Write_Char
  2153  0042                     i1l274:	
  2154                           ;../gbs8/bsp/scr/gbs8_usart.c: 93:             while (TXSTAbits.TRMT==0);
  2155                           
  2156  0042  1683               	bsf	3,5	;RP0=1, select bank1
  2157  0043  1303               	bcf	3,6	;RP1=0, select bank1
  2158  0044  1C98               	btfss	24,1	;volatile
  2159  0045  2847               	goto	u60_21
  2160  0046  2848               	goto	u60_20
  2161  0047                     u60_21:
  2162  0047  2842               	goto	i1l274
  2163  0048                     u60_20:
  2164  0048  28A9               	goto	i1l296
  2165  0049                     i1l1445:
  2166  0049  120A  118A  22D1  120A  118A  	fcall	_GBS_USART_Receive
  2167  004E  28A9               	goto	i1l296
  2168  004F                     i1l1447:
  2169  004F  3043               	movlw	67
  2170  0050  061A               	xorwf	26,w	;volatile
  2171  0051  1D03               	btfss	3,2
  2172  0052  2854               	goto	u61_21
  2173  0053  2855               	goto	u61_20
  2174  0054                     u61_21:
  2175  0054  285B               	goto	i1l1453
  2176  0055                     u61_20:
  2177  0055                     i1l1449:
  2178                           
  2179                           ;../gbs8/bsp/scr/gbs8_usart.c: 98:     {;../gbs8/bsp/scr/gbs8_usart.c: 99:         if (u
      +                          Flag.dFlag != 1) uFlag.cFlag = 1;
  2180  0055  18A2               	btfsc	_uFlag,1
  2181  0056  2858               	goto	u62_21
  2182  0057  2859               	goto	u62_20
  2183  0058                     u62_21:
  2184  0058  28A9               	goto	i1l296
  2185  0059                     u62_20:
  2186  0059                     i1l1451:
  2187  0059  1422               	bsf	_uFlag,0
  2188  005A  28A9               	goto	i1l296
  2189  005B                     i1l1453:
  2190  005B  3044               	movlw	68
  2191  005C  061A               	xorwf	26,w	;volatile
  2192  005D  1D03               	btfss	3,2
  2193  005E  2860               	goto	u63_21
  2194  005F  2861               	goto	u63_20
  2195  0060                     u63_21:
  2196  0060  2867               	goto	i1l282
  2197  0061                     u63_20:
  2198  0061                     i1l1455:
  2199                           
  2200                           ;../gbs8/bsp/scr/gbs8_usart.c: 102:     {;../gbs8/bsp/scr/gbs8_usart.c: 103:         if 
      +                          (uFlag.cFlag != 1) uFlag.dFlag = 1;
  2201  0061  1822               	btfsc	_uFlag,0
  2202  0062  2864               	goto	u64_21
  2203  0063  2865               	goto	u64_20
  2204  0064                     u64_21:
  2205  0064  28A9               	goto	i1l296
  2206  0065                     u64_20:
  2207  0065                     i1l1457:
  2208  0065  14A2               	bsf	_uFlag,1
  2209  0066  28A9               	goto	i1l296
  2210  0067                     i1l282:	
  2211                           ;../gbs8/bsp/scr/gbs8_usart.c: 105:     else if (uFlag.cFlag == 1)
  2212                           
  2213  0067  1C22               	btfss	_uFlag,0
  2214  0068  286A               	goto	u65_21
  2215  0069  286B               	goto	u65_20
  2216  006A                     u65_21:
  2217  006A  28A9               	goto	i1l296
  2218  006B                     u65_20:
  2219  006B  287C               	goto	i1l1463
  2220  006C                     i1l287:	
  2221                           ;../gbs8/bsp/scr/gbs8_usart.c: 108:         {;../gbs8/bsp/scr/gbs8_usart.c: 109:        
      +                           case '0':
  2222                           
  2223                           
  2224                           ;../gbs8/bsp/scr/gbs8_usart.c: 110:             ctrlBits.r0 = 1;
  2225  006C  1423               	bsf	_ctrlBits,0
  2226                           
  2227                           ;../gbs8/bsp/scr/gbs8_usart.c: 111:             break;
  2228  006D  289E               	goto	i1l288
  2229  006E                     i1l289:	
  2230                           ;../gbs8/bsp/scr/gbs8_usart.c: 112:         case '1':
  2231                           
  2232                           
  2233                           ;../gbs8/bsp/scr/gbs8_usart.c: 113:             ctrlBits.r1 = 1;
  2234  006E  14A3               	bsf	_ctrlBits,1
  2235                           
  2236                           ;../gbs8/bsp/scr/gbs8_usart.c: 114:             break;
  2237  006F  289E               	goto	i1l288
  2238  0070                     i1l290:	
  2239                           ;../gbs8/bsp/scr/gbs8_usart.c: 115:         case '2':
  2240                           
  2241                           
  2242                           ;../gbs8/bsp/scr/gbs8_usart.c: 116:             ctrlBits.r2 = 1;
  2243  0070  1523               	bsf	_ctrlBits,2
  2244                           
  2245                           ;../gbs8/bsp/scr/gbs8_usart.c: 117:             break;
  2246  0071  289E               	goto	i1l288
  2247  0072                     i1l291:	
  2248                           ;../gbs8/bsp/scr/gbs8_usart.c: 118:         case '3':
  2249                           
  2250                           
  2251                           ;../gbs8/bsp/scr/gbs8_usart.c: 119:             ctrlBits.r3 = 1;
  2252  0072  15A3               	bsf	_ctrlBits,3
  2253                           
  2254                           ;../gbs8/bsp/scr/gbs8_usart.c: 120:             break;
  2255  0073  289E               	goto	i1l288
  2256  0074                     i1l292:	
  2257                           ;../gbs8/bsp/scr/gbs8_usart.c: 121:         case '4':
  2258                           
  2259                           
  2260                           ;../gbs8/bsp/scr/gbs8_usart.c: 122:             ctrlBits.r4 = 1;
  2261  0074  1623               	bsf	_ctrlBits,4
  2262                           
  2263                           ;../gbs8/bsp/scr/gbs8_usart.c: 123:             break;
  2264  0075  289E               	goto	i1l288
  2265  0076                     i1l293:	
  2266                           ;../gbs8/bsp/scr/gbs8_usart.c: 124:         case '5':
  2267                           
  2268                           
  2269                           ;../gbs8/bsp/scr/gbs8_usart.c: 125:             ctrlBits.r5 = 1;
  2270  0076  16A3               	bsf	_ctrlBits,5
  2271                           
  2272                           ;../gbs8/bsp/scr/gbs8_usart.c: 126:             break;
  2273  0077  289E               	goto	i1l288
  2274  0078                     i1l294:	
  2275                           ;../gbs8/bsp/scr/gbs8_usart.c: 127:         case '6':
  2276                           
  2277                           
  2278                           ;../gbs8/bsp/scr/gbs8_usart.c: 128:             ctrlBits.r6 = 1;
  2279  0078  1723               	bsf	_ctrlBits,6
  2280                           
  2281                           ;../gbs8/bsp/scr/gbs8_usart.c: 129:             break;
  2282  0079  289E               	goto	i1l288
  2283  007A                     i1l295:	
  2284                           ;../gbs8/bsp/scr/gbs8_usart.c: 130:         case '7':
  2285                           
  2286                           
  2287                           ;../gbs8/bsp/scr/gbs8_usart.c: 131:             ctrlBits.r7 = 1;
  2288  007A  17A3               	bsf	_ctrlBits,7
  2289                           
  2290                           ;../gbs8/bsp/scr/gbs8_usart.c: 132:             break;
  2291  007B  289E               	goto	i1l288
  2292  007C                     i1l1463:
  2293  007C  081A               	movf	26,w	;volatile
  2294  007D  00F8               	movwf	??_USART_RX_ISR
  2295  007E  01F9               	clrf	??_USART_RX_ISR+1
  2296                           
  2297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 1, Range of values is 0 to 0
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte            4     3 (average)
  2303                           ; direct_byte           11     8 (fixed)
  2304                           ; jumptable            260     6 (fixed)
  2305                           ;	Chosen strategy is simple_byte
  2306  007F  0879               	movf	??_USART_RX_ISR+1,w
  2307  0080  3A00               	xorlw	0	; case 0
  2308  0081  1903               	skipnz
  2309  0082  2884               	goto	i1l2075
  2310  0083  289E               	goto	i1l288
  2311  0084                     i1l2075:
  2312                           
  2313                           ; Switch size 1, requested type "simple"
  2314                           ; Number of cases is 8, Range of values is 48 to 55
  2315                           ; switch strategies available:
  2316                           ; Name         Instructions Cycles
  2317                           ; simple_byte           25    13 (average)
  2318                           ; direct_byte           35    11 (fixed)
  2319                           ; jumptable            263     9 (fixed)
  2320                           ;	Chosen strategy is simple_byte
  2321  0084  0878               	movf	??_USART_RX_ISR,w
  2322  0085  3A30               	xorlw	48	; case 48
  2323  0086  1903               	skipnz
  2324  0087  286C               	goto	i1l287
  2325  0088  3A01               	xorlw	1	; case 49
  2326  0089  1903               	skipnz
  2327  008A  286E               	goto	i1l289
  2328  008B  3A03               	xorlw	3	; case 50
  2329  008C  1903               	skipnz
  2330  008D  2870               	goto	i1l290
  2331  008E  3A01               	xorlw	1	; case 51
  2332  008F  1903               	skipnz
  2333  0090  2872               	goto	i1l291
  2334  0091  3A07               	xorlw	7	; case 52
  2335  0092  1903               	skipnz
  2336  0093  2874               	goto	i1l292
  2337  0094  3A01               	xorlw	1	; case 53
  2338  0095  1903               	skipnz
  2339  0096  2876               	goto	i1l293
  2340  0097  3A03               	xorlw	3	; case 54
  2341  0098  1903               	skipnz
  2342  0099  2878               	goto	i1l294
  2343  009A  3A01               	xorlw	1	; case 55
  2344  009B  1903               	skipnz
  2345  009C  287A               	goto	i1l295
  2346  009D  289E               	goto	i1l288
  2347  009E                     i1l288:
  2348                           
  2349                           ;../gbs8/bsp/scr/gbs8_usart.c: 134:         uFlag.cFlag = 0;
  2350  009E  1022               	bcf	_uFlag,0
  2351  009F                     i1l1465:
  2352                           
  2353                           ;../gbs8/bsp/scr/gbs8_usart.c: 136:         GBS_USART_Write_Char("CReceive", sizeof("CRe
      +                          ceive"));;
  2354  009F  3009               	movlw	9
  2355  00A0  00FF               	movwf	btemp+1
  2356  00A1  087F               	movf	btemp+1,w
  2357  00A2  00F3               	movwf	i1GBS_USART_Write_Char@size
  2358  00A3  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2359  00A4  120A  118A  2142  120A  118A  	fcall	i1_GBS_USART_Write_Char
  2360  00A9                     i1l296:
  2361  00A9  0008               	return
  2362  00AA                     __end_of_USART_RX_ISR:
  2363                           
  2364                           	psect	text13
  2365  0142                     __ptext13:	
  2366 ;; *************** function i1_GBS_USART_Write_Char *****************
  2367 ;; Defined at:
  2368 ;;		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  c               1    wreg     PTR unsigned char 
  2371 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  2372 ;;  size            1    3[COMMON] unsigned char 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  c               1    6[COMMON] PTR unsigned char 
  2375 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  2376 ;;  i               1    7[COMMON] unsigned char 
  2377 ;; Return value:  Size  Location     Type
  2378 ;;                  1    wreg      void 
  2379 ;; Registers used:
  2380 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2381 ;; Tracked objects:
  2382 ;;		On entry : 0/0
  2383 ;;		On exit  : 0/0
  2384 ;;		Unchanged: 0/0
  2385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2386 ;;      Params:         1       0       0       0       0
  2387 ;;      Locals:         2       0       0       0       0
  2388 ;;      Temps:          2       0       0       0       0
  2389 ;;      Totals:         5       0       0       0       0
  2390 ;;Total ram usage:        5 bytes
  2391 ;; Hardware stack levels used:    1
  2392 ;; Hardware stack levels required when called:    1
  2393 ;; This function calls:
  2394 ;;		i1_GBS_USART_Buffer_Write
  2395 ;; This function is called by:
  2396 ;;		_USART_RX_ISR
  2397 ;; This function uses a non-reentrant model
  2398 ;;
  2399                           
  2400                           
  2401                           ;psect for function i1_GBS_USART_Write_Char
  2402  0142                     i1_GBS_USART_Write_Char:
  2403                           
  2404                           ;incstack = 0
  2405                           ; Regs used in i1_GBS_USART_Write_Char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2406                           ;i1GBS_USART_Write_Char@c stored from wreg
  2407  0142  00F6               	movwf	i1GBS_USART_Write_Char@c
  2408  0143                     i1l1385:
  2409                           
  2410                           ;../gbs8/bsp/scr/gbs8_usart.c: 142: void GBS_USART_Write_Char(char* c, uint8_t size);../
      +                          gbs8/bsp/scr/gbs8_usart.c: 143: {;../gbs8/bsp/scr/gbs8_usart.c: 144:     if (size < (16 
      +                          -2))
  2411  0143  300E               	movlw	14
  2412  0144  0273               	subwf	i1GBS_USART_Write_Char@size,w
  2413  0145  1803               	skipnc
  2414  0146  2948               	goto	u51_21
  2415  0147  2949               	goto	u51_20
  2416  0148                     u51_21:
  2417  0148  2986               	goto	i1l303
  2418  0149                     u51_20:
  2419  0149                     i1l1387:
  2420                           
  2421                           ;../gbs8/bsp/scr/gbs8_usart.c: 145:     {;../gbs8/bsp/scr/gbs8_usart.c: 146:         for
      +                           (uint8_t i = 0; i<(size-1); i++)
  2422  0149  01F7               	clrf	i1GBS_USART_Write_Char@i
  2423  014A  2960               	goto	i1l1393
  2424  014B                     i1l1389:
  2425                           
  2426                           ;../gbs8/bsp/scr/gbs8_usart.c: 147:         {;../gbs8/bsp/scr/gbs8_usart.c: 149:        
      +                               GBS_USART_Buffer_Write(&usartSendBuffer, c[i]);
  2427  014B  0877               	movf	i1GBS_USART_Write_Char@i,w
  2428  014C  0776               	addwf	i1GBS_USART_Write_Char@c,w
  2429  014D  0084               	movwf	4
  2430  014E  120A  118A  2256  120A  118A  	fcall	stringdir
  2431  0153  00FF               	movwf	btemp+1
  2432  0154  087F               	movf	btemp+1,w
  2433  0155  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2434  0156  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2435  0157  120A  118A  21DF  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2436  015C                     i1l1391:
  2437                           
  2438                           ;../gbs8/bsp/scr/gbs8_usart.c: 150:         }
  2439  015C  3001               	movlw	1
  2440  015D  00FF               	movwf	btemp+1
  2441  015E  087F               	movf	btemp+1,w
  2442  015F  07F7               	addwf	i1GBS_USART_Write_Char@i,f
  2443  0160                     i1l1393:
  2444  0160  0873               	movf	i1GBS_USART_Write_Char@size,w
  2445  0161  3EFF               	addlw	255
  2446  0162  00F4               	movwf	??i1_GBS_USART_Write_Char
  2447  0163  30FF               	movlw	255
  2448  0164  1803               	skipnc
  2449  0165  3000               	movlw	0
  2450  0166  00F5               	movwf	??i1_GBS_USART_Write_Char+1
  2451  0167  0875               	movf	??i1_GBS_USART_Write_Char+1,w
  2452  0168  3A80               	xorlw	128
  2453  0169  3C80               	sublw	128
  2454  016A  1D03               	skipz
  2455  016B  296E               	goto	u52_25
  2456  016C  0874               	movf	??i1_GBS_USART_Write_Char,w
  2457  016D  0277               	subwf	i1GBS_USART_Write_Char@i,w
  2458  016E                     u52_25:
  2459  016E  1C03               	skipc
  2460  016F  2971               	goto	u52_21
  2461  0170  2972               	goto	u52_20
  2462  0171                     u52_21:
  2463  0171  294B               	goto	i1l1389
  2464  0172                     u52_20:
  2465  0172                     i1l1395:
  2466                           
  2467                           ;../gbs8/bsp/scr/gbs8_usart.c: 151:         GBS_USART_Buffer_Write(&usartSendBuffer, 13)
      +                          ;
  2468  0172  300D               	movlw	13
  2469  0173  00FF               	movwf	btemp+1
  2470  0174  087F               	movf	btemp+1,w
  2471  0175  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2472  0176  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2473  0177  120A  118A  21DF  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2474                           
  2475                           ;../gbs8/bsp/scr/gbs8_usart.c: 152:         GBS_USART_Buffer_Write(&usartSendBuffer, 10)
      +                          ;
  2476  017C  300A               	movlw	10
  2477  017D  00FF               	movwf	btemp+1
  2478  017E  087F               	movf	btemp+1,w
  2479  017F  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2480  0180  3024               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2481  0181  120A  118A  21DF  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2482  0186                     i1l303:
  2483  0186  0008               	return
  2484  0187                     __end_ofi1_GBS_USART_Write_Char:
  2485                           
  2486                           	psect	text14
  2487  02D1                     __ptext14:	
  2488 ;; *************** function _GBS_USART_Receive *****************
  2489 ;; Defined at:
  2490 ;;		line 70 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2491 ;; Parameters:    Size  Location     Type
  2492 ;;		None
  2493 ;; Auto vars:     Size  Location     Type
  2494 ;;		None
  2495 ;; Return value:  Size  Location     Type
  2496 ;;                  1    wreg      void 
  2497 ;; Registers used:
  2498 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2499 ;; Tracked objects:
  2500 ;;		On entry : 0/0
  2501 ;;		On exit  : 0/0
  2502 ;;		Unchanged: 0/0
  2503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2504 ;;      Params:         0       0       0       0       0
  2505 ;;      Locals:         0       0       0       0       0
  2506 ;;      Temps:          0       0       0       0       0
  2507 ;;      Totals:         0       0       0       0       0
  2508 ;;Total ram usage:        0 bytes
  2509 ;; Hardware stack levels used:    1
  2510 ;; Hardware stack levels required when called:    1
  2511 ;; This function calls:
  2512 ;;		i1_GBS_USART_Buffer_Write
  2513 ;; This function is called by:
  2514 ;;		_USART_RX_ISR
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           
  2519                           ;psect for function _GBS_USART_Receive
  2520  02D1                     _GBS_USART_Receive:
  2521  02D1                     i1l1377:	
  2522                           ;incstack = 0
  2523                           ; Regs used in _GBS_USART_Receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2524                           
  2525                           
  2526                           ;../gbs8/bsp/scr/gbs8_usart.c: 72:     GBS_USART_Buffer_Write(&usartReceiveBuffer, RCREG
      +                          );
  2527  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2528  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2529  02D3  081A               	movf	26,w	;volatile
  2530  02D4  00FF               	movwf	btemp+1
  2531  02D5  087F               	movf	btemp+1,w
  2532  02D6  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2533  02D7  3037               	movlw	(low (_usartReceiveBuffer| 0))& (0+255)
  2534  02D8  120A  118A  21DF  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2535  02DD                     i1l265:
  2536  02DD  0008               	return
  2537  02DE                     __end_of_GBS_USART_Receive:
  2538                           
  2539                           	psect	text15
  2540  01DF                     __ptext15:	
  2541 ;; *************** function i1_GBS_USART_Buffer_Write *****************
  2542 ;; Defined at:
  2543 ;;		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  buffer          1    wreg     PTR struct .
  2546 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2547 ;;  value           1    0[COMMON] unsigned char 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;  buffer          1    2[COMMON] PTR struct .
  2550 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         1       0       0       0       0
  2561 ;;      Locals:         1       0       0       0       0
  2562 ;;      Temps:          1       0       0       0       0
  2563 ;;      Totals:         3       0       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used:    1
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_GBS_USART_Receive
  2570 ;;		i1_GBS_USART_Write_Char
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574                           
  2575                           ;psect for function i1_GBS_USART_Buffer_Write
  2576  01DF                     i1_GBS_USART_Buffer_Write:
  2577                           
  2578                           ;incstack = 0
  2579                           ; Regs used in i1_GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  2580                           ;i1GBS_USART_Buffer_Write@buffer stored from wreg
  2581  01DF  00F2               	movwf	i1GBS_USART_Buffer_Write@buffer
  2582  01E0                     i1l1343:
  2583                           
  2584                           ;../gbs8/bsp/scr/gbs8_usart.c: 41: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 42: {;../gbs8/bsp/scr/gbs8_usart.c: 43:     
      +                          buffer->buffer[buffer->tail] = value;
  2585  01E0  0870               	movf	i1GBS_USART_Buffer_Write@value,w
  2586  01E1  00FF               	movwf	btemp+1
  2587  01E2  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2588  01E3  3E11               	addlw	17
  2589  01E4  0084               	movwf	4
  2590  01E5  1383               	bcf	3,7	;select IRP bank0
  2591  01E6  0800               	movf	0,w
  2592  01E7  0772               	addwf	i1GBS_USART_Buffer_Write@buffer,w
  2593  01E8  00F1               	movwf	??i1_GBS_USART_Buffer_Write
  2594  01E9  0871               	movf	??i1_GBS_USART_Buffer_Write,w
  2595  01EA  0084               	movwf	4
  2596  01EB  087F               	movf	btemp+1,w
  2597  01EC  0080               	movwf	0
  2598                           
  2599                           ;../gbs8/bsp/scr/gbs8_usart.c: 44:     buffer->tail = (buffer->tail + 1)%16;
  2600  01ED  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2601  01EE  3E11               	addlw	17
  2602  01EF  0084               	movwf	4
  2603  01F0  0800               	movf	0,w
  2604  01F1  3E01               	addlw	1
  2605  01F2  390F               	andlw	15
  2606  01F3  00FF               	movwf	btemp+1
  2607  01F4  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2608  01F5  3E11               	addlw	17
  2609  01F6  0084               	movwf	4
  2610  01F7  087F               	movf	btemp+1,w
  2611  01F8  0080               	movwf	0
  2612  01F9                     i1l1345:
  2613                           
  2614                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     if (buffer->size<16) buffer->size++;
  2615  01F9  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2616  01FA  3E12               	addlw	18
  2617  01FB  0084               	movwf	4
  2618  01FC  3010               	movlw	16
  2619  01FD  0200               	subwf	0,w
  2620  01FE  1803               	skipnc
  2621  01FF  2A01               	goto	u45_21
  2622  0200  2A02               	goto	u45_20
  2623  0201                     u45_21:
  2624  0201  2A09               	goto	i1l251
  2625  0202                     u45_20:
  2626  0202                     i1l1347:
  2627  0202  3001               	movlw	1
  2628  0203  00FF               	movwf	btemp+1
  2629  0204  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2630  0205  3E12               	addlw	18
  2631  0206  0084               	movwf	4
  2632  0207  087F               	movf	btemp+1,w
  2633  0208  0780               	addwf	0,f
  2634  0209                     i1l251:
  2635  0209  0008               	return
  2636  020A                     __end_ofi1_GBS_USART_Buffer_Write:
  2637  007E                     btemp	set	126	;btemp
  2638  007E                     wtemp0	set	126
  2639                           
  2640                           	psect	config
  2641                           
  2642                           ;Config register CONFIG1 @ 0x2007
  2643                           ;	Oscillator Selection bits
  2644                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2645                           ;	Watchdog Timer Enable bit
  2646                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2647                           ;	Power-up Timer Enable bit
  2648                           ;	PWRTE = OFF, PWRT disabled
  2649                           ;	RE3/MCLR pin function select bit
  2650                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2651                           ;	Code Protection bit
  2652                           ;	CP = OFF, Program memory code protection is disabled
  2653                           ;	Data Code Protection bit
  2654                           ;	CPD = OFF, Data memory code protection is disabled
  2655                           ;	Brown Out Reset Selection bits
  2656                           ;	BOREN = OFF, BOR disabled
  2657                           ;	Internal External Switchover bit
  2658                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2659                           ;	Fail-Safe Clock Monitor Enabled bit
  2660                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2661                           ;	Low Voltage Programming Enable bit
  2662                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2663                           ;	In-Circuit Debugger Mode bit
  2664                           ;	DEBUG = 0x1, unprogrammed default
  2665  2007                     	org	8199
  2666  2007  20F2               	dw	8434
  2667                           
  2668                           ;Config register CONFIG2 @ 0x2008
  2669                           ;	Brown-out Reset Selection bit
  2670                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2671                           ;	Flash Program Memory Self Write Enable bits
  2672                           ;	WRT = OFF, Write protection off
  2673  2008                     	org	8200
  2674  2008  3EFF               	dw	16127

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     11      65
    BANK1            80      0      80
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GBS_USART_Write_Char@c	PTR unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[5]), 

    GBS_USART_Buffer_Read@buffer	PTR struct . size(1) Largest target is 19
		 -> usartSendBuffer(BANK0[19]), 

    GBS_USART_Buffer_Write@buffer	PTR struct . size(1) Largest target is 19
		 -> usartReceiveBuffer(BANK0[19]), usartSendBuffer(BANK0[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USART_RX_ISR
    i1_GBS_USART_Send->i1_GBS_USART_Buffer_Read
    _USART_RX_ISR->i1_GBS_USART_Write_Char
    i1_GBS_USART_Write_Char->i1_GBS_USART_Buffer_Write
    _GBS_USART_Receive->i1_GBS_USART_Buffer_Write

Critical Paths under _main in BANK0

    _main->_GBS_USART_Write_Char
    _GBS_USART_Write_Char->_GBS_USART_Buffer_Write
    _GBS_USART_Send->_GBS_USART_Buffer_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1215
                                              8 BANK0      3     3      0
                 _GBS_Interrupt_Init
                     _GBS_USART_Init
                     _GBS_USART_Send
               _GBS_USART_Write_Char
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Write_Char                                 5     4      1     951
                                              3 BANK0      5     4      1
             _GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Buffer_Write                               3     2      1     564
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Send                                       0     0      0     188
              _GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Buffer_Read                                3     3      0     188
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Init                                       2     0      2      76
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _GBS_Interrupt_Init                                   0     0      0       0
               _GBS_Interrupt_Enable
 ---------------------------------------------------------------------------------
 (2) _GBS_Interrupt_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     835
                                             10 COMMON     4     4      0
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_TX_ISR                                         0     0      0     155
                   i1_GBS_USART_Send
 ---------------------------------------------------------------------------------
 (5) i1_GBS_USART_Send                                     0     0      0     155
            i1_GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Read                              3     3      0     155
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         2     2      0     680
                                              8 COMMON     2     2      0
                  _GBS_USART_Receive
             i1_GBS_USART_Write_Char
 ---------------------------------------------------------------------------------
 (5) i1_GBS_USART_Write_Char                               5     4      1     422
                                              3 COMMON     5     4      1
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (5) _GBS_USART_Receive                                    0     0      0     258
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Write                             3     2      1     258
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GBS_Interrupt_Init
     _GBS_Interrupt_Enable
   _GBS_USART_Init
   _GBS_USART_Send
     _GBS_USART_Buffer_Read
   _GBS_USART_Write_Char
     _GBS_USART_Buffer_Write

 _ISR (ROOT)
   _USART_RX_ISR
     _GBS_USART_Receive
       i1_GBS_USART_Buffer_Write
     i1_GBS_USART_Write_Char
       i1_GBS_USART_Buffer_Write
   _USART_TX_ISR
     i1_GBS_USART_Send
       i1_GBS_USART_Buffer_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 03 16:22:23 2020

                                pc 0002                                 l81 02EE  
                               l78 02EB            ?i1_GBS_USART_Write_Char 0073  
                               fsr 0004             ??_GBS_USART_Write_Char 005A  
                              l303 00F8                                l251 01B3  
                              l262 028C                                l247 02A6  
                              l255 01DE                                l259 0286  
        __end_of_GBS_USART_Receive 02DE                                _PR2 0092  
                              u530 00B3                                u531 00B2  
                              u540 00E0                                _ISR 0233  
                              u541 00DF                                u550 027D  
                              u470 01AC                                u551 027C  
                              u471 01AB                                u480 01C0  
                              u560 028C                                u481 01BF  
                              u561 028B                                u545 00DC  
                              _PSA 040B                                fsr0 0004  
                              indf 0000                               ?_ISR 0070  
                             l1401 029D                               l1411 02A5  
                             l1403 029F                               l1405 02A0  
                             l1421 00CE                               l1413 00AD  
                             l1407 02A1                               l1423 00E0  
                             l1415 00B3                               l1409 02A2  
                             l1425 0273                               l1361 018A  
                             l1417 00B5                               l1371 01D8  
                             l1427 0276                               l1363 01A3  
                             l1419 00C8                               l1373 01DD  
                             l1429 027D                               l1365 01AC  
                             l1359 02EC                               l1367 01B7  
                             l1369 01C0                               l1561 012D  
                             l1553 00F9                               l1563 0139  
                             l1555 00FE                               l1397 02E6  
                             l1557 0109                               l1399 028D  
                             l1559 011B                               STR_1 026E  
                             STR_2 0265                               STR_3 025C  
                             _T0CS 040D                               u1857 0114  
                             u1867 0126                               _TMR0 0001  
                             _TMR1 000E                               _TMR2 0011  
                             _main 00F9                               btemp 007E  
                             start 0012     __end_ofi1_GBS_USART_Write_Char 0187  
                            ??_ISR 007A                              ?_main 0070  
                            _ANSEL 0188                              i1l106 024B  
                            i1l303 0186                              i1l251 0209  
                            i1l262 02C0                              i1l255 0232  
                            i1l265 02DD                              i1l290 0070  
                            i1l282 0067                              i1l274 0042  
                            i1l291 0072                              i1l259 02BA  
                            i1l292 0074                              i1l293 0076  
                            i1l269 02D0                              i1l294 0078  
                            i1l295 007A                              i1l287 006C  
                            i1l288 009E                              i1l296 00A9  
                            i1l289 006E                              _RCREG 001A  
                            u50_20 02C0                              u50_21 02BF  
                            _SPBRG 0099                              u51_20 0149  
                            u51_21 0148                              u52_20 0172  
                            u60_20 0048                              u52_21 0171  
                            u60_21 0047                              u52_25 016E  
                            u45_20 0202                              u61_20 0055  
                            u45_21 0201                              u61_21 0054  
                            u62_20 0059                              u46_20 0214  
                            u62_21 0058                              u46_21 0213  
                            u63_20 0061                              u63_21 0060  
                            u64_20 0065                              u64_21 0064  
                            u65_20 006B                              u49_20 02B1  
                            u57_20 02C8                              u81_20 0237  
                            u65_21 006A                              u49_21 02B0  
                            u57_21 02C7                              u81_21 0236  
                            u58_20 0030                              u82_20 0243  
                            u58_21 002F                              u82_21 0242  
                            u59_20 0036                              u59_21 0035  
                            _TXREG 0019                              _uFlag 0022  
                            _errno 0020                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 0015                       __end_of_main 0142  
         __end_ofi1_GBS_USART_Send 02C1                             ??_main 005E  
          i1_GBS_USART_Buffer_Read 020A         __size_of_GBS_USART_Receive 000D  
 __end_ofi1_GBS_USART_Buffer_Write 020A        GBS_USART_Buffer_Read@buffer 0058  
                           _CCPR1L 0015                             _ANSELH 0189  
      GBS_USART_Buffer_Read@result 0057                             i1l1343 01E0  
                           i1l1351 0214                             i1l1431 02C1  
                           i1l1345 01F9                             i1l1441 0036  
                           i1l1353 022C                             i1l1433 02C8  
                           i1l1347 0202                             i1l2075 0084  
                           i1l1451 0059                             i1l1443 0038  
                           i1l1355 0231                             i1l1435 02CD  
                           i1l1453 005B                             i1l1445 0049  
                           i1l1437 002A                             i1l1349 020B  
                           i1l1381 02AA                             i1l1391 015C  
                           i1l1463 007C                             i1l1455 0061  
                           i1l1439 0030                             i1l1447 004F  
                           i1l1383 02B1                             i1l1377 02D1  
                           i1l1393 0160                             i1l1385 0143  
                           i1l1465 009F                             i1l1457 0065  
                           i1l1449 0055                             i1l1395 0172  
                           i1l1387 0149                             i1l1379 02A7  
                           i1l1571 023F                             i1l1389 014B  
                           i1l1573 0243                             i1l1565 0233  
                           i1l1575 0248                             i1l1567 0237  
                           i1l1569 023C                             _TMR2ON 0092  
                           saved_w 007E       __end_of_GBS_Interrupt_Enable 02EF  
          __end_of__initialization 0026                     __pcstackCOMMON 0070  
   i1GBS_USART_Buffer_Write@buffer 0072          ??i1_GBS_USART_Buffer_Read 0070  
                   _OPTION_REGbits 0081              _GBS_USART_Buffer_Read 01B4  
               _usartReceiveBuffer 0037            i1GBS_USART_Write_Char@c 0076  
          i1GBS_USART_Write_Char@i 0077         __end_of_GBS_Interrupt_Init 02EC  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
         i1_GBS_USART_Buffer_Write 01DF                         __pmaintext 00F9  
                       __pintentry 0004                            _T2CKPS1 0091  
    __size_of_GBS_USART_Write_Char 004F           ??_GBS_USART_Buffer_Write 0057  
                       __stringtab 0256               _GBS_Interrupt_Enable 02EC  
                          __ptext1 00AA                            __ptext2 0187  
                          __ptext3 0273                            __ptext4 01B4  
                          __ptext5 028D                            __ptext6 02E6  
                          __ptext7 02EC                            __ptext8 0233  
                          __ptext9 02C1                  ?i1_GBS_USART_Send 0070  
          __size_of_GBS_USART_Init 001A             ?_GBS_USART_Buffer_Read 0070  
                     __size_of_ISR 0023            __size_of_GBS_USART_Send 001A  
                        _T1CONbits 0010                          _T2CONbits 0012  
               ??i1_GBS_USART_Send 0073                            clrloop0 02DF  
             end_of_initialization 0026              GBS_USART_Write_Char@c 005C  
            GBS_USART_Write_Char@i 005D        GBS_USART_Buffer_Write@value 0056  
                        _RCSTAbits 0018              ?_GBS_Interrupt_Enable 0070  
     GBS_USART_Buffer_Write@buffer 0058    __size_of_GBS_USART_Buffer_Write 002D  
                        _TRISAbits 0085                          _TRISBbits 0086  
                        _TRISCbits 0087                          _TRISDbits 0088  
                        _TRISEbits 0089                      ?_USART_RX_ISR 0070  
                    ?_USART_TX_ISR 0070                        _CCP1CONbits 0017  
                        _TXSTAbits 0098           ??i1_GBS_USART_Write_Char 0074  
                      _BAUDCTLbits 0187         ??i1_GBS_USART_Buffer_Write 0071  
    i1GBS_USART_Buffer_Read@buffer 0072                start_initialization 0015  
                      __end_of_ISR 0256      i1GBS_USART_Buffer_Read@result 0071  
                   ??_USART_RX_ISR 0078                     ??_USART_TX_ISR 0073  
         GBS_USART_Write_Char@size 0059             _GBS_USART_Buffer_Write 0187  
           ??_GBS_Interrupt_Enable 0056                 _GBS_Interrupt_Init 02E6  
              ?_GBS_Interrupt_Init 0070                     _GBS_USART_Init 028D  
                   _GBS_USART_Send 0273         i1GBS_USART_Write_Char@size 0073  
                        ___latbits 0002                      __pcstackBANK0 0056  
             ??_GBS_Interrupt_Init 0056       __end_of_GBS_USART_Write_Char 00F9  
  __size_ofi1_GBS_USART_Write_Char 0045           ?i1_GBS_USART_Buffer_Read 0070  
                  _usartSendBuffer 0024             __end_of_GBS_USART_Init 02A7  
          ??_GBS_USART_Buffer_Read 0056             __end_of_GBS_USART_Send 028D  
                        __pstrings 0256             GBS_USART_Init@baudRate 0056  
        __size_ofi1_GBS_USART_Send 001A                  interrupt_function 0004  
                         _IOCBbits 0096                          clear_ram0 02DE  
                         _PIE1bits 008C                           _PIR1bits 000C  
             __end_of_USART_RX_ISR 00AA               __end_of_USART_TX_ISR 02D1  
                  ?_GBS_USART_Init 0056                    ?_GBS_USART_Send 0070  
                      __stringbase 025B             i1_GBS_USART_Write_Char 0142  
  __end_ofi1_GBS_USART_Buffer_Read 0233                 __end_of__stringtab 025C  
             _GBS_USART_Write_Char 00AA                           _sBufferA 00A0  
                         __ptext10 02A7                           __ptext11 020A  
                         __ptext12 002A                           __ptext13 0142  
                         __ptext14 02D1                           __ptext15 01DF  
    i1GBS_USART_Buffer_Write@value 0070                           _ctrlBits 0023  
          ?_GBS_USART_Buffer_Write 0056                      __size_of_main 0049  
                         _stepperA 004A              ?_GBS_USART_Write_Char 0059  
                       _INTCONbits 000B     __end_of_GBS_USART_Buffer_Write 01B4  
                         intlevel1 0000                   i1_GBS_USART_Send 02A7  
__size_ofi1_GBS_USART_Buffer_Write 002B          ?i1_GBS_USART_Buffer_Write 0070  
                        stringcode 0256              __size_of_USART_RX_ISR 0080  
            __size_of_USART_TX_ISR 0010      __size_of_GBS_Interrupt_Enable 0003  
   __size_of_GBS_USART_Buffer_Read 002B      __end_of_GBS_USART_Buffer_Read 01DF  
 __size_ofi1_GBS_USART_Buffer_Read 0029                  _GBS_USART_Receive 02D1  
                         stringdir 0256                           stringtab 0256  
               ?_GBS_USART_Receive 0070                       _USART_RX_ISR 002A  
                     _USART_TX_ISR 02C1        __size_of_GBS_Interrupt_Init 0006  
              ??_GBS_USART_Receive 0073                   ??_GBS_USART_Init 0058  
                 ??_GBS_USART_Send 0059  
