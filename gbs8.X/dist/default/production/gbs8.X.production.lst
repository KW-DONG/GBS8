

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 03 08:54:30 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     6                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	intentry,global,class=CODE,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=1
    37                           	psect	text23,local,class=CODE,merge=1,delta=2,group=1
    38                           	psect	text24,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text26,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 12/02/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F887 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  000E                     	;# 
    94  000F                     	;# 
    95  0010                     	;# 
    96  0011                     	;# 
    97  0012                     	;# 
    98  0013                     	;# 
    99  0014                     	;# 
   100  0015                     	;# 
   101  0015                     	;# 
   102  0016                     	;# 
   103  0017                     	;# 
   104  0018                     	;# 
   105  0019                     	;# 
   106  001A                     	;# 
   107  001B                     	;# 
   108  001B                     	;# 
   109  001C                     	;# 
   110  001D                     	;# 
   111  001E                     	;# 
   112  001F                     	;# 
   113  0081                     	;# 
   114  0085                     	;# 
   115  0086                     	;# 
   116  0087                     	;# 
   117  0088                     	;# 
   118  0089                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  008E                     	;# 
   122  008F                     	;# 
   123  0090                     	;# 
   124  0091                     	;# 
   125  0092                     	;# 
   126  0093                     	;# 
   127  0093                     	;# 
   128  0093                     	;# 
   129  0094                     	;# 
   130  0095                     	;# 
   131  0096                     	;# 
   132  0097                     	;# 
   133  0098                     	;# 
   134  0099                     	;# 
   135  009A                     	;# 
   136  009B                     	;# 
   137  009C                     	;# 
   138  009D                     	;# 
   139  009E                     	;# 
   140  009F                     	;# 
   141  0105                     	;# 
   142  0107                     	;# 
   143  0108                     	;# 
   144  0109                     	;# 
   145  010C                     	;# 
   146  010C                     	;# 
   147  010D                     	;# 
   148  010E                     	;# 
   149  010F                     	;# 
   150  0185                     	;# 
   151  0187                     	;# 
   152  0188                     	;# 
   153  0189                     	;# 
   154  018C                     	;# 
   155  018D                     	;# 
   156  0000                     	;# 
   157  0001                     	;# 
   158  0002                     	;# 
   159  0003                     	;# 
   160  0004                     	;# 
   161  0005                     	;# 
   162  0006                     	;# 
   163  0007                     	;# 
   164  0008                     	;# 
   165  0009                     	;# 
   166  000A                     	;# 
   167  000B                     	;# 
   168  000C                     	;# 
   169  000D                     	;# 
   170  000E                     	;# 
   171  000E                     	;# 
   172  000F                     	;# 
   173  0010                     	;# 
   174  0011                     	;# 
   175  0012                     	;# 
   176  0013                     	;# 
   177  0014                     	;# 
   178  0015                     	;# 
   179  0015                     	;# 
   180  0016                     	;# 
   181  0017                     	;# 
   182  0018                     	;# 
   183  0019                     	;# 
   184  001A                     	;# 
   185  001B                     	;# 
   186  001B                     	;# 
   187  001C                     	;# 
   188  001D                     	;# 
   189  001E                     	;# 
   190  001F                     	;# 
   191  0081                     	;# 
   192  0085                     	;# 
   193  0086                     	;# 
   194  0087                     	;# 
   195  0088                     	;# 
   196  0089                     	;# 
   197  008C                     	;# 
   198  008D                     	;# 
   199  008E                     	;# 
   200  008F                     	;# 
   201  0090                     	;# 
   202  0091                     	;# 
   203  0092                     	;# 
   204  0093                     	;# 
   205  0093                     	;# 
   206  0093                     	;# 
   207  0094                     	;# 
   208  0095                     	;# 
   209  0096                     	;# 
   210  0097                     	;# 
   211  0098                     	;# 
   212  0099                     	;# 
   213  009A                     	;# 
   214  009B                     	;# 
   215  009C                     	;# 
   216  009D                     	;# 
   217  009E                     	;# 
   218  009F                     	;# 
   219  0105                     	;# 
   220  0107                     	;# 
   221  0108                     	;# 
   222  0109                     	;# 
   223  010C                     	;# 
   224  010C                     	;# 
   225  010D                     	;# 
   226  010E                     	;# 
   227  010F                     	;# 
   228  0185                     	;# 
   229  0187                     	;# 
   230  0188                     	;# 
   231  0189                     	;# 
   232  018C                     	;# 
   233  018D                     	;# 
   234  0000                     	;# 
   235  0001                     	;# 
   236  0002                     	;# 
   237  0003                     	;# 
   238  0004                     	;# 
   239  0005                     	;# 
   240  0006                     	;# 
   241  0007                     	;# 
   242  0008                     	;# 
   243  0009                     	;# 
   244  000A                     	;# 
   245  000B                     	;# 
   246  000C                     	;# 
   247  000D                     	;# 
   248  000E                     	;# 
   249  000E                     	;# 
   250  000F                     	;# 
   251  0010                     	;# 
   252  0011                     	;# 
   253  0012                     	;# 
   254  0013                     	;# 
   255  0014                     	;# 
   256  0015                     	;# 
   257  0015                     	;# 
   258  0016                     	;# 
   259  0017                     	;# 
   260  0018                     	;# 
   261  0019                     	;# 
   262  001A                     	;# 
   263  001B                     	;# 
   264  001B                     	;# 
   265  001C                     	;# 
   266  001D                     	;# 
   267  001E                     	;# 
   268  001F                     	;# 
   269  0081                     	;# 
   270  0085                     	;# 
   271  0086                     	;# 
   272  0087                     	;# 
   273  0088                     	;# 
   274  0089                     	;# 
   275  008C                     	;# 
   276  008D                     	;# 
   277  008E                     	;# 
   278  008F                     	;# 
   279  0090                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0093                     	;# 
   284  0093                     	;# 
   285  0094                     	;# 
   286  0095                     	;# 
   287  0096                     	;# 
   288  0097                     	;# 
   289  0098                     	;# 
   290  0099                     	;# 
   291  009A                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  0105                     	;# 
   298  0107                     	;# 
   299  0108                     	;# 
   300  0109                     	;# 
   301  010C                     	;# 
   302  010C                     	;# 
   303  010D                     	;# 
   304  010E                     	;# 
   305  010F                     	;# 
   306  0185                     	;# 
   307  0187                     	;# 
   308  0188                     	;# 
   309  0189                     	;# 
   310  018C                     	;# 
   311  018D                     	;# 
   312  0000                     	;# 
   313  0001                     	;# 
   314  0002                     	;# 
   315  0003                     	;# 
   316  0004                     	;# 
   317  0005                     	;# 
   318  0006                     	;# 
   319  0007                     	;# 
   320  0008                     	;# 
   321  0009                     	;# 
   322  000A                     	;# 
   323  000B                     	;# 
   324  000C                     	;# 
   325  000D                     	;# 
   326  000E                     	;# 
   327  000E                     	;# 
   328  000F                     	;# 
   329  0010                     	;# 
   330  0011                     	;# 
   331  0012                     	;# 
   332  0013                     	;# 
   333  0014                     	;# 
   334  0015                     	;# 
   335  0015                     	;# 
   336  0016                     	;# 
   337  0017                     	;# 
   338  0018                     	;# 
   339  0019                     	;# 
   340  001A                     	;# 
   341  001B                     	;# 
   342  001B                     	;# 
   343  001C                     	;# 
   344  001D                     	;# 
   345  001E                     	;# 
   346  001F                     	;# 
   347  0081                     	;# 
   348  0085                     	;# 
   349  0086                     	;# 
   350  0087                     	;# 
   351  0088                     	;# 
   352  0089                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  008F                     	;# 
   357  0090                     	;# 
   358  0091                     	;# 
   359  0092                     	;# 
   360  0093                     	;# 
   361  0093                     	;# 
   362  0093                     	;# 
   363  0094                     	;# 
   364  0095                     	;# 
   365  0096                     	;# 
   366  0097                     	;# 
   367  0098                     	;# 
   368  0099                     	;# 
   369  009A                     	;# 
   370  009B                     	;# 
   371  009C                     	;# 
   372  009D                     	;# 
   373  009E                     	;# 
   374  009F                     	;# 
   375  0105                     	;# 
   376  0107                     	;# 
   377  0108                     	;# 
   378  0109                     	;# 
   379  010C                     	;# 
   380  010C                     	;# 
   381  010D                     	;# 
   382  010E                     	;# 
   383  010F                     	;# 
   384  0185                     	;# 
   385  0187                     	;# 
   386  0188                     	;# 
   387  0189                     	;# 
   388  018C                     	;# 
   389  018D                     	;# 
   390  0000                     	;# 
   391  0001                     	;# 
   392  0002                     	;# 
   393  0003                     	;# 
   394  0004                     	;# 
   395  0005                     	;# 
   396  0006                     	;# 
   397  0007                     	;# 
   398  0008                     	;# 
   399  0009                     	;# 
   400  000A                     	;# 
   401  000B                     	;# 
   402  000C                     	;# 
   403  000D                     	;# 
   404  000E                     	;# 
   405  000E                     	;# 
   406  000F                     	;# 
   407  0010                     	;# 
   408  0011                     	;# 
   409  0012                     	;# 
   410  0013                     	;# 
   411  0014                     	;# 
   412  0015                     	;# 
   413  0015                     	;# 
   414  0016                     	;# 
   415  0017                     	;# 
   416  0018                     	;# 
   417  0019                     	;# 
   418  001A                     	;# 
   419  001B                     	;# 
   420  001B                     	;# 
   421  001C                     	;# 
   422  001D                     	;# 
   423  001E                     	;# 
   424  001F                     	;# 
   425  0081                     	;# 
   426  0085                     	;# 
   427  0086                     	;# 
   428  0087                     	;# 
   429  0088                     	;# 
   430  0089                     	;# 
   431  008C                     	;# 
   432  008D                     	;# 
   433  008E                     	;# 
   434  008F                     	;# 
   435  0090                     	;# 
   436  0091                     	;# 
   437  0092                     	;# 
   438  0093                     	;# 
   439  0093                     	;# 
   440  0093                     	;# 
   441  0094                     	;# 
   442  0095                     	;# 
   443  0096                     	;# 
   444  0097                     	;# 
   445  0098                     	;# 
   446  0099                     	;# 
   447  009A                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  009F                     	;# 
   453  0105                     	;# 
   454  0107                     	;# 
   455  0108                     	;# 
   456  0109                     	;# 
   457  010C                     	;# 
   458  010C                     	;# 
   459  010D                     	;# 
   460  010E                     	;# 
   461  010F                     	;# 
   462  0185                     	;# 
   463  0187                     	;# 
   464  0188                     	;# 
   465  0189                     	;# 
   466  018C                     	;# 
   467  018D                     	;# 
   468  0000                     	;# 
   469  0001                     	;# 
   470  0002                     	;# 
   471  0003                     	;# 
   472  0004                     	;# 
   473  0005                     	;# 
   474  0006                     	;# 
   475  0007                     	;# 
   476  0008                     	;# 
   477  0009                     	;# 
   478  000A                     	;# 
   479  000B                     	;# 
   480  000C                     	;# 
   481  000D                     	;# 
   482  000E                     	;# 
   483  000E                     	;# 
   484  000F                     	;# 
   485  0010                     	;# 
   486  0011                     	;# 
   487  0012                     	;# 
   488  0013                     	;# 
   489  0014                     	;# 
   490  0015                     	;# 
   491  0015                     	;# 
   492  0016                     	;# 
   493  0017                     	;# 
   494  0018                     	;# 
   495  0019                     	;# 
   496  001A                     	;# 
   497  001B                     	;# 
   498  001B                     	;# 
   499  001C                     	;# 
   500  001D                     	;# 
   501  001E                     	;# 
   502  001F                     	;# 
   503  0081                     	;# 
   504  0085                     	;# 
   505  0086                     	;# 
   506  0087                     	;# 
   507  0088                     	;# 
   508  0089                     	;# 
   509  008C                     	;# 
   510  008D                     	;# 
   511  008E                     	;# 
   512  008F                     	;# 
   513  0090                     	;# 
   514  0091                     	;# 
   515  0092                     	;# 
   516  0093                     	;# 
   517  0093                     	;# 
   518  0093                     	;# 
   519  0094                     	;# 
   520  0095                     	;# 
   521  0096                     	;# 
   522  0097                     	;# 
   523  0098                     	;# 
   524  0099                     	;# 
   525  009A                     	;# 
   526  009B                     	;# 
   527  009C                     	;# 
   528  009D                     	;# 
   529  009E                     	;# 
   530  009F                     	;# 
   531  0105                     	;# 
   532  0107                     	;# 
   533  0108                     	;# 
   534  0109                     	;# 
   535  010C                     	;# 
   536  010C                     	;# 
   537  010D                     	;# 
   538  010E                     	;# 
   539  010F                     	;# 
   540  0185                     	;# 
   541  0187                     	;# 
   542  0188                     	;# 
   543  0189                     	;# 
   544  018C                     	;# 
   545  018D                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  000E                     	;# 
   561  000E                     	;# 
   562  000F                     	;# 
   563  0010                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  0081                     	;# 
   582  0085                     	;# 
   583  0086                     	;# 
   584  0087                     	;# 
   585  0088                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  008F                     	;# 
   591  0090                     	;# 
   592  0091                     	;# 
   593  0092                     	;# 
   594  0093                     	;# 
   595  0093                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009C                     	;# 
   606  009D                     	;# 
   607  009E                     	;# 
   608  009F                     	;# 
   609  0105                     	;# 
   610  0107                     	;# 
   611  0108                     	;# 
   612  0109                     	;# 
   613  010C                     	;# 
   614  010C                     	;# 
   615  010D                     	;# 
   616  010E                     	;# 
   617  010F                     	;# 
   618  0185                     	;# 
   619  0187                     	;# 
   620  0188                     	;# 
   621  0189                     	;# 
   622  018C                     	;# 
   623  018D                     	;# 
   624  0000                     	;# 
   625  0001                     	;# 
   626  0002                     	;# 
   627  0003                     	;# 
   628  0004                     	;# 
   629  0005                     	;# 
   630  0006                     	;# 
   631  0007                     	;# 
   632  0008                     	;# 
   633  0009                     	;# 
   634  000A                     	;# 
   635  000B                     	;# 
   636  000C                     	;# 
   637  000D                     	;# 
   638  000E                     	;# 
   639  000E                     	;# 
   640  000F                     	;# 
   641  0010                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0014                     	;# 
   646  0015                     	;# 
   647  0015                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  0019                     	;# 
   652  001A                     	;# 
   653  001B                     	;# 
   654  001B                     	;# 
   655  001C                     	;# 
   656  001D                     	;# 
   657  001E                     	;# 
   658  001F                     	;# 
   659  0081                     	;# 
   660  0085                     	;# 
   661  0086                     	;# 
   662  0087                     	;# 
   663  0088                     	;# 
   664  0089                     	;# 
   665  008C                     	;# 
   666  008D                     	;# 
   667  008E                     	;# 
   668  008F                     	;# 
   669  0090                     	;# 
   670  0091                     	;# 
   671  0092                     	;# 
   672  0093                     	;# 
   673  0093                     	;# 
   674  0093                     	;# 
   675  0094                     	;# 
   676  0095                     	;# 
   677  0096                     	;# 
   678  0097                     	;# 
   679  0098                     	;# 
   680  0099                     	;# 
   681  009A                     	;# 
   682  009B                     	;# 
   683  009C                     	;# 
   684  009D                     	;# 
   685  009E                     	;# 
   686  009F                     	;# 
   687  0105                     	;# 
   688  0107                     	;# 
   689  0108                     	;# 
   690  0109                     	;# 
   691  010C                     	;# 
   692  010C                     	;# 
   693  010D                     	;# 
   694  010E                     	;# 
   695  010F                     	;# 
   696  0185                     	;# 
   697  0187                     	;# 
   698  0188                     	;# 
   699  0189                     	;# 
   700  018C                     	;# 
   701  018D                     	;# 
   702  000E                     _TMR1	set	14
   703  001A                     _RCREG	set	26
   704  0019                     _TXREG	set	25
   705  0018                     _RCSTAbits	set	24
   706  0015                     _CCPR1L	set	21
   707  0017                     _CCP1CONbits	set	23
   708  0011                     _TMR2	set	17
   709  0012                     _T2CONbits	set	18
   710  0010                     _T1CONbits	set	16
   711  0001                     _TMR0	set	1
   712  000C                     _PIR1bits	set	12
   713  000B                     _INTCONbits	set	11
   714  0091                     _T2CKPS1	set	145
   715  0092                     _TMR2ON	set	146
   716  0099                     _SPBRG	set	153
   717  0098                     _TXSTAbits	set	152
   718  0092                     _PR2	set	146
   719  0089                     _TRISEbits	set	137
   720  008C                     _PIE1bits	set	140
   721  0096                     _IOCBbits	set	150
   722  0081                     _OPTION_REGbits	set	129
   723  0087                     _TRISCbits	set	135
   724  0088                     _TRISDbits	set	136
   725  0086                     _TRISBbits	set	134
   726  0085                     _TRISAbits	set	133
   727  040D                     _T0CS	set	1037
   728  040B                     _PSA	set	1035
   729  0187                     _BAUDCTLbits	set	391
   730  0189                     _ANSELH	set	393
   731  0188                     _ANSEL	set	392
   732                           
   733                           	psect	cinit
   734  0019                     start_initialization:	
   735                           ; #config settings
   736                           
   737  0019                     __initialization:
   738                           
   739                           ; Clear objects allocated to BANK1
   740  0019  1683               	bsf	3,5	;RP0=1, select bank1
   741  001A  1303               	bcf	3,6	;RP1=0, select bank1
   742  001B  01E7               	clrf	__pbssBANK1& (0+127)
   743  001C  01E8               	clrf	(__pbssBANK1+1)& (0+127)
   744                           
   745                           ; Clear objects allocated to BANK3
   746  001D  1783               	bsf	3,7	;select IRP bank2
   747  001E  3090               	movlw	low __pbssBANK3
   748  001F  0084               	movwf	4
   749  0020  30C2               	movlw	low (__pbssBANK3+50)
   750  0021  120A  158A  2037  120A  118A  	fcall	clear_ram0
   751                           
   752                           ; Clear objects allocated to BANK2
   753  0026  3010               	movlw	low __pbssBANK2
   754  0027  0084               	movwf	4
   755  0028  3060               	movlw	low (__pbssBANK2+80)
   756  0029  120A  158A  2037  120A  118A  	fcall	clear_ram0
   757  002E                     end_of_initialization:	
   758                           ;End of C runtime variable initialization code
   759                           
   760  002E                     __end_of__initialization:
   761  002E  0183               	clrf	3
   762  002F  120A  158A  28FC   	ljmp	_main	;jump to C main() function
   763                           
   764                           	psect	bssBANK1
   765  00E7                     __pbssBANK1:
   766  00E7                     _errno:
   767  00E7                     	ds	2
   768                           
   769                           	psect	bssBANK3
   770  0190                     __pbssBANK3:
   771  0190                     _usartSendBuffer:
   772  0190                     	ds	19
   773  01A3                     _usartReceiveBuffer:
   774  01A3                     	ds	19
   775  01B6                     _stepperA:
   776  01B6                     	ds	12
   777                           
   778                           	psect	bssBANK2
   779  0110                     __pbssBANK2:
   780  0110                     _sBufferA:
   781  0110                     	ds	80
   782                           
   783                           	psect	clrtext
   784  0837                     clear_ram0:	
   785                           ;	Called with FSR containing the base address, and
   786                           ;	W with the last address+1
   787                           
   788  0837  0064               	clrwdt	;clear the watchdog before getting into this loop
   789  0838                     clrloop0:
   790  0838  0180               	clrf	0	;clear RAM location pointed to by FSR
   791  0839  0A84               	incf	4,f	;increment pointer
   792  083A  0604               	xorwf	4,w	;XOR with final address
   793  083B  1903               	btfsc	3,2	;have we reached the end yet?
   794  083C  3400               	retlw	0	;all done for this memory range, return
   795  083D  0604               	xorwf	4,w	;XOR again to restore value
   796  083E  2838               	goto	clrloop0	;do the next byte
   797                           
   798                           	psect	cstackBANK3
   799  01C2                     __pcstackBANK3:
   800  01C2                     ?_GBS_USART_Buffer_Write:
   801  01C2                     ??_GBS_T2I_Config:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  01C2                     ??_GBS_Interrupt_Enable:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  01C2                     ??_GBS_USART_Buffer_Read:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  01C2                     ?___aldiv:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  01C2                     GBS_T2I_Config@mode:	
   814                           ; 4 bytes @ 0x0
   815                           
   816  01C2                     GBS_USART_Buffer_Write@value:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  01C2                     ___aldiv@divisor:	
   820                           ; 1 bytes @ 0x0
   821                           
   822                           
   823                           ; 4 bytes @ 0x0
   824  01C2                     	ds	1
   825  01C3                     ??_GBS_Interrupt_Init:
   826  01C3                     ??_GBS_USART_Buffer_Write:	
   827                           ; 1 bytes @ 0x1
   828                           
   829  01C3                     GBS_USART_Buffer_Read@result:	
   830                           ; 1 bytes @ 0x1
   831                           
   832                           
   833                           ; 1 bytes @ 0x1
   834  01C3                     	ds	1
   835  01C4                     GBS_USART_Buffer_Write@buffer:
   836  01C4                     GBS_USART_Buffer_Read@buffer:	
   837                           ; 1 bytes @ 0x2
   838                           
   839                           
   840                           ; 1 bytes @ 0x2
   841  01C4                     	ds	1
   842  01C5                     ??_GBS_USART_Send:
   843  01C5                     GBS_USART_Send@buffer:	
   844                           ; 1 bytes @ 0x3
   845                           
   846                           
   847                           ; 1 bytes @ 0x3
   848  01C5                     	ds	1
   849  01C6                     ___aldiv@dividend:
   850                           
   851                           ; 4 bytes @ 0x4
   852  01C6                     	ds	4
   853  01CA                     ??___aldiv:
   854                           
   855                           ; 1 bytes @ 0x8
   856  01CA                     	ds	1
   857  01CB                     ___aldiv@counter:
   858                           
   859                           ; 1 bytes @ 0x9
   860  01CB                     	ds	1
   861  01CC                     ___aldiv@sign:
   862                           
   863                           ; 1 bytes @ 0xA
   864  01CC                     	ds	1
   865  01CD                     ___aldiv@quotient:
   866                           
   867                           ; 4 bytes @ 0xB
   868  01CD                     	ds	4
   869  01D1                     ?_GBS_USART_Init:
   870  01D1                     GBS_USART_Init@baudRate:	
   871                           ; 1 bytes @ 0xF
   872                           
   873                           
   874                           ; 2 bytes @ 0xF
   875  01D1                     	ds	2
   876  01D3                     ??_GBS_USART_Init:
   877  01D3                     _GBS_USART_Init$1647:	
   878                           ; 1 bytes @ 0x11
   879                           
   880                           
   881                           ; 4 bytes @ 0x11
   882  01D3                     	ds	4
   883  01D7                     ??_main:
   884                           
   885                           	psect	cstackBANK1
   886  00A0                     __pcstackBANK1:	
   887                           ; 1 bytes @ 0x15
   888                           
   889  00A0                     ??___fldiv:
   890                           
   891                           ; 1 bytes @ 0x0
   892  00A0                     	ds	5
   893  00A5                     ___fldiv@rem:
   894                           
   895                           ; 4 bytes @ 0x5
   896  00A5                     	ds	4
   897  00A9                     ___fldiv@sign:
   898                           
   899                           ; 1 bytes @ 0x9
   900  00A9                     	ds	1
   901  00AA                     ___fldiv@new_exp:
   902                           
   903                           ; 2 bytes @ 0xA
   904  00AA                     	ds	2
   905  00AC                     ___fldiv@grs:
   906                           
   907                           ; 4 bytes @ 0xC
   908  00AC                     	ds	4
   909  00B0                     ___fldiv@bexp:
   910                           
   911                           ; 1 bytes @ 0x10
   912  00B0                     	ds	1
   913  00B1                     ___fldiv@aexp:
   914                           
   915                           ; 1 bytes @ 0x11
   916  00B1                     	ds	1
   917  00B2                     ?___fltol:
   918  00B2                     ___fltol@f1:	
   919                           ; 4 bytes @ 0x12
   920                           
   921                           
   922                           ; 4 bytes @ 0x12
   923  00B2                     	ds	4
   924  00B6                     ?_GBS_Stepper_Exe:
   925  00B6                     GBS_Stepper_Exe@sBufferX:	
   926                           ; 1 bytes @ 0x16
   927                           
   928                           
   929                           ; 1 bytes @ 0x16
   930  00B6                     	ds	1
   931  00B7                     ??_GBS_Stepper_Exe:
   932                           
   933                           ; 1 bytes @ 0x17
   934  00B7                     	ds	15
   935  00C6                     _GBS_Stepper_Exe$1640:
   936                           
   937                           ; 4 bytes @ 0x26
   938  00C6                     	ds	4
   939  00CA                     _GBS_Stepper_Exe$1641:
   940                           
   941                           ; 4 bytes @ 0x2A
   942  00CA                     	ds	4
   943  00CE                     _GBS_Stepper_Exe$1642:
   944                           
   945                           ; 4 bytes @ 0x2E
   946  00CE                     	ds	4
   947  00D2                     _GBS_Stepper_Exe$1643:
   948                           
   949                           ; 4 bytes @ 0x32
   950  00D2                     	ds	4
   951  00D6                     _GBS_Stepper_Exe$1644:
   952                           
   953                           ; 4 bytes @ 0x36
   954  00D6                     	ds	4
   955  00DA                     _GBS_Stepper_Exe$1645:
   956                           
   957                           ; 4 bytes @ 0x3A
   958  00DA                     	ds	4
   959  00DE                     _GBS_Stepper_Exe$1646:
   960                           
   961                           ; 4 bytes @ 0x3E
   962  00DE                     	ds	4
   963  00E2                     GBS_Stepper_Exe@stepperX:
   964                           
   965                           ; 1 bytes @ 0x42
   966  00E2                     	ds	1
   967  00E3                     ??_ISR:
   968                           
   969                           ; 1 bytes @ 0x43
   970  00E3                     	ds	4
   971                           
   972                           	psect	cstackCOMMON
   973  0070                     __pcstackCOMMON:
   974  0070                     ?_GBS_Interrupt_Init:
   975  0070                     ?_GBS_USART_Send:	
   976                           ; 1 bytes @ 0x0
   977                           
   978  0070                     ?_GBS_T2I_Config:	
   979                           ; 1 bytes @ 0x0
   980                           
   981  0070                     ?_GBS_Interrupt_Enable:	
   982                           ; 1 bytes @ 0x0
   983                           
   984  0070                     ?_T2I_ISR:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     ?_USART_RX_ISR:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     ?_USART_TX_ISR:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     ?_ISR:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ?_GBS_Stepper_Update:	
   997                           ; 1 bytes @ 0x0
   998                           
   999  0070                     ??_GBS_Stepper_Update:	
  1000                           ; 1 bytes @ 0x0
  1001                           
  1002  0070                     ?_GBS_USART_Buffer_Read:	
  1003                           ; 1 bytes @ 0x0
  1004                           
  1005  0070                     ?_GBS_USART_Receive:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?i1_GBS_USART_Buffer_Write:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?i1_GBS_USART_Buffer_Read:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ??i1_GBS_USART_Buffer_Read:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?i1_GBS_USART_Send:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?_main:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?___awmod:	
  1024                           ; 2 bytes @ 0x0
  1025                           
  1026  0070                     i1GBS_USART_Buffer_Write@value:	
  1027                           ; 2 bytes @ 0x0
  1028                           
  1029  0070                     ___awmod@divisor:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032                           
  1033                           ; 2 bytes @ 0x0
  1034  0070                     	ds	1
  1035  0071                     ??i1_GBS_USART_Buffer_Write:
  1036  0071                     i1GBS_USART_Buffer_Read@result:	
  1037                           ; 1 bytes @ 0x1
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x1
  1041  0071                     	ds	1
  1042  0072                     i1GBS_USART_Buffer_Write@buffer:
  1043  0072                     i1GBS_USART_Buffer_Read@buffer:	
  1044                           ; 1 bytes @ 0x2
  1045                           
  1046  0072                     ___awmod@dividend:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x2
  1051  0072                     	ds	1
  1052  0073                     ??_GBS_USART_Receive:
  1053  0073                     ??i1_GBS_USART_Send:	
  1054                           ; 1 bytes @ 0x3
  1055                           
  1056  0073                     GBS_USART_Receive@buffer:	
  1057                           ; 1 bytes @ 0x3
  1058                           
  1059  0073                     i1GBS_USART_Send@buffer:	
  1060                           ; 1 bytes @ 0x3
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x3
  1064  0073                     	ds	1
  1065  0074                     ??_USART_RX_ISR:
  1066  0074                     ??_USART_TX_ISR:	
  1067                           ; 1 bytes @ 0x4
  1068                           
  1069  0074                     ??___awmod:	
  1070                           ; 1 bytes @ 0x4
  1071                           
  1072  0074                     ___awmod@counter:	
  1073                           ; 1 bytes @ 0x4
  1074                           
  1075                           
  1076                           ; 1 bytes @ 0x4
  1077  0074                     	ds	1
  1078  0075                     ___awmod@sign:
  1079                           
  1080                           ; 1 bytes @ 0x5
  1081  0075                     	ds	1
  1082  0076                     ?___bmul:
  1083  0076                     ___bmul@multiplicand:	
  1084                           ; 1 bytes @ 0x6
  1085                           
  1086                           
  1087                           ; 1 bytes @ 0x6
  1088  0076                     	ds	1
  1089  0077                     ??___bmul:
  1090  0077                     ___bmul@product:	
  1091                           ; 1 bytes @ 0x7
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0x7
  1095  0077                     	ds	1
  1096  0078                     ___bmul@multiplier:
  1097                           
  1098                           ; 1 bytes @ 0x8
  1099  0078                     	ds	1
  1100  0079                     ??___lldiv:
  1101                           
  1102                           ; 1 bytes @ 0x9
  1103  0079                     	ds	1
  1104  007A                     ??___lmul:
  1105                           
  1106                           ; 1 bytes @ 0xA
  1107  007A                     	ds	1
  1108  007B                     ___fltol@sign1:
  1109                           
  1110                           ; 1 bytes @ 0xB
  1111  007B                     	ds	1
  1112  007C                     ___fltol@exp1:
  1113                           
  1114                           ; 1 bytes @ 0xC
  1115  007C                     	ds	1
  1116  007D                     ??_T2I_ISR:
  1117                           
  1118                           	psect	cstackBANK0
  1119  0020                     __pcstackBANK0:	
  1120                           ; 1 bytes @ 0xD
  1121                           
  1122  0020                     ?___lldiv:
  1123  0020                     ___lldiv@divisor:	
  1124                           ; 4 bytes @ 0x0
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x0
  1128  0020                     	ds	4
  1129  0024                     ___lldiv@dividend:
  1130                           
  1131                           ; 4 bytes @ 0x4
  1132  0024                     	ds	4
  1133  0028                     ___lldiv@quotient:
  1134                           
  1135                           ; 4 bytes @ 0x8
  1136  0028                     	ds	4
  1137  002C                     ___lldiv@counter:
  1138                           
  1139                           ; 1 bytes @ 0xC
  1140  002C                     	ds	1
  1141  002D                     ?___lmul:
  1142  002D                     ___lmul@multiplier:	
  1143                           ; 4 bytes @ 0xD
  1144                           
  1145                           
  1146                           ; 4 bytes @ 0xD
  1147  002D                     	ds	4
  1148  0031                     ___lmul@multiplicand:
  1149                           
  1150                           ; 4 bytes @ 0x11
  1151  0031                     	ds	4
  1152  0035                     ___lmul@product:
  1153                           
  1154                           ; 4 bytes @ 0x15
  1155  0035                     	ds	4
  1156  0039                     ?___xxtofl:
  1157  0039                     ___xxtofl@val:	
  1158                           ; 4 bytes @ 0x19
  1159                           
  1160                           
  1161                           ; 4 bytes @ 0x19
  1162  0039                     	ds	4
  1163  003D                     ??___xxtofl:
  1164                           
  1165                           ; 1 bytes @ 0x1D
  1166  003D                     	ds	4
  1167  0041                     ___xxtofl@sign:
  1168                           
  1169                           ; 1 bytes @ 0x21
  1170  0041                     	ds	1
  1171  0042                     ___xxtofl@exp:
  1172                           
  1173                           ; 1 bytes @ 0x22
  1174  0042                     	ds	1
  1175  0043                     ___xxtofl@arg:
  1176                           
  1177                           ; 4 bytes @ 0x23
  1178  0043                     	ds	4
  1179  0047                     ?_sqrt:
  1180  0047                     sqrt@a:	
  1181                           ; 4 bytes @ 0x27
  1182                           
  1183                           
  1184                           ; 4 bytes @ 0x27
  1185  0047                     	ds	4
  1186  004B                     ??_sqrt:
  1187                           
  1188                           ; 1 bytes @ 0x2B
  1189  004B                     	ds	4
  1190  004F                     sqrt@sign:
  1191                           
  1192                           ; 1 bytes @ 0x2F
  1193  004F                     	ds	1
  1194  0050                     sqrt@i:
  1195                           
  1196                           ; 1 bytes @ 0x30
  1197  0050                     	ds	1
  1198  0051                     sqrt@tfrac:
  1199                           
  1200                           ; 4 bytes @ 0x31
  1201  0051                     	ds	4
  1202  0055                     sqrt@p:
  1203                           
  1204                           ; 1 bytes @ 0x35
  1205  0055                     	ds	1
  1206  0056                     sqrt@grs:
  1207                           
  1208                           ; 4 bytes @ 0x36
  1209  0056                     	ds	4
  1210  005A                     sqrt@exp:
  1211                           
  1212                           ; 2 bytes @ 0x3A
  1213  005A                     	ds	2
  1214  005C                     sqrt@root:
  1215                           
  1216                           ; 4 bytes @ 0x3C
  1217  005C                     	ds	4
  1218  0060                     sqrt@frac:
  1219                           
  1220                           ; 4 bytes @ 0x40
  1221  0060                     	ds	4
  1222  0064                     ?___fldiv:
  1223  0064                     ___fldiv@a:	
  1224                           ; 4 bytes @ 0x44
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x44
  1228  0064                     	ds	4
  1229  0068                     ___fldiv@b:
  1230                           
  1231                           ; 4 bytes @ 0x48
  1232  0068                     	ds	4
  1233  006C                     ??___fltol:
  1234                           
  1235                           ; 1 bytes @ 0x4C
  1236  006C                     	ds	4
  1237                           
  1238                           	psect	maintext
  1239  08FC                     __pmaintext:	
  1240 ;;
  1241 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1242 ;;
  1243 ;; *************** function _main *****************
  1244 ;; Defined at:
  1245 ;;		line 14 in file "../test.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;		None
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  2   20[None  ] int 
  1252 ;; Registers used:
  1253 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1254 ;; Tracked objects:
  1255 ;;		On entry : B00/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         0       0       0       0       0
  1261 ;;      Temps:          0       0       0       0       0
  1262 ;;      Totals:         0       0       0       0       0
  1263 ;;Total ram usage:        0 bytes
  1264 ;; Hardware stack levels required when called:    6
  1265 ;; This function calls:
  1266 ;;		_GBS_Interrupt_Init
  1267 ;;		_GBS_USART_Buffer_Write
  1268 ;;		_GBS_USART_Init
  1269 ;;		_GBS_USART_Send
  1270 ;; This function is called by:
  1271 ;;		Startup code after reset
  1272 ;; This function uses a non-reentrant model
  1273 ;;
  1274                           
  1275                           
  1276                           ;psect for function _main
  1277  08FC                     _main:
  1278  08FC                     l2303:	
  1279                           ;incstack = 0
  1280                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1281                           
  1282                           
  1283                           ;../test.c: 16:     GBS_Interrupt_Init();
  1284  08FC  120A  158A  203F  120A  158A  	fcall	_GBS_Interrupt_Init
  1285  0901                     l2305:
  1286                           
  1287                           ;../test.c: 18:     GBS_USART_Init(9600);
  1288  0901  3080               	movlw	128
  1289  0902  1683               	bsf	3,5	;RP0=1, select bank3
  1290  0903  1703               	bsf	3,6	;RP1=1, select bank3
  1291  0904  00D1               	movwf	GBS_USART_Init@baudRate^(0+384)
  1292  0905  3025               	movlw	37
  1293  0906  00D2               	movwf	(GBS_USART_Init@baudRate^(0+384)+1)
  1294  0907  120A  158A  224D  120A  158A  	fcall	_GBS_USART_Init
  1295  090C                     l2307:
  1296                           
  1297                           ;../test.c: 21:     {;../test.c: 40:         GBS_USART_Buffer_Write(&usartSendBuffer, 'a
      +                          ');
  1298  090C  3061               	movlw	97
  1299  090D  00FF               	movwf	btemp+1
  1300  090E  087F               	movf	btemp+1,w
  1301  090F  1683               	bsf	3,5	;RP0=1, select bank3
  1302  0910  1703               	bsf	3,6	;RP1=1, select bank3
  1303  0911  00C2               	movwf	GBS_USART_Buffer_Write@value^(0+384)
  1304  0912  3090               	movlw	(low (_usartSendBuffer| (0+256)))& (0+255)
  1305  0913  120A  158A  21A1  120A  158A  	fcall	_GBS_USART_Buffer_Write
  1306  0918                     l2309:
  1307                           
  1308                           ;../test.c: 41:         GBS_USART_Send(&usartSendBuffer);
  1309  0918  3090               	movlw	(low (_usartSendBuffer| (0+256)))& (0+255)
  1310  0919  120A  158A  20DF  120A  158A  	fcall	_GBS_USART_Send
  1311  091E  290C               	goto	l2307
  1312  091F  120A  118A  2816   	ljmp	start
  1313  0922                     __end_of_main:
  1314                           
  1315                           	psect	text1
  1316  08DF                     __ptext1:	
  1317 ;; *************** function _GBS_USART_Send *****************
  1318 ;; Defined at:
  1319 ;;		line 58 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;  buffer          1    wreg     PTR struct .
  1322 ;;		 -> usartSendBuffer(19), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  buffer          1    3[BANK3 ] PTR struct .
  1325 ;;		 -> usartSendBuffer(19), 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       1       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       0       1       0
  1339 ;;Total ram usage:        1 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    5
  1342 ;; This function calls:
  1343 ;;		_GBS_USART_Buffer_Read
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _GBS_USART_Send
  1351  08DF                     _GBS_USART_Send:
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1355                           ;GBS_USART_Send@buffer stored from wreg
  1356  08DF  1683               	bsf	3,5	;RP0=1, select bank3
  1357  08E0  1703               	bsf	3,6	;RP1=1, select bank3
  1358  08E1  00C5               	movwf	GBS_USART_Send@buffer^(0+384)
  1359  08E2                     l2275:
  1360                           
  1361                           ;../gbs8/bsp/scr/gbs8_usart.c: 58: void GBS_USART_Send(USART_buffer_t* buffer);../gbs8/b
      +                          sp/scr/gbs8_usart.c: 59: {;../gbs8/bsp/scr/gbs8_usart.c: 60:     PIE1bits.TXIE = 1;
  1362  08E2  1683               	bsf	3,5	;RP0=1, select bank1
  1363  08E3  1303               	bcf	3,6	;RP1=0, select bank1
  1364  08E4  160C               	bsf	12,4	;volatile
  1365  08E5                     l2277:
  1366                           
  1367                           ;../gbs8/bsp/scr/gbs8_usart.c: 61:     if (usartSendBuffer.size>0)
  1368  08E5  1683               	bsf	3,5	;RP0=1, select bank3
  1369  08E6  1703               	bsf	3,6	;RP1=1, select bank3
  1370  08E7  0822               	movf	(_usartSendBuffer^(0+384)+18),w
  1371  08E8  1903               	btfsc	3,2
  1372  08E9  28EB               	goto	u2661
  1373  08EA  28EC               	goto	u2660
  1374  08EB                     u2661:
  1375  08EB  28FB               	goto	l249
  1376  08EC                     u2660:
  1377  08EC                     l2279:
  1378                           
  1379                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     {;../gbs8/bsp/scr/gbs8_usart.c: 63:         TXREG
      +                           = GBS_USART_Buffer_Read(buffer);
  1380  08EC  0845               	movf	GBS_USART_Send@buffer^(0+384),w
  1381  08ED  120A  158A  2176  120A  158A  	fcall	_GBS_USART_Buffer_Read
  1382  08F2  1283               	bcf	3,5	;RP0=0, select bank0
  1383  08F3  1303               	bcf	3,6	;RP1=0, select bank0
  1384  08F4  0099               	movwf	25	;volatile
  1385  08F5                     l246:	
  1386                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:         while (TXSTAbits.TRMT==0);
  1387                           
  1388  08F5  1683               	bsf	3,5	;RP0=1, select bank1
  1389  08F6  1303               	bcf	3,6	;RP1=0, select bank1
  1390  08F7  1C98               	btfss	24,1	;volatile
  1391  08F8  28FA               	goto	u2671
  1392  08F9  28FB               	goto	u2670
  1393  08FA                     u2671:
  1394  08FA  28F5               	goto	l246
  1395  08FB                     u2670:
  1396  08FB                     l249:
  1397  08FB  0008               	return
  1398  08FC                     __end_of_GBS_USART_Send:
  1399                           
  1400                           	psect	text2
  1401  0976                     __ptext2:	
  1402 ;; *************** function _GBS_USART_Buffer_Read *****************
  1403 ;; Defined at:
  1404 ;;		line 46 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1405 ;; Parameters:    Size  Location     Type
  1406 ;;  buffer          1    wreg     PTR struct .
  1407 ;;		 -> usartSendBuffer(19), 
  1408 ;; Auto vars:     Size  Location     Type
  1409 ;;  buffer          1    2[BANK3 ] PTR struct .
  1410 ;;		 -> usartSendBuffer(19), 
  1411 ;;  result          1    1[BANK3 ] unsigned char 
  1412 ;; Return value:  Size  Location     Type
  1413 ;;                  1    wreg      unsigned char 
  1414 ;; Registers used:
  1415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1416 ;; Tracked objects:
  1417 ;;		On entry : 0/0
  1418 ;;		On exit  : 0/0
  1419 ;;		Unchanged: 0/0
  1420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1421 ;;      Params:         0       0       0       0       0
  1422 ;;      Locals:         0       0       0       2       0
  1423 ;;      Temps:          0       0       0       1       0
  1424 ;;      Totals:         0       0       0       3       0
  1425 ;;Total ram usage:        3 bytes
  1426 ;; Hardware stack levels used:    1
  1427 ;; Hardware stack levels required when called:    4
  1428 ;; This function calls:
  1429 ;;		Nothing
  1430 ;; This function is called by:
  1431 ;;		_GBS_USART_Send
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _GBS_USART_Buffer_Read
  1437  0976                     _GBS_USART_Buffer_Read:
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in _GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  1441                           ;GBS_USART_Buffer_Read@buffer stored from wreg
  1442  0976  1683               	bsf	3,5	;RP0=1, select bank3
  1443  0977  1703               	bsf	3,6	;RP1=1, select bank3
  1444  0978  00C4               	movwf	GBS_USART_Buffer_Read@buffer^(0+384)
  1445  0979                     l2193:
  1446                           
  1447                           ;../gbs8/bsp/scr/gbs8_usart.c: 46: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 47: {;../gbs8/bsp/scr/gbs8_usart.c: 48:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 49:     if (buffer->size>0)
  1448  0979  0844               	movf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1449  097A  3E12               	addlw	18
  1450  097B  0084               	movwf	4
  1451  097C  1783               	bsf	3,7	;select IRP bank2
  1452  097D  0800               	movf	0,w
  1453  097E  1903               	btfsc	3,2
  1454  097F  2981               	goto	u2521
  1455  0980  2982               	goto	u2520
  1456  0981                     u2521:
  1457  0981  29A0               	goto	l242
  1458  0982                     u2520:
  1459  0982                     l2195:
  1460                           
  1461                           ;../gbs8/bsp/scr/gbs8_usart.c: 50:     {;../gbs8/bsp/scr/gbs8_usart.c: 51:         resul
      +                          t = buffer->buffer[buffer->head];
  1462  0982  0844               	movf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1463  0983  3E10               	addlw	16
  1464  0984  0084               	movwf	4
  1465  0985  0800               	movf	0,w
  1466  0986  0744               	addwf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1467  0987  00C2               	movwf	??_GBS_USART_Buffer_Read^(0+384)
  1468  0988  0842               	movf	??_GBS_USART_Buffer_Read^(0+384),w
  1469  0989  0084               	movwf	4
  1470  098A  0800               	movf	0,w
  1471  098B  00FF               	movwf	btemp+1
  1472  098C  087F               	movf	btemp+1,w
  1473  098D  00C3               	movwf	GBS_USART_Buffer_Read@result^(0+384)
  1474                           
  1475                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:         buffer->head = (buffer->head + 1)%16;
  1476  098E  0844               	movf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1477  098F  3E10               	addlw	16
  1478  0990  0084               	movwf	4
  1479  0991  0800               	movf	0,w
  1480  0992  3E01               	addlw	1
  1481  0993  390F               	andlw	15
  1482  0994  00FF               	movwf	btemp+1
  1483  0995  0844               	movf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1484  0996  3E10               	addlw	16
  1485  0997  0084               	movwf	4
  1486  0998  087F               	movf	btemp+1,w
  1487  0999  0080               	movwf	0
  1488  099A                     l2197:
  1489                           
  1490                           ;../gbs8/bsp/scr/gbs8_usart.c: 53:         buffer->size--;
  1491  099A  0844               	movf	GBS_USART_Buffer_Read@buffer^(0+384),w
  1492  099B  3E12               	addlw	18
  1493  099C  0084               	movwf	4
  1494  099D  3001               	movlw	1
  1495  099E  0280               	subwf	0,f
  1496  099F                     l2199:
  1497                           
  1498                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         return result;
  1499  099F  0843               	movf	GBS_USART_Buffer_Read@result^(0+384),w
  1500  09A0                     l242:
  1501  09A0  0008               	return
  1502  09A1                     __end_of_GBS_USART_Buffer_Read:
  1503                           
  1504                           	psect	text3
  1505  0A4D                     __ptext3:	
  1506 ;; *************** function _GBS_USART_Init *****************
  1507 ;; Defined at:
  1508 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;  baudRate        2   15[BANK3 ] unsigned int 
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;		None
  1513 ;; Return value:  Size  Location     Type
  1514 ;;                  1    wreg      void 
  1515 ;; Registers used:
  1516 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1517 ;; Tracked objects:
  1518 ;;		On entry : 0/0
  1519 ;;		On exit  : 0/0
  1520 ;;		Unchanged: 0/0
  1521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1522 ;;      Params:         0       0       0       2       0
  1523 ;;      Locals:         0       0       0       4       0
  1524 ;;      Temps:          0       0       0       0       0
  1525 ;;      Totals:         0       0       0       6       0
  1526 ;;Total ram usage:        6 bytes
  1527 ;; Hardware stack levels used:    1
  1528 ;; Hardware stack levels required when called:    5
  1529 ;; This function calls:
  1530 ;;		___aldiv
  1531 ;; This function is called by:
  1532 ;;		_main
  1533 ;; This function uses a non-reentrant model
  1534 ;;
  1535                           
  1536                           
  1537                           ;psect for function _GBS_USART_Init
  1538  0A4D                     _GBS_USART_Init:
  1539  0A4D                     l2257:	
  1540                           ;incstack = 0
  1541                           ; Regs used in _GBS_USART_Init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1542                           
  1543                           
  1544                           ;../gbs8/bsp/scr/gbs8_usart.c: 6: void GBS_USART_Init(uint16_t baudRate);../gbs8/bsp/scr
      +                          /gbs8_usart.c: 7: {;../gbs8/bsp/scr/gbs8_usart.c: 9:     PIE1bits.TXIE = 0;
  1545  0A4D  1683               	bsf	3,5	;RP0=1, select bank1
  1546  0A4E  1303               	bcf	3,6	;RP1=0, select bank1
  1547  0A4F  120C               	bcf	12,4	;volatile
  1548                           
  1549                           ;../gbs8/bsp/scr/gbs8_usart.c: 10:     PIE1bits.RCIE = 1;
  1550  0A50  168C               	bsf	12,5	;volatile
  1551                           
  1552                           ;../gbs8/bsp/scr/gbs8_usart.c: 12:     TXSTAbits.TX9 = 0;
  1553  0A51  1318               	bcf	24,6	;volatile
  1554                           
  1555                           ;../gbs8/bsp/scr/gbs8_usart.c: 15:     TXSTAbits.SYNC = 0;
  1556  0A52  1218               	bcf	24,4	;volatile
  1557                           
  1558                           ;../gbs8/bsp/scr/gbs8_usart.c: 16:     RCSTAbits.RX9 = 0;
  1559  0A53  1283               	bcf	3,5	;RP0=0, select bank0
  1560  0A54  1303               	bcf	3,6	;RP1=0, select bank0
  1561  0A55  1318               	bcf	24,6	;volatile
  1562                           
  1563                           ;../gbs8/bsp/scr/gbs8_usart.c: 17:     BAUDCTLbits.BRG16 = 0;
  1564  0A56  1683               	bsf	3,5	;RP0=1, select bank3
  1565  0A57  1703               	bsf	3,6	;RP1=1, select bank3
  1566  0A58  1187               	bcf	7,3	;volatile
  1567                           
  1568                           ;../gbs8/bsp/scr/gbs8_usart.c: 20:     TXSTAbits.SENDB = 0;
  1569  0A59  1683               	bsf	3,5	;RP0=1, select bank1
  1570  0A5A  1303               	bcf	3,6	;RP1=0, select bank1
  1571  0A5B  1198               	bcf	24,3	;volatile
  1572                           
  1573                           ;../gbs8/bsp/scr/gbs8_usart.c: 23:     TXSTAbits.BRGH = 1;
  1574  0A5C  1518               	bsf	24,2	;volatile
  1575  0A5D                     l2259:
  1576                           
  1577                           ;../gbs8/bsp/scr/gbs8_usart.c: 26:     SPBRG = 11059200 / baudRate / 16 - 1;
  1578  0A5D  1683               	bsf	3,5	;RP0=1, select bank3
  1579  0A5E  1703               	bsf	3,6	;RP1=1, select bank3
  1580  0A5F  0851               	movf	GBS_USART_Init@baudRate^(0+384),w
  1581  0A60  00C2               	movwf	___aldiv@divisor^(0+384)
  1582  0A61  0852               	movf	(GBS_USART_Init@baudRate+1)^(0+384),w
  1583  0A62  00C3               	movwf	(___aldiv@divisor^(0+384)+1)
  1584  0A63  01C4               	clrf	(___aldiv@divisor^(0+384)+2)
  1585  0A64  01C5               	clrf	(___aldiv@divisor^(0+384)+3)
  1586  0A65  3000               	movlw	0
  1587  0A66  00C9               	movwf	(___aldiv@dividend+3)^(0+384)
  1588  0A67  30A8               	movlw	168
  1589  0A68  00C8               	movwf	(___aldiv@dividend+2)^(0+384)
  1590  0A69  30C0               	movlw	192
  1591  0A6A  00C7               	movwf	(___aldiv@dividend+1)^(0+384)
  1592  0A6B  3000               	movlw	0
  1593  0A6C  00C6               	movwf	___aldiv@dividend^(0+384)
  1594  0A6D  120A  118A  26F9  120A  158A  	fcall	___aldiv
  1595  0A72  1683               	bsf	3,5	;RP0=1, select bank3
  1596  0A73  1703               	bsf	3,6	;RP1=1, select bank3
  1597  0A74  0845               	movf	(?___aldiv+3)^(0+384),w
  1598  0A75  00D6               	movwf	(_GBS_USART_Init$1647+3)^(0+384)
  1599  0A76  0844               	movf	(?___aldiv+2)^(0+384),w
  1600  0A77  00D5               	movwf	(_GBS_USART_Init$1647+2)^(0+384)
  1601  0A78  0843               	movf	(?___aldiv+1)^(0+384),w
  1602  0A79  00D4               	movwf	(_GBS_USART_Init$1647+1)^(0+384)
  1603  0A7A  0842               	movf	?___aldiv^(0+384),w
  1604  0A7B  00D3               	movwf	_GBS_USART_Init$1647^(0+384)
  1605                           
  1606                           ;../gbs8/bsp/scr/gbs8_usart.c: 26:     SPBRG = 11059200 / baudRate / 16 - 1;
  1607  0A7C  3000               	movlw	0
  1608  0A7D  00C5               	movwf	(___aldiv@divisor+3)^(0+384)
  1609  0A7E  3000               	movlw	0
  1610  0A7F  00C4               	movwf	(___aldiv@divisor+2)^(0+384)
  1611  0A80  3000               	movlw	0
  1612  0A81  00C3               	movwf	(___aldiv@divisor+1)^(0+384)
  1613  0A82  3010               	movlw	16
  1614  0A83  00C2               	movwf	___aldiv@divisor^(0+384)
  1615  0A84  0856               	movf	(_GBS_USART_Init$1647+3)^(0+384),w
  1616  0A85  00C9               	movwf	(___aldiv@dividend+3)^(0+384)
  1617  0A86  0855               	movf	(_GBS_USART_Init$1647+2)^(0+384),w
  1618  0A87  00C8               	movwf	(___aldiv@dividend+2)^(0+384)
  1619  0A88  0854               	movf	(_GBS_USART_Init$1647+1)^(0+384),w
  1620  0A89  00C7               	movwf	(___aldiv@dividend+1)^(0+384)
  1621  0A8A  0853               	movf	_GBS_USART_Init$1647^(0+384),w
  1622  0A8B  00C6               	movwf	___aldiv@dividend^(0+384)
  1623  0A8C  120A  118A  26F9  120A  158A  	fcall	___aldiv
  1624  0A91  1683               	bsf	3,5	;RP0=1, select bank3
  1625  0A92  1703               	bsf	3,6	;RP1=1, select bank3
  1626  0A93  0842               	movf	?___aldiv^(0+384),w
  1627  0A94  3EFF               	addlw	255
  1628  0A95  1683               	bsf	3,5	;RP0=1, select bank1
  1629  0A96  1303               	bcf	3,6	;RP1=0, select bank1
  1630  0A97  0099               	movwf	25	;volatile
  1631  0A98                     l2261:
  1632                           
  1633                           ;../gbs8/bsp/scr/gbs8_usart.c: 29:     TRISCbits.TRISC7 = 1;
  1634  0A98  1787               	bsf	7,7	;volatile
  1635  0A99                     l2263:
  1636                           
  1637                           ;../gbs8/bsp/scr/gbs8_usart.c: 32:     TRISCbits.TRISC6 = 0;
  1638  0A99  1307               	bcf	7,6	;volatile
  1639  0A9A                     l2265:
  1640                           
  1641                           ;../gbs8/bsp/scr/gbs8_usart.c: 35:     TXSTAbits.TXEN = 1;
  1642  0A9A  1698               	bsf	24,5	;volatile
  1643  0A9B                     l2267:
  1644                           
  1645                           ;../gbs8/bsp/scr/gbs8_usart.c: 36:     RCSTAbits.CREN = 1;
  1646  0A9B  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0A9C  1303               	bcf	3,6	;RP1=0, select bank0
  1648  0A9D  1618               	bsf	24,4	;volatile
  1649  0A9E                     l234:
  1650  0A9E  0008               	return
  1651  0A9F                     __end_of_GBS_USART_Init:
  1652                           
  1653                           	psect	text4
  1654  06F9                     __ptext4:	
  1655 ;; *************** function ___aldiv *****************
  1656 ;; Defined at:
  1657 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
  1658 ;; Parameters:    Size  Location     Type
  1659 ;;  divisor         4    0[BANK3 ] long 
  1660 ;;  dividend        4    4[BANK3 ] long 
  1661 ;; Auto vars:     Size  Location     Type
  1662 ;;  quotient        4   11[BANK3 ] long 
  1663 ;;  sign            1   10[BANK3 ] unsigned char 
  1664 ;;  counter         1    9[BANK3 ] unsigned char 
  1665 ;; Return value:  Size  Location     Type
  1666 ;;                  4    0[BANK3 ] long 
  1667 ;; Registers used:
  1668 ;;		wreg, status,2, status,0, btemp+1
  1669 ;; Tracked objects:
  1670 ;;		On entry : 0/0
  1671 ;;		On exit  : 0/0
  1672 ;;		Unchanged: 0/0
  1673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1674 ;;      Params:         0       0       0       8       0
  1675 ;;      Locals:         0       0       0       6       0
  1676 ;;      Temps:          0       0       0       1       0
  1677 ;;      Totals:         0       0       0      15       0
  1678 ;;Total ram usage:       15 bytes
  1679 ;; Hardware stack levels used:    1
  1680 ;; Hardware stack levels required when called:    4
  1681 ;; This function calls:
  1682 ;;		Nothing
  1683 ;; This function is called by:
  1684 ;;		_GBS_USART_Init
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           
  1689                           ;psect for function ___aldiv
  1690  06F9                     ___aldiv:
  1691  06F9                     l2205:	
  1692                           ;incstack = 0
  1693                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  1694                           
  1695  06F9  1683               	bsf	3,5	;RP0=1, select bank3
  1696  06FA  1703               	bsf	3,6	;RP1=1, select bank3
  1697  06FB  01CC               	clrf	___aldiv@sign^(0+384)
  1698  06FC                     l2207:
  1699  06FC  1FC5               	btfss	(___aldiv@divisor+3)^(0+384),7
  1700  06FD  2EFF               	goto	u2531
  1701  06FE  2F00               	goto	u2530
  1702  06FF                     u2531:
  1703  06FF  2F0D               	goto	l410
  1704  0700                     u2530:
  1705  0700                     l2209:
  1706  0700  09C2               	comf	___aldiv@divisor^(0+384),f
  1707  0701  09C3               	comf	(___aldiv@divisor+1)^(0+384),f
  1708  0702  09C4               	comf	(___aldiv@divisor+2)^(0+384),f
  1709  0703  09C5               	comf	(___aldiv@divisor+3)^(0+384),f
  1710  0704  0AC2               	incf	___aldiv@divisor^(0+384),f
  1711  0705  1903               	skipnz
  1712  0706  0AC3               	incf	(___aldiv@divisor+1)^(0+384),f
  1713  0707  1903               	skipnz
  1714  0708  0AC4               	incf	(___aldiv@divisor+2)^(0+384),f
  1715  0709  1903               	skipnz
  1716  070A  0AC5               	incf	(___aldiv@divisor+3)^(0+384),f
  1717  070B  01CC               	clrf	___aldiv@sign^(0+384)
  1718  070C  0ACC               	incf	___aldiv@sign^(0+384),f
  1719  070D                     l410:
  1720  070D  1FC9               	btfss	(___aldiv@dividend+3)^(0+384),7
  1721  070E  2F10               	goto	u2541
  1722  070F  2F11               	goto	u2540
  1723  0710                     u2541:
  1724  0710  2F20               	goto	l2215
  1725  0711                     u2540:
  1726  0711                     l2211:
  1727  0711  09C6               	comf	___aldiv@dividend^(0+384),f
  1728  0712  09C7               	comf	(___aldiv@dividend+1)^(0+384),f
  1729  0713  09C8               	comf	(___aldiv@dividend+2)^(0+384),f
  1730  0714  09C9               	comf	(___aldiv@dividend+3)^(0+384),f
  1731  0715  0AC6               	incf	___aldiv@dividend^(0+384),f
  1732  0716  1903               	skipnz
  1733  0717  0AC7               	incf	(___aldiv@dividend+1)^(0+384),f
  1734  0718  1903               	skipnz
  1735  0719  0AC8               	incf	(___aldiv@dividend+2)^(0+384),f
  1736  071A  1903               	skipnz
  1737  071B  0AC9               	incf	(___aldiv@dividend+3)^(0+384),f
  1738  071C                     l2213:
  1739  071C  3001               	movlw	1
  1740  071D  00FF               	movwf	btemp+1
  1741  071E  087F               	movf	btemp+1,w
  1742  071F  06CC               	xorwf	___aldiv@sign^(0+384),f
  1743  0720                     l2215:
  1744  0720  3000               	movlw	0
  1745  0721  00D0               	movwf	(___aldiv@quotient+3)^(0+384)
  1746  0722  3000               	movlw	0
  1747  0723  00CF               	movwf	(___aldiv@quotient+2)^(0+384)
  1748  0724  3000               	movlw	0
  1749  0725  00CE               	movwf	(___aldiv@quotient+1)^(0+384)
  1750  0726  3000               	movlw	0
  1751  0727  00CD               	movwf	___aldiv@quotient^(0+384)
  1752  0728                     l2217:
  1753  0728  0845               	movf	(___aldiv@divisor+3)^(0+384),w
  1754  0729  0444               	iorwf	(___aldiv@divisor+2)^(0+384),w
  1755  072A  0443               	iorwf	(___aldiv@divisor+1)^(0+384),w
  1756  072B  0442               	iorwf	___aldiv@divisor^(0+384),w
  1757  072C  1903               	skipnz
  1758  072D  2F2F               	goto	u2551
  1759  072E  2F30               	goto	u2550
  1760  072F                     u2551:
  1761  072F  2F7D               	goto	l2239
  1762  0730                     u2550:
  1763  0730                     l2219:
  1764  0730  01CB               	clrf	___aldiv@counter^(0+384)
  1765  0731  0ACB               	incf	___aldiv@counter^(0+384),f
  1766  0732  2F40               	goto	l2225
  1767  0733                     l2221:
  1768  0733  3001               	movlw	1
  1769  0734  00CA               	movwf	??___aldiv^(0+384)
  1770  0735                     u2565:
  1771  0735  1003               	clrc
  1772  0736  0DC2               	rlf	___aldiv@divisor^(0+384),f
  1773  0737  0DC3               	rlf	(___aldiv@divisor+1)^(0+384),f
  1774  0738  0DC4               	rlf	(___aldiv@divisor+2)^(0+384),f
  1775  0739  0DC5               	rlf	(___aldiv@divisor+3)^(0+384),f
  1776  073A  0BCA               	decfsz	??___aldiv^(0+384),f
  1777  073B  2F35               	goto	u2565
  1778  073C                     l2223:
  1779  073C  3001               	movlw	1
  1780  073D  00FF               	movwf	btemp+1
  1781  073E  087F               	movf	btemp+1,w
  1782  073F  07CB               	addwf	___aldiv@counter^(0+384),f
  1783  0740                     l2225:
  1784  0740  1FC5               	btfss	(___aldiv@divisor+3)^(0+384),7
  1785  0741  2F43               	goto	u2571
  1786  0742  2F44               	goto	u2570
  1787  0743                     u2571:
  1788  0743  2F33               	goto	l2221
  1789  0744                     u2570:
  1790  0744                     l2227:
  1791  0744  3001               	movlw	1
  1792  0745  00CA               	movwf	??___aldiv^(0+384)
  1793  0746                     u2585:
  1794  0746  1003               	clrc
  1795  0747  0DCD               	rlf	___aldiv@quotient^(0+384),f
  1796  0748  0DCE               	rlf	(___aldiv@quotient+1)^(0+384),f
  1797  0749  0DCF               	rlf	(___aldiv@quotient+2)^(0+384),f
  1798  074A  0DD0               	rlf	(___aldiv@quotient+3)^(0+384),f
  1799  074B  0BCA               	decfsz	??___aldiv^(0+384),f
  1800  074C  2F46               	goto	u2585
  1801  074D                     l2229:
  1802  074D  0845               	movf	(___aldiv@divisor+3)^(0+384),w
  1803  074E  0249               	subwf	(___aldiv@dividend+3)^(0+384),w
  1804  074F  1D03               	skipz
  1805  0750  2F5B               	goto	u2595
  1806  0751  0844               	movf	(___aldiv@divisor+2)^(0+384),w
  1807  0752  0248               	subwf	(___aldiv@dividend+2)^(0+384),w
  1808  0753  1D03               	skipz
  1809  0754  2F5B               	goto	u2595
  1810  0755  0843               	movf	(___aldiv@divisor+1)^(0+384),w
  1811  0756  0247               	subwf	(___aldiv@dividend+1)^(0+384),w
  1812  0757  1D03               	skipz
  1813  0758  2F5B               	goto	u2595
  1814  0759  0842               	movf	___aldiv@divisor^(0+384),w
  1815  075A  0246               	subwf	___aldiv@dividend^(0+384),w
  1816  075B                     u2595:
  1817  075B  1C03               	skipc
  1818  075C  2F5E               	goto	u2591
  1819  075D  2F5F               	goto	u2590
  1820  075E                     u2591:
  1821  075E  2F6E               	goto	l2235
  1822  075F                     u2590:
  1823  075F                     l2231:
  1824  075F  0842               	movf	___aldiv@divisor^(0+384),w
  1825  0760  02C6               	subwf	___aldiv@dividend^(0+384),f
  1826  0761  0843               	movf	(___aldiv@divisor+1)^(0+384),w
  1827  0762  1C03               	skipc
  1828  0763  0F43               	incfsz	(___aldiv@divisor+1)^(0+384),w
  1829  0764  02C7               	subwf	(___aldiv@dividend+1)^(0+384),f
  1830  0765  0844               	movf	(___aldiv@divisor+2)^(0+384),w
  1831  0766  1C03               	skipc
  1832  0767  0F44               	incfsz	(___aldiv@divisor+2)^(0+384),w
  1833  0768  02C8               	subwf	(___aldiv@dividend+2)^(0+384),f
  1834  0769  0845               	movf	(___aldiv@divisor+3)^(0+384),w
  1835  076A  1C03               	skipc
  1836  076B  0F45               	incfsz	(___aldiv@divisor+3)^(0+384),w
  1837  076C  02C9               	subwf	(___aldiv@dividend+3)^(0+384),f
  1838  076D                     l2233:
  1839  076D  144D               	bsf	___aldiv@quotient^(0+384),0
  1840  076E                     l2235:
  1841  076E  3001               	movlw	1
  1842  076F                     u2605:
  1843  076F  1003               	clrc
  1844  0770  0CC5               	rrf	(___aldiv@divisor+3)^(0+384),f
  1845  0771  0CC4               	rrf	(___aldiv@divisor+2)^(0+384),f
  1846  0772  0CC3               	rrf	(___aldiv@divisor+1)^(0+384),f
  1847  0773  0CC2               	rrf	___aldiv@divisor^(0+384),f
  1848  0774  3EFF               	addlw	-1
  1849  0775  1D03               	skipz
  1850  0776  2F6F               	goto	u2605
  1851  0777                     l2237:
  1852  0777  3001               	movlw	1
  1853  0778  02CB               	subwf	___aldiv@counter^(0+384),f
  1854  0779  1D03               	btfss	3,2
  1855  077A  2F7C               	goto	u2611
  1856  077B  2F7D               	goto	u2610
  1857  077C                     u2611:
  1858  077C  2F44               	goto	l2227
  1859  077D                     u2610:
  1860  077D                     l2239:
  1861  077D  084C               	movf	___aldiv@sign^(0+384),w
  1862  077E  1903               	btfsc	3,2
  1863  077F  2F81               	goto	u2621
  1864  0780  2F82               	goto	u2620
  1865  0781                     u2621:
  1866  0781  2F8D               	goto	l2243
  1867  0782                     u2620:
  1868  0782                     l2241:
  1869  0782  09CD               	comf	___aldiv@quotient^(0+384),f
  1870  0783  09CE               	comf	(___aldiv@quotient+1)^(0+384),f
  1871  0784  09CF               	comf	(___aldiv@quotient+2)^(0+384),f
  1872  0785  09D0               	comf	(___aldiv@quotient+3)^(0+384),f
  1873  0786  0ACD               	incf	___aldiv@quotient^(0+384),f
  1874  0787  1903               	skipnz
  1875  0788  0ACE               	incf	(___aldiv@quotient+1)^(0+384),f
  1876  0789  1903               	skipnz
  1877  078A  0ACF               	incf	(___aldiv@quotient+2)^(0+384),f
  1878  078B  1903               	skipnz
  1879  078C  0AD0               	incf	(___aldiv@quotient+3)^(0+384),f
  1880  078D                     l2243:
  1881  078D  0850               	movf	(___aldiv@quotient+3)^(0+384),w
  1882  078E  00C5               	movwf	(?___aldiv+3)^(0+384)
  1883  078F  084F               	movf	(___aldiv@quotient+2)^(0+384),w
  1884  0790  00C4               	movwf	(?___aldiv+2)^(0+384)
  1885  0791  084E               	movf	(___aldiv@quotient+1)^(0+384),w
  1886  0792  00C3               	movwf	(?___aldiv+1)^(0+384)
  1887  0793  084D               	movf	___aldiv@quotient^(0+384),w
  1888  0794  00C2               	movwf	?___aldiv^(0+384)
  1889  0795                     l420:
  1890  0795  0008               	return
  1891  0796                     __end_of___aldiv:
  1892                           
  1893                           	psect	text5
  1894  09A1                     __ptext5:	
  1895 ;; *************** function _GBS_USART_Buffer_Write *****************
  1896 ;; Defined at:
  1897 ;;		line 39 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  buffer          1    wreg     PTR struct .
  1900 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1901 ;;  value           1    0[BANK3 ] unsigned char 
  1902 ;; Auto vars:     Size  Location     Type
  1903 ;;  buffer          1    2[BANK3 ] PTR struct .
  1904 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1905 ;; Return value:  Size  Location     Type
  1906 ;;                  1    wreg      void 
  1907 ;; Registers used:
  1908 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1909 ;; Tracked objects:
  1910 ;;		On entry : 0/0
  1911 ;;		On exit  : 0/0
  1912 ;;		Unchanged: 0/0
  1913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1914 ;;      Params:         0       0       0       1       0
  1915 ;;      Locals:         0       0       0       1       0
  1916 ;;      Temps:          0       0       0       1       0
  1917 ;;      Totals:         0       0       0       3       0
  1918 ;;Total ram usage:        3 bytes
  1919 ;; Hardware stack levels used:    1
  1920 ;; Hardware stack levels required when called:    4
  1921 ;; This function calls:
  1922 ;;		Nothing
  1923 ;; This function is called by:
  1924 ;;		_main
  1925 ;; This function uses a non-reentrant model
  1926 ;;
  1927                           
  1928                           
  1929                           ;psect for function _GBS_USART_Buffer_Write
  1930  09A1                     _GBS_USART_Buffer_Write:
  1931                           
  1932                           ;incstack = 0
  1933                           ; Regs used in _GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1934                           ;GBS_USART_Buffer_Write@buffer stored from wreg
  1935  09A1  1683               	bsf	3,5	;RP0=1, select bank3
  1936  09A2  1703               	bsf	3,6	;RP1=1, select bank3
  1937  09A3  00C4               	movwf	GBS_USART_Buffer_Write@buffer^(0+384)
  1938  09A4                     l2269:
  1939                           
  1940                           ;../gbs8/bsp/scr/gbs8_usart.c: 39: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 40: {;../gbs8/bsp/scr/gbs8_usart.c: 41:     
      +                          buffer->buffer[buffer->tail] = value;
  1941  09A4  0842               	movf	GBS_USART_Buffer_Write@value^(0+384),w
  1942  09A5  00FF               	movwf	btemp+1
  1943  09A6  0844               	movf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1944  09A7  3E11               	addlw	17
  1945  09A8  0084               	movwf	4
  1946  09A9  1783               	bsf	3,7	;select IRP bank2
  1947  09AA  0800               	movf	0,w
  1948  09AB  0744               	addwf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1949  09AC  00C3               	movwf	??_GBS_USART_Buffer_Write^(0+384)
  1950  09AD  0843               	movf	??_GBS_USART_Buffer_Write^(0+384),w
  1951  09AE  0084               	movwf	4
  1952  09AF  087F               	movf	btemp+1,w
  1953  09B0  0080               	movwf	0
  1954                           
  1955                           ;../gbs8/bsp/scr/gbs8_usart.c: 42:     buffer->tail = (buffer->tail + 1)%16;
  1956  09B1  0844               	movf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1957  09B2  3E11               	addlw	17
  1958  09B3  0084               	movwf	4
  1959  09B4  0800               	movf	0,w
  1960  09B5  3E01               	addlw	1
  1961  09B6  390F               	andlw	15
  1962  09B7  00FF               	movwf	btemp+1
  1963  09B8  0844               	movf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1964  09B9  3E11               	addlw	17
  1965  09BA  0084               	movwf	4
  1966  09BB  087F               	movf	btemp+1,w
  1967  09BC  0080               	movwf	0
  1968  09BD                     l2271:
  1969                           
  1970                           ;../gbs8/bsp/scr/gbs8_usart.c: 43:     if (buffer->size<16) buffer->size++;
  1971  09BD  0844               	movf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1972  09BE  3E12               	addlw	18
  1973  09BF  0084               	movwf	4
  1974  09C0  3010               	movlw	16
  1975  09C1  0200               	subwf	0,w
  1976  09C2  1803               	skipnc
  1977  09C3  29C5               	goto	u2651
  1978  09C4  29C6               	goto	u2650
  1979  09C5                     u2651:
  1980  09C5  29CD               	goto	l238
  1981  09C6                     u2650:
  1982  09C6                     l2273:
  1983  09C6  3001               	movlw	1
  1984  09C7  00FF               	movwf	btemp+1
  1985  09C8  0844               	movf	GBS_USART_Buffer_Write@buffer^(0+384),w
  1986  09C9  3E12               	addlw	18
  1987  09CA  0084               	movwf	4
  1988  09CB  087F               	movf	btemp+1,w
  1989  09CC  0780               	addwf	0,f
  1990  09CD                     l238:
  1991  09CD  0008               	return
  1992  09CE                     __end_of_GBS_USART_Buffer_Write:
  1993                           
  1994                           	psect	text6
  1995  083F                     __ptext6:	
  1996 ;; *************** function _GBS_Interrupt_Init *****************
  1997 ;; Defined at:
  1998 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;		None
  2001 ;; Auto vars:     Size  Location     Type
  2002 ;;		None
  2003 ;; Return value:  Size  Location     Type
  2004 ;;                  1    wreg      void 
  2005 ;; Registers used:
  2006 ;;		wreg, status,2, status,0, pclath, cstack
  2007 ;; Tracked objects:
  2008 ;;		On entry : 0/0
  2009 ;;		On exit  : 0/0
  2010 ;;		Unchanged: 0/0
  2011 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2012 ;;      Params:         0       0       0       0       0
  2013 ;;      Locals:         0       0       0       0       0
  2014 ;;      Temps:          0       0       0       0       0
  2015 ;;      Totals:         0       0       0       0       0
  2016 ;;Total ram usage:        0 bytes
  2017 ;; Hardware stack levels used:    1
  2018 ;; Hardware stack levels required when called:    5
  2019 ;; This function calls:
  2020 ;;		_GBS_Interrupt_Enable
  2021 ;;		_GBS_T2I_Config
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           
  2028                           ;psect for function _GBS_Interrupt_Init
  2029  083F                     _GBS_Interrupt_Init:
  2030  083F                     l2253:	
  2031                           ;incstack = 0
  2032                           ; Regs used in _GBS_Interrupt_Init: [wreg+status,2+status,0+pclath+cstack]
  2033                           
  2034                           
  2035                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 21:     GBS_T2I_Config(1);
  2036  083F  3001               	movlw	1
  2037  0840  120A  158A  2059  120A  158A  	fcall	_GBS_T2I_Config
  2038  0845                     l2255:
  2039                           
  2040                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 23:     GBS_Interrupt_Enable();
  2041  0845  120A  158A  202D  120A  158A  	fcall	_GBS_Interrupt_Enable
  2042  084A                     l74:
  2043  084A  0008               	return
  2044  084B                     __end_of_GBS_Interrupt_Init:
  2045                           
  2046                           	psect	text7
  2047  0859                     __ptext7:	
  2048 ;; *************** function _GBS_T2I_Config *****************
  2049 ;; Defined at:
  2050 ;;		line 82 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;  mode            1    wreg     unsigned char 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  mode            1    0[BANK3 ] unsigned char 
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, status,0
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       0       0       0       0
  2065 ;;      Locals:         0       0       0       1       0
  2066 ;;      Temps:          0       0       0       0       0
  2067 ;;      Totals:         0       0       0       1       0
  2068 ;;Total ram usage:        1 bytes
  2069 ;; Hardware stack levels used:    1
  2070 ;; Hardware stack levels required when called:    4
  2071 ;; This function calls:
  2072 ;;		Nothing
  2073 ;; This function is called by:
  2074 ;;		_GBS_Interrupt_Init
  2075 ;; This function uses a non-reentrant model
  2076 ;;
  2077                           
  2078                           
  2079                           ;psect for function _GBS_T2I_Config
  2080  0859                     _GBS_T2I_Config:
  2081                           
  2082                           ;incstack = 0
  2083                           ; Regs used in _GBS_T2I_Config: [wreg+status,0]
  2084                           ;GBS_T2I_Config@mode stored from wreg
  2085  0859  1683               	bsf	3,5	;RP0=1, select bank3
  2086  085A  1703               	bsf	3,6	;RP1=1, select bank3
  2087  085B  00C2               	movwf	GBS_T2I_Config@mode^(0+384)
  2088  085C                     l2113:
  2089                           
  2090                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 82: void GBS_T2I_Config(uint8_t mode);../gbs8/bsp/scr
      +                          /gbs8_interrupt.c: 83: {;../gbs8/bsp/scr/gbs8_interrupt.c: 84:     PIR1bits.TMR2IF = 0;
  2091  085C  1283               	bcf	3,5	;RP0=0, select bank0
  2092  085D  1303               	bcf	3,6	;RP1=0, select bank0
  2093  085E  108C               	bcf	12,1	;volatile
  2094  085F                     l2115:
  2095                           
  2096                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 85:     PIE1bits.TMR2IE = mode;
  2097  085F  1683               	bsf	3,5	;RP0=1, select bank3
  2098  0860  1703               	bsf	3,6	;RP1=1, select bank3
  2099  0861  0C42               	rrf	GBS_T2I_Config@mode^(0+384),w
  2100  0862  1683               	bsf	3,5	;RP0=1, select bank1
  2101  0863  1303               	bcf	3,6	;RP1=0, select bank1
  2102  0864  1C03               	skipc
  2103  0865  108C               	bcf	12,1	;volatile
  2104  0866  1803               	skipnc
  2105  0867  148C               	bsf	12,1	;volatile
  2106  0868                     l95:
  2107  0868  0008               	return
  2108  0869                     __end_of_GBS_T2I_Config:
  2109                           
  2110                           	psect	text8
  2111  082D                     __ptext8:	
  2112 ;; *************** function _GBS_Interrupt_Enable *****************
  2113 ;; Defined at:
  2114 ;;		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2115 ;; Parameters:    Size  Location     Type
  2116 ;;		None
  2117 ;; Auto vars:     Size  Location     Type
  2118 ;;		None
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      void 
  2121 ;; Registers used:
  2122 ;;		None
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       0       0       0       0
  2129 ;;      Locals:         0       0       0       0       0
  2130 ;;      Temps:          0       0       0       0       0
  2131 ;;      Totals:         0       0       0       0       0
  2132 ;;Total ram usage:        0 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		Nothing
  2137 ;; This function is called by:
  2138 ;;		_GBS_Interrupt_Init
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           
  2143                           ;psect for function _GBS_Interrupt_Enable
  2144  082D                     _GBS_Interrupt_Enable:
  2145  082D                     l2117:	
  2146                           ;incstack = 0
  2147                           ; Regs used in _GBS_Interrupt_Enable: []
  2148                           
  2149                           
  2150                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 28:     INTCONbits.PEIE = 1;
  2151  082D  170B               	bsf	11,6	;volatile
  2152                           
  2153                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 29:     INTCONbits.GIE = 1;
  2154  082E  178B               	bsf	11,7	;volatile
  2155  082F                     l77:
  2156  082F  0008               	return
  2157  0830                     __end_of_GBS_Interrupt_Enable:
  2158                           
  2159                           	psect	text9
  2160  09CE                     __ptext9:	
  2161 ;; *************** function _ISR *****************
  2162 ;; Defined at:
  2163 ;;		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  2164 ;; Parameters:    Size  Location     Type
  2165 ;;		None
  2166 ;; Auto vars:     Size  Location     Type
  2167 ;;		None
  2168 ;; Return value:  Size  Location     Type
  2169 ;;                  1    wreg      void 
  2170 ;; Registers used:
  2171 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2172 ;; Tracked objects:
  2173 ;;		On entry : 0/0
  2174 ;;		On exit  : 0/0
  2175 ;;		Unchanged: 0/0
  2176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2177 ;;      Params:         0       0       0       0       0
  2178 ;;      Locals:         0       0       0       0       0
  2179 ;;      Temps:          0       0       4       0       0
  2180 ;;      Totals:         0       0       4       0       0
  2181 ;;Total ram usage:        4 bytes
  2182 ;; Hardware stack levels used:    1
  2183 ;; Hardware stack levels required when called:    3
  2184 ;; This function calls:
  2185 ;;		_T2I_ISR
  2186 ;;		_USART_RX_ISR
  2187 ;;		_USART_TX_ISR
  2188 ;; This function is called by:
  2189 ;;		Interrupt level 1
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           
  2194                           ;psect for function _ISR
  2195  09CE                     _ISR:
  2196  09CE                     i1l2311:
  2197                           
  2198                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 128:     if (PIR1bits.TMR2IF)
  2199  09CE  1283               	bcf	3,5	;RP0=0, select bank0
  2200  09CF  1303               	bcf	3,6	;RP1=0, select bank0
  2201  09D0  1C8C               	btfss	12,1	;volatile
  2202  09D1  29D3               	goto	u272_21
  2203  09D2  29D4               	goto	u272_20
  2204  09D3                     u272_21:
  2205  09D3  29DC               	goto	i1l2317
  2206  09D4                     u272_20:
  2207  09D4                     i1l2313:
  2208                           
  2209                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 129:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 130:    
      +                               T2I_ISR();
  2210  09D4  120A  158A  208F  120A  158A  	fcall	_T2I_ISR
  2211  09D9                     i1l2315:
  2212                           
  2213                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 131:         PIR1bits.TMR2IF = 0;
  2214  09D9  1283               	bcf	3,5	;RP0=0, select bank0
  2215  09DA  1303               	bcf	3,6	;RP1=0, select bank0
  2216  09DB  108C               	bcf	12,1	;volatile
  2217  09DC                     i1l2317:
  2218                           
  2219                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 137:     if (PIR1bits.RCIF)
  2220  09DC  1E8C               	btfss	12,5	;volatile
  2221  09DD  29DF               	goto	u273_21
  2222  09DE  29E0               	goto	u273_20
  2223  09DF                     u273_21:
  2224  09DF  29E8               	goto	i1l2323
  2225  09E0                     u273_20:
  2226  09E0                     i1l2319:
  2227                           
  2228                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 138:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 139:    
      +                               USART_RX_ISR();
  2229  09E0  120A  158A  2030  120A  158A  	fcall	_USART_RX_ISR
  2230  09E5                     i1l2321:
  2231                           
  2232                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 140:         PIR1bits.RCIF = 0;
  2233  09E5  1283               	bcf	3,5	;RP0=0, select bank0
  2234  09E6  1303               	bcf	3,6	;RP1=0, select bank0
  2235  09E7  128C               	bcf	12,5	;volatile
  2236  09E8                     i1l2323:
  2237                           
  2238                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 142:     if (PIR1bits.TXIF)
  2239  09E8  1E0C               	btfss	12,4	;volatile
  2240  09E9  29EB               	goto	u274_21
  2241  09EA  29EC               	goto	u274_20
  2242  09EB                     u274_21:
  2243  09EB  29F4               	goto	i1l103
  2244  09EC                     u274_20:
  2245  09EC                     i1l2325:
  2246                           
  2247                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 143:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 144:    
      +                               USART_TX_ISR();
  2248  09EC  120A  158A  2069  120A  158A  	fcall	_USART_TX_ISR
  2249  09F1                     i1l2327:
  2250                           
  2251                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 145:         PIR1bits.TXIF = 0;
  2252  09F1  1283               	bcf	3,5	;RP0=0, select bank0
  2253  09F2  1303               	bcf	3,6	;RP1=0, select bank0
  2254  09F3  120C               	bcf	12,4	;volatile
  2255  09F4                     i1l103:
  2256  09F4  1683               	bsf	3,5	;RP0=1, select bank1
  2257  09F5  1303               	bcf	3,6	;RP1=0, select bank1
  2258  09F6  0866               	movf	(??_ISR+3)^(0+128),w
  2259  09F7  1283               	bcf	3,5	;RP0=0, select bank0
  2260  09F8  1303               	bcf	3,6	;RP1=0, select bank0
  2261  09F9  00FF               	movwf	btemp+1
  2262  09FA  1683               	bsf	3,5	;RP0=1, select bank1
  2263  09FB  1303               	bcf	3,6	;RP1=0, select bank1
  2264  09FC  0865               	movf	(??_ISR+2)^(0+128),w
  2265  09FD  008A               	movwf	10
  2266  09FE  0864               	movf	(??_ISR+1)^(0+128),w
  2267  09FF  0084               	movwf	4
  2268  0A00  0E63               	swapf	??_ISR^(0+128),w
  2269  0A01  0083               	movwf	3
  2270  0A02  0EFE               	swapf	btemp,f
  2271  0A03  0E7E               	swapf	btemp,w
  2272  0A04  0009               	retfie
  2273  0A05                     __end_of_ISR:
  2274                           
  2275                           	psect	intentry
  2276  0004                     __pintentry:	
  2277                           ;incstack = 0
  2278                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2279                           
  2280  0004                     interrupt_function:
  2281  007E                     saved_w	set	btemp
  2282  0004  00FE               	movwf	btemp
  2283  0005  0E03               	swapf	3,w
  2284  0006  1683               	bsf	3,5	;RP0=1, select bank1
  2285  0007  1303               	bcf	3,6	;RP1=0, select bank1
  2286  0008  00E3               	movwf	??_ISR^(0+128)
  2287  0009  0804               	movf	4,w
  2288  000A  00E4               	movwf	(??_ISR+1)^(0+128)
  2289  000B  080A               	movf	10,w
  2290  000C  00E5               	movwf	(??_ISR+2)^(0+128)
  2291  000D  1283               	bcf	3,5	;RP0=0, select bank0
  2292  000E  1303               	bcf	3,6	;RP1=0, select bank0
  2293  000F  087F               	movf	btemp+1,w
  2294  0010  1683               	bsf	3,5	;RP0=1, select bank1
  2295  0011  1303               	bcf	3,6	;RP1=0, select bank1
  2296  0012  00E6               	movwf	(??_ISR+3)^(0+128)
  2297  0013  120A  158A  29CE   	ljmp	_ISR
  2298                           
  2299                           	psect	text10
  2300  0869                     __ptext10:	
  2301 ;; *************** function _USART_TX_ISR *****************
  2302 ;; Defined at:
  2303 ;;		line 73 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;		None
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;		None
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         0       0       0       0       0
  2319 ;;      Temps:          0       0       0       0       0
  2320 ;;      Totals:         0       0       0       0       0
  2321 ;;Total ram usage:        0 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    2
  2324 ;; This function calls:
  2325 ;;		i1_GBS_USART_Send
  2326 ;; This function is called by:
  2327 ;;		_ISR
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _USART_TX_ISR
  2333  0869                     _USART_TX_ISR:
  2334  0869                     i1l2289:	
  2335                           ;incstack = 0
  2336                           ; Regs used in _USART_TX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2337                           
  2338                           
  2339                           ;../gbs8/bsp/scr/gbs8_usart.c: 75:     if (usartSendBuffer.size!=0)
  2340  0869  1683               	bsf	3,5	;RP0=1, select bank3
  2341  086A  1703               	bsf	3,6	;RP1=1, select bank3
  2342  086B  0822               	movf	(_usartSendBuffer^(0+384)+18),w
  2343  086C  1903               	btfsc	3,2
  2344  086D  286F               	goto	u269_21
  2345  086E  2870               	goto	u269_20
  2346  086F                     u269_21:
  2347  086F  2876               	goto	i1l2293
  2348  0870                     u269_20:
  2349  0870                     i1l2291:
  2350                           
  2351                           ;../gbs8/bsp/scr/gbs8_usart.c: 76:     GBS_USART_Send(&usartSendBuffer);
  2352  0870  3090               	movlw	(low (_usartSendBuffer| (0+256)))& (0+255)
  2353  0871  120A  158A  20A8  120A  158A  	fcall	i1_GBS_USART_Send
  2354  0876                     i1l2293:
  2355                           
  2356                           ;../gbs8/bsp/scr/gbs8_usart.c: 77:     PIE1bits.TXIE = 0;
  2357  0876  1683               	bsf	3,5	;RP0=1, select bank1
  2358  0877  1303               	bcf	3,6	;RP1=0, select bank1
  2359  0878  120C               	bcf	12,4	;volatile
  2360  0879                     i1l256:
  2361  0879  0008               	return
  2362  087A                     __end_of_USART_TX_ISR:
  2363                           
  2364                           	psect	text11
  2365  08A8                     __ptext11:	
  2366 ;; *************** function i1_GBS_USART_Send *****************
  2367 ;; Defined at:
  2368 ;;		line 58 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2369 ;; Parameters:    Size  Location     Type
  2370 ;;  buffer          1    wreg     PTR struct .
  2371 ;;		 -> usartSendBuffer(19), 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  buffer          1    3[COMMON] PTR struct .
  2374 ;;		 -> usartSendBuffer(19), 
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1    wreg      void 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/0
  2381 ;;		On exit  : 0/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2384 ;;      Params:         0       0       0       0       0
  2385 ;;      Locals:         1       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0
  2387 ;;      Totals:         1       0       0       0       0
  2388 ;;Total ram usage:        1 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    1
  2391 ;; This function calls:
  2392 ;;		i1_GBS_USART_Buffer_Read
  2393 ;; This function is called by:
  2394 ;;		_USART_TX_ISR
  2395 ;; This function uses a non-reentrant model
  2396 ;;
  2397                           
  2398                           
  2399                           ;psect for function i1_GBS_USART_Send
  2400  08A8                     i1_GBS_USART_Send:
  2401                           
  2402                           ;incstack = 0
  2403                           ; Regs used in i1_GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2404                           ;i1GBS_USART_Send@buffer stored from wreg
  2405  08A8  00F3               	movwf	i1GBS_USART_Send@buffer
  2406  08A9                     i1l2247:
  2407                           
  2408                           ;../gbs8/bsp/scr/gbs8_usart.c: 58: void GBS_USART_Send(USART_buffer_t* buffer);../gbs8/b
      +                          sp/scr/gbs8_usart.c: 59: {;../gbs8/bsp/scr/gbs8_usart.c: 60:     PIE1bits.TXIE = 1;
  2409  08A9  1683               	bsf	3,5	;RP0=1, select bank1
  2410  08AA  1303               	bcf	3,6	;RP1=0, select bank1
  2411  08AB  160C               	bsf	12,4	;volatile
  2412  08AC                     i1l2249:
  2413                           
  2414                           ;../gbs8/bsp/scr/gbs8_usart.c: 61:     if (usartSendBuffer.size>0)
  2415  08AC  1683               	bsf	3,5	;RP0=1, select bank3
  2416  08AD  1703               	bsf	3,6	;RP1=1, select bank3
  2417  08AE  0822               	movf	(_usartSendBuffer^(0+384)+18),w
  2418  08AF  1903               	btfsc	3,2
  2419  08B0  28B2               	goto	u263_21
  2420  08B1  28B3               	goto	u263_20
  2421  08B2                     u263_21:
  2422  08B2  28C2               	goto	i1l249
  2423  08B3                     u263_20:
  2424  08B3                     i1l2251:
  2425                           
  2426                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     {;../gbs8/bsp/scr/gbs8_usart.c: 63:         TXREG
      +                           = GBS_USART_Buffer_Read(buffer);
  2427  08B3  0873               	movf	i1GBS_USART_Send@buffer,w
  2428  08B4  120A  158A  2122  120A  158A  	fcall	i1_GBS_USART_Buffer_Read
  2429  08B9  1283               	bcf	3,5	;RP0=0, select bank0
  2430  08BA  1303               	bcf	3,6	;RP1=0, select bank0
  2431  08BB  0099               	movwf	25	;volatile
  2432  08BC                     i1l246:	
  2433                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:         while (TXSTAbits.TRMT==0);
  2434                           
  2435  08BC  1683               	bsf	3,5	;RP0=1, select bank1
  2436  08BD  1303               	bcf	3,6	;RP1=0, select bank1
  2437  08BE  1C98               	btfss	24,1	;volatile
  2438  08BF  28C1               	goto	u264_21
  2439  08C0  28C2               	goto	u264_20
  2440  08C1                     u264_21:
  2441  08C1  28BC               	goto	i1l246
  2442  08C2                     u264_20:
  2443  08C2                     i1l249:
  2444  08C2  0008               	return
  2445  08C3                     __end_ofi1_GBS_USART_Send:
  2446                           
  2447                           	psect	text12
  2448  0922                     __ptext12:	
  2449 ;; *************** function i1_GBS_USART_Buffer_Read *****************
  2450 ;; Defined at:
  2451 ;;		line 46 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  buffer          1    wreg     PTR struct .
  2454 ;;		 -> usartSendBuffer(19), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  buffer          1    2[COMMON] PTR struct .
  2457 ;;		 -> usartSendBuffer(19), 
  2458 ;;  result          1    1[COMMON] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      unsigned char 
  2461 ;; Registers used:
  2462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         2       0       0       0       0
  2470 ;;      Temps:          1       0       0       0       0
  2471 ;;      Totals:         3       0       0       0       0
  2472 ;;Total ram usage:        3 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		i1_GBS_USART_Send
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function i1_GBS_USART_Buffer_Read
  2483  0922                     i1_GBS_USART_Buffer_Read:
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in i1_GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  2487                           ;i1GBS_USART_Buffer_Read@buffer stored from wreg
  2488  0922  00F2               	movwf	i1GBS_USART_Buffer_Read@buffer
  2489  0923                     i1l2103:
  2490                           
  2491                           ;../gbs8/bsp/scr/gbs8_usart.c: 46: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 47: {;../gbs8/bsp/scr/gbs8_usart.c: 48:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 49:     if (buffer->size>0)
  2492  0923  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2493  0924  3E12               	addlw	18
  2494  0925  0084               	movwf	4
  2495  0926  1783               	bsf	3,7	;select IRP bank2
  2496  0927  0800               	movf	0,w
  2497  0928  1903               	btfsc	3,2
  2498  0929  292B               	goto	u238_21
  2499  092A  292C               	goto	u238_20
  2500  092B                     u238_21:
  2501  092B  294A               	goto	i1l242
  2502  092C                     u238_20:
  2503  092C                     i1l2105:
  2504                           
  2505                           ;../gbs8/bsp/scr/gbs8_usart.c: 50:     {;../gbs8/bsp/scr/gbs8_usart.c: 51:         resul
      +                          t = buffer->buffer[buffer->head];
  2506  092C  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2507  092D  3E10               	addlw	16
  2508  092E  0084               	movwf	4
  2509  092F  0800               	movf	0,w
  2510  0930  0772               	addwf	i1GBS_USART_Buffer_Read@buffer,w
  2511  0931  00F0               	movwf	??i1_GBS_USART_Buffer_Read
  2512  0932  0870               	movf	??i1_GBS_USART_Buffer_Read,w
  2513  0933  0084               	movwf	4
  2514  0934  0800               	movf	0,w
  2515  0935  00FF               	movwf	btemp+1
  2516  0936  087F               	movf	btemp+1,w
  2517  0937  00F1               	movwf	i1GBS_USART_Buffer_Read@result
  2518                           
  2519                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:         buffer->head = (buffer->head + 1)%16;
  2520  0938  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2521  0939  3E10               	addlw	16
  2522  093A  0084               	movwf	4
  2523  093B  0800               	movf	0,w
  2524  093C  3E01               	addlw	1
  2525  093D  390F               	andlw	15
  2526  093E  00FF               	movwf	btemp+1
  2527  093F  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2528  0940  3E10               	addlw	16
  2529  0941  0084               	movwf	4
  2530  0942  087F               	movf	btemp+1,w
  2531  0943  0080               	movwf	0
  2532  0944                     i1l2107:
  2533                           
  2534                           ;../gbs8/bsp/scr/gbs8_usart.c: 53:         buffer->size--;
  2535  0944  0872               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2536  0945  3E12               	addlw	18
  2537  0946  0084               	movwf	4
  2538  0947  3001               	movlw	1
  2539  0948  0280               	subwf	0,f
  2540  0949                     i1l2109:
  2541                           
  2542                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         return result;
  2543  0949  0871               	movf	i1GBS_USART_Buffer_Read@result,w
  2544  094A                     i1l242:
  2545  094A  0008               	return
  2546  094B                     __end_ofi1_GBS_USART_Buffer_Read:
  2547                           
  2548                           	psect	text13
  2549  0830                     __ptext13:	
  2550 ;; *************** function _USART_RX_ISR *****************
  2551 ;; Defined at:
  2552 ;;		line 80 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2553 ;; Parameters:    Size  Location     Type
  2554 ;;		None
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;		None
  2557 ;; Return value:  Size  Location     Type
  2558 ;;                  1    wreg      void 
  2559 ;; Registers used:
  2560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2561 ;; Tracked objects:
  2562 ;;		On entry : 0/0
  2563 ;;		On exit  : 0/0
  2564 ;;		Unchanged: 0/0
  2565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2566 ;;      Params:         0       0       0       0       0
  2567 ;;      Locals:         0       0       0       0       0
  2568 ;;      Temps:          0       0       0       0       0
  2569 ;;      Totals:         0       0       0       0       0
  2570 ;;Total ram usage:        0 bytes
  2571 ;; Hardware stack levels used:    1
  2572 ;; Hardware stack levels required when called:    2
  2573 ;; This function calls:
  2574 ;;		_GBS_USART_Receive
  2575 ;; This function is called by:
  2576 ;;		_ISR
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           
  2581                           ;psect for function _USART_RX_ISR
  2582  0830                     _USART_RX_ISR:
  2583  0830                     i1l2287:	
  2584                           ;incstack = 0
  2585                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2586                           
  2587                           
  2588                           ;../gbs8/bsp/scr/gbs8_usart.c: 82:     GBS_USART_Receive(&usartReceiveBuffer);
  2589  0830  30A3               	movlw	(low (_usartReceiveBuffer| (0+256)))& (0+255)
  2590  0831  120A  158A  204B  120A  158A  	fcall	_GBS_USART_Receive
  2591  0836                     i1l259:
  2592  0836  0008               	return
  2593  0837                     __end_of_USART_RX_ISR:
  2594                           
  2595                           	psect	text14
  2596  084B                     __ptext14:	
  2597 ;; *************** function _GBS_USART_Receive *****************
  2598 ;; Defined at:
  2599 ;;		line 68 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  buffer          1    wreg     PTR struct .
  2602 ;;		 -> usartReceiveBuffer(19), 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  buffer          1    3[COMMON] PTR struct .
  2605 ;;		 -> usartReceiveBuffer(19), 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         0       0       0       0       0
  2616 ;;      Locals:         1       0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0
  2618 ;;      Totals:         1       0       0       0       0
  2619 ;;Total ram usage:        1 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    1
  2622 ;; This function calls:
  2623 ;;		i1_GBS_USART_Buffer_Write
  2624 ;; This function is called by:
  2625 ;;		_USART_RX_ISR
  2626 ;; This function uses a non-reentrant model
  2627 ;;
  2628                           
  2629                           
  2630                           ;psect for function _GBS_USART_Receive
  2631  084B                     _GBS_USART_Receive:
  2632                           
  2633                           ;incstack = 0
  2634                           ; Regs used in _GBS_USART_Receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2635                           ;GBS_USART_Receive@buffer stored from wreg
  2636  084B  00F3               	movwf	GBS_USART_Receive@buffer
  2637  084C                     i1l2203:
  2638                           
  2639                           ;../gbs8/bsp/scr/gbs8_usart.c: 68: void GBS_USART_Receive(USART_buffer_t* buffer);../gbs
      +                          8/bsp/scr/gbs8_usart.c: 69: {;../gbs8/bsp/scr/gbs8_usart.c: 70:     GBS_USART_Buffer_Wri
      +                          te(buffer, RCREG);
  2640  084C  1283               	bcf	3,5	;RP0=0, select bank0
  2641  084D  1303               	bcf	3,6	;RP1=0, select bank0
  2642  084E  081A               	movf	26,w	;volatile
  2643  084F  00FF               	movwf	btemp+1
  2644  0850  087F               	movf	btemp+1,w
  2645  0851  00F0               	movwf	i1GBS_USART_Buffer_Write@value
  2646  0852  0873               	movf	GBS_USART_Receive@buffer,w
  2647  0853  120A  158A  214B  120A  158A  	fcall	i1_GBS_USART_Buffer_Write
  2648  0858                     i1l252:
  2649  0858  0008               	return
  2650  0859                     __end_of_GBS_USART_Receive:
  2651                           
  2652                           	psect	text15
  2653  094B                     __ptext15:	
  2654 ;; *************** function i1_GBS_USART_Buffer_Write *****************
  2655 ;; Defined at:
  2656 ;;		line 39 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  buffer          1    wreg     PTR struct .
  2659 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2660 ;;  value           1    0[COMMON] unsigned char 
  2661 ;; Auto vars:     Size  Location     Type
  2662 ;;  buffer          1    2[COMMON] PTR struct .
  2663 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         1       0       0       0       0
  2674 ;;      Locals:         1       0       0       0       0
  2675 ;;      Temps:          1       0       0       0       0
  2676 ;;      Totals:         3       0       0       0       0
  2677 ;;Total ram usage:        3 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; This function calls:
  2680 ;;		Nothing
  2681 ;; This function is called by:
  2682 ;;		_GBS_USART_Receive
  2683 ;; This function uses a non-reentrant model
  2684 ;;
  2685                           
  2686                           
  2687                           ;psect for function i1_GBS_USART_Buffer_Write
  2688  094B                     i1_GBS_USART_Buffer_Write:
  2689                           
  2690                           ;incstack = 0
  2691                           ; Regs used in i1_GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  2692                           ;i1GBS_USART_Buffer_Write@buffer stored from wreg
  2693  094B  00F2               	movwf	i1GBS_USART_Buffer_Write@buffer
  2694  094C                     i1l2097:
  2695                           
  2696                           ;../gbs8/bsp/scr/gbs8_usart.c: 39: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 40: {;../gbs8/bsp/scr/gbs8_usart.c: 41:     
      +                          buffer->buffer[buffer->tail] = value;
  2697  094C  0870               	movf	i1GBS_USART_Buffer_Write@value,w
  2698  094D  00FF               	movwf	btemp+1
  2699  094E  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2700  094F  3E11               	addlw	17
  2701  0950  0084               	movwf	4
  2702  0951  1783               	bsf	3,7	;select IRP bank2
  2703  0952  0800               	movf	0,w
  2704  0953  0772               	addwf	i1GBS_USART_Buffer_Write@buffer,w
  2705  0954  00F1               	movwf	??i1_GBS_USART_Buffer_Write
  2706  0955  0871               	movf	??i1_GBS_USART_Buffer_Write,w
  2707  0956  0084               	movwf	4
  2708  0957  087F               	movf	btemp+1,w
  2709  0958  0080               	movwf	0
  2710                           
  2711                           ;../gbs8/bsp/scr/gbs8_usart.c: 42:     buffer->tail = (buffer->tail + 1)%16;
  2712  0959  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2713  095A  3E11               	addlw	17
  2714  095B  0084               	movwf	4
  2715  095C  0800               	movf	0,w
  2716  095D  3E01               	addlw	1
  2717  095E  390F               	andlw	15
  2718  095F  00FF               	movwf	btemp+1
  2719  0960  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2720  0961  3E11               	addlw	17
  2721  0962  0084               	movwf	4
  2722  0963  087F               	movf	btemp+1,w
  2723  0964  0080               	movwf	0
  2724  0965                     i1l2099:
  2725                           
  2726                           ;../gbs8/bsp/scr/gbs8_usart.c: 43:     if (buffer->size<16) buffer->size++;
  2727  0965  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2728  0966  3E12               	addlw	18
  2729  0967  0084               	movwf	4
  2730  0968  3010               	movlw	16
  2731  0969  0200               	subwf	0,w
  2732  096A  1803               	skipnc
  2733  096B  296D               	goto	u237_21
  2734  096C  296E               	goto	u237_20
  2735  096D                     u237_21:
  2736  096D  2975               	goto	i1l238
  2737  096E                     u237_20:
  2738  096E                     i1l2101:
  2739  096E  3001               	movlw	1
  2740  096F  00FF               	movwf	btemp+1
  2741  0970  0872               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2742  0971  3E12               	addlw	18
  2743  0972  0084               	movwf	4
  2744  0973  087F               	movf	btemp+1,w
  2745  0974  0780               	addwf	0,f
  2746  0975                     i1l238:
  2747  0975  0008               	return
  2748  0976                     __end_ofi1_GBS_USART_Buffer_Write:
  2749                           
  2750                           	psect	text16
  2751  088F                     __ptext16:	
  2752 ;; *************** function _T2I_ISR *****************
  2753 ;; Defined at:
  2754 ;;		line 325 in file "../gbs8/driver/scr/gbs8_stepper.c"
  2755 ;; Parameters:    Size  Location     Type
  2756 ;;		None
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;		None
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         0       0       0       0       0
  2769 ;;      Locals:         0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0
  2771 ;;      Totals:         0       0       0       0       0
  2772 ;;Total ram usage:        0 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		_GBS_Stepper_Exe
  2777 ;;		_GBS_Stepper_Update
  2778 ;; This function is called by:
  2779 ;;		_ISR
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           
  2784                           ;psect for function _T2I_ISR
  2785  088F                     _T2I_ISR:
  2786  088F                     i1l2281:	
  2787                           ;incstack = 0
  2788                           ; Regs used in _T2I_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2789                           
  2790                           
  2791                           ;../gbs8/driver/scr/gbs8_stepper.c: 333:     if (stepperA.lock==0) GBS_Stepper_Exe(&step
      +                          perA, &sBufferA);
  2792  088F  1683               	bsf	3,5	;RP0=1, select bank3
  2793  0890  1703               	bsf	3,6	;RP1=1, select bank3
  2794  0891  0837               	movf	(_stepperA^(0+384)+1),w
  2795  0892  1D03               	btfss	3,2
  2796  0893  2895               	goto	u268_21
  2797  0894  2896               	goto	u268_20
  2798  0895                     u268_21:
  2799  0895  28A2               	goto	i1l2285
  2800  0896                     u268_20:
  2801  0896                     i1l2283:
  2802  0896  3010               	movlw	(low (_sBufferA| (0+256)))& (0+255)
  2803  0897  00FF               	movwf	btemp+1
  2804  0898  087F               	movf	btemp+1,w
  2805  0899  1683               	bsf	3,5	;RP0=1, select bank1
  2806  089A  1303               	bcf	3,6	;RP1=0, select bank1
  2807  089B  00B6               	movwf	GBS_Stepper_Exe@sBufferX^(0+128)
  2808  089C  30B6               	movlw	(low (_stepperA| (0+256)))& (0+255)
  2809  089D  120A  118A  2032  120A  158A  	fcall	_GBS_Stepper_Exe
  2810  08A2                     i1l2285:
  2811                           
  2812                           ;../gbs8/driver/scr/gbs8_stepper.c: 352:     GBS_Stepper_Update();
  2813  08A2  120A  158A  20C3  120A  158A  	fcall	_GBS_Stepper_Update
  2814  08A7                     i1l211:
  2815  08A7  0008               	return
  2816  08A8                     __end_of_T2I_ISR:
  2817                           
  2818                           	psect	text17
  2819  08C3                     __ptext17:	
  2820 ;; *************** function _GBS_Stepper_Update *****************
  2821 ;; Defined at:
  2822 ;;		line 261 in file "../gbs8/driver/scr/gbs8_stepper.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;                  1    wreg      void 
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2836 ;;      Params:         0       0       0       0       0
  2837 ;;      Locals:         0       0       0       0       0
  2838 ;;      Temps:          0       0       0       0       0
  2839 ;;      Totals:         0       0       0       0       0
  2840 ;;Total ram usage:        0 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; This function calls:
  2843 ;;		Nothing
  2844 ;; This function is called by:
  2845 ;;		_T2I_ISR
  2846 ;; This function uses a non-reentrant model
  2847 ;;
  2848                           
  2849                           
  2850                           ;psect for function _GBS_Stepper_Update
  2851  08C3                     _GBS_Stepper_Update:
  2852  08C3                     i1l2187:	
  2853                           ;incstack = 0
  2854                           ; Regs used in _GBS_Stepper_Update: [wreg+status,2+status,0]
  2855                           
  2856                           
  2857                           ;../gbs8/driver/scr/gbs8_stepper.c: 264:     if (stepperA.state == 0)
  2858  08C3  1683               	bsf	3,5	;RP0=1, select bank3
  2859  08C4  1703               	bsf	3,6	;RP1=1, select bank3
  2860  08C5  0836               	movf	_stepperA^(0+384),w
  2861  08C6  1D03               	btfss	3,2
  2862  08C7  28C9               	goto	u251_21
  2863  08C8  28CA               	goto	u251_20
  2864  08C9                     u251_21:
  2865  08C9  28CE               	goto	i1l2191
  2866  08CA                     u251_20:
  2867  08CA                     i1l2189:
  2868                           
  2869                           ;../gbs8/driver/scr/gbs8_stepper.c: 265:     {;../gbs8/driver/scr/gbs8_stepper.c: 266:  
      +                                 TRISEbits.TRISE0 = 0;
  2870  08CA  1683               	bsf	3,5	;RP0=1, select bank1
  2871  08CB  1303               	bcf	3,6	;RP1=0, select bank1
  2872  08CC  1009               	bcf	9,0	;volatile
  2873                           
  2874                           ;../gbs8/driver/scr/gbs8_stepper.c: 267:     }
  2875  08CD  28DE               	goto	i1l207
  2876  08CE                     i1l2191:
  2877                           
  2878                           ;../gbs8/driver/scr/gbs8_stepper.c: 269:     {;../gbs8/driver/scr/gbs8_stepper.c: 270:  
      +                                 TRISDbits.TRISD7 = stepperA.dir;
  2879  08CE  0C38               	rrf	(_stepperA^(0+384)+2),w
  2880  08CF  1683               	bsf	3,5	;RP0=1, select bank1
  2881  08D0  1303               	bcf	3,6	;RP1=0, select bank1
  2882  08D1  1C03               	skipc
  2883  08D2  1388               	bcf	8,7	;volatile
  2884  08D3  1803               	skipnc
  2885  08D4  1788               	bsf	8,7	;volatile
  2886                           
  2887                           ;../gbs8/driver/scr/gbs8_stepper.c: 271:         TRISEbits.TRISE0 = stepperA.pinState;
  2888  08D5  1683               	bsf	3,5	;RP0=1, select bank3
  2889  08D6  1703               	bsf	3,6	;RP1=1, select bank3
  2890  08D7  0C41               	rrf	(_stepperA^(0+384)+11),w
  2891  08D8  1683               	bsf	3,5	;RP0=1, select bank1
  2892  08D9  1303               	bcf	3,6	;RP1=0, select bank1
  2893  08DA  1C03               	skipc
  2894  08DB  1009               	bcf	9,0	;volatile
  2895  08DC  1803               	skipnc
  2896  08DD  1409               	bsf	9,0	;volatile
  2897  08DE                     i1l207:
  2898  08DE  0008               	return
  2899  08DF                     __end_of_GBS_Stepper_Update:
  2900                           
  2901                           	psect	text18
  2902  0032                     __ptext18:	
  2903 ;; *************** function _GBS_Stepper_Exe *****************
  2904 ;; Defined at:
  2905 ;;		line 198 in file "../gbs8/driver/scr/gbs8_stepper.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  stepperX        1    wreg     PTR struct .
  2908 ;;		 -> stepperA(12), 
  2909 ;;  sBufferX        1   22[BANK1 ] PTR struct .
  2910 ;;		 -> sBufferA(80), 
  2911 ;; Auto vars:     Size  Location     Type
  2912 ;;  stepperX        1   66[BANK1 ] PTR struct .
  2913 ;;		 -> stepperA(12), 
  2914 ;; Return value:  Size  Location     Type
  2915 ;;                  1    wreg      void 
  2916 ;; Registers used:
  2917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2918 ;; Tracked objects:
  2919 ;;		On entry : 0/0
  2920 ;;		On exit  : 0/0
  2921 ;;		Unchanged: 0/0
  2922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2923 ;;      Params:         0       0       1       0       0
  2924 ;;      Locals:         0       0      29       0       0
  2925 ;;      Temps:          0       0      15       0       0
  2926 ;;      Totals:         0       0      45       0       0
  2927 ;;Total ram usage:       45 bytes
  2928 ;; Hardware stack levels used:    1
  2929 ;; Hardware stack levels required when called:    1
  2930 ;; This function calls:
  2931 ;;		___awmod
  2932 ;;		___bmul
  2933 ;;		___fldiv
  2934 ;;		___fltol
  2935 ;;		___lldiv
  2936 ;;		___lmul
  2937 ;;		___xxtofl
  2938 ;;		_sqrt
  2939 ;; This function is called by:
  2940 ;;		_T2I_ISR
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _GBS_Stepper_Exe
  2946  0032                     _GBS_Stepper_Exe:
  2947                           
  2948                           ;incstack = 0
  2949                           ; Regs used in _GBS_Stepper_Exe: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2950                           ;GBS_Stepper_Exe@stepperX stored from wreg
  2951  0032  1683               	bsf	3,5	;RP0=1, select bank1
  2952  0033  1303               	bcf	3,6	;RP1=0, select bank1
  2953  0034  00E2               	movwf	GBS_Stepper_Exe@stepperX^(0+128)
  2954  0035                     i1l2119:
  2955                           
  2956                           ;../gbs8/driver/scr/gbs8_stepper.c: 198: void GBS_Stepper_Exe(stepper_t* stepperX, sBuff
      +                          er_t* sBufferX);../gbs8/driver/scr/gbs8_stepper.c: 199: {;../gbs8/driver/scr/gbs8_steppe
      +                          r.c: 200:     if (stepperX->pinState==1)
  2957  0035  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  2958  0036  3E0B               	addlw	11
  2959  0037  0084               	movwf	4
  2960  0038  1783               	bsf	3,7	;select IRP bank2
  2961  0039  0300               	decf	0,w
  2962  003A  1D03               	btfss	3,2
  2963  003B  283D               	goto	u239_21
  2964  003C  283E               	goto	u239_20
  2965  003D                     u239_21:
  2966  003D  2859               	goto	i1l2123
  2967  003E                     u239_20:
  2968  003E                     i1l2121:
  2969                           
  2970                           ;../gbs8/driver/scr/gbs8_stepper.c: 201:     {;../gbs8/driver/scr/gbs8_stepper.c: 202:  
      +                                 stepperX->pinState = 0;
  2971  003E  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  2972  003F  3E0B               	addlw	11
  2973  0040  0084               	movwf	4
  2974  0041  0180               	clrf	0
  2975                           
  2976                           ;../gbs8/driver/scr/gbs8_stepper.c: 203:         stepperX->cnts--;
  2977  0042  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  2978  0043  3E03               	addlw	3
  2979  0044  0084               	movwf	4
  2980  0045  3001               	movlw	1
  2981  0046  0280               	subwf	0,f
  2982  0047  0A84               	incf	4,f
  2983  0048  3000               	movlw	0
  2984  0049  1C03               	skipc
  2985  004A  3001               	movlw	1
  2986  004B  0280               	subwf	0,f
  2987  004C  0A84               	incf	4,f
  2988  004D  3000               	movlw	0
  2989  004E  1C03               	skipc
  2990  004F  3001               	movlw	1
  2991  0050  0280               	subwf	0,f
  2992  0051  0A84               	incf	4,f
  2993  0052  3000               	movlw	0
  2994  0053  1C03               	skipc
  2995  0054  3001               	movlw	1
  2996  0055  0280               	subwf	0,f
  2997  0056  3003               	movlw	3
  2998  0057  0284               	subwf	4,f
  2999                           
  3000                           ;../gbs8/driver/scr/gbs8_stepper.c: 208:     }
  3001  0058  2E3C               	goto	i1l202
  3002  0059                     i1l2123:
  3003                           
  3004                           ;../gbs8/driver/scr/gbs8_stepper.c: 210:     {;../gbs8/driver/scr/gbs8_stepper.c: 211:  
      +                                 if (stepperX->cnts>0) stepperX->cnts--;
  3005  0059  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3006  005A  3E03               	addlw	3
  3007  005B  0084               	movwf	4
  3008  005C  0800               	movf	0,w
  3009  005D  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3010  005E  0A84               	incf	4,f
  3011  005F  0800               	movf	0,w
  3012  0060  00B8               	movwf	(??_GBS_Stepper_Exe^(0+128)+1)
  3013  0061  0A84               	incf	4,f
  3014  0062  0800               	movf	0,w
  3015  0063  00B9               	movwf	(??_GBS_Stepper_Exe^(0+128)+2)
  3016  0064  0A84               	incf	4,f
  3017  0065  0800               	movf	0,w
  3018  0066  00BA               	movwf	(??_GBS_Stepper_Exe^(0+128)+3)
  3019  0067  083A               	movf	(??_GBS_Stepper_Exe+3)^(0+128),w
  3020  0068  0439               	iorwf	(??_GBS_Stepper_Exe+2)^(0+128),w
  3021  0069  0438               	iorwf	(??_GBS_Stepper_Exe+1)^(0+128),w
  3022  006A  0437               	iorwf	??_GBS_Stepper_Exe^(0+128),w
  3023  006B  1903               	skipnz
  3024  006C  286E               	goto	u240_21
  3025  006D  286F               	goto	u240_20
  3026  006E                     u240_21:
  3027  006E  2886               	goto	i1l2127
  3028  006F                     u240_20:
  3029  006F                     i1l2125:
  3030  006F  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3031  0070  3E03               	addlw	3
  3032  0071  0084               	movwf	4
  3033  0072  3001               	movlw	1
  3034  0073  0280               	subwf	0,f
  3035  0074  0A84               	incf	4,f
  3036  0075  3000               	movlw	0
  3037  0076  1C03               	skipc
  3038  0077  3001               	movlw	1
  3039  0078  0280               	subwf	0,f
  3040  0079  0A84               	incf	4,f
  3041  007A  3000               	movlw	0
  3042  007B  1C03               	skipc
  3043  007C  3001               	movlw	1
  3044  007D  0280               	subwf	0,f
  3045  007E  0A84               	incf	4,f
  3046  007F  3000               	movlw	0
  3047  0080  1C03               	skipc
  3048  0081  3001               	movlw	1
  3049  0082  0280               	subwf	0,f
  3050  0083  3003               	movlw	3
  3051  0084  0284               	subwf	4,f
  3052  0085  2E3C               	goto	i1l202
  3053  0086                     i1l2127:
  3054                           
  3055                           ;../gbs8/driver/scr/gbs8_stepper.c: 213:         {;../gbs8/driver/scr/gbs8_stepper.c: 21
      +                          5:             if (sBufferX->buffer[sBufferX->head].acc_until+sBufferX->buffer[sBufferX-
      +                          >head].dec_after+sBufferX->buffer[sBufferX->head].dec_until==0)
  3056  0086  301A               	movlw	26
  3057  0087  00FF               	movwf	btemp+1
  3058  0088  087F               	movf	btemp+1,w
  3059  0089  00F6               	movwf	___bmul@multiplicand
  3060  008A  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3061  008B  3E4E               	addlw	78
  3062  008C  0084               	movwf	4
  3063  008D  0800               	movf	0,w
  3064  008E  120A  158A  207A  120A  118A  	fcall	___bmul
  3065  0093  1683               	bsf	3,5	;RP0=1, select bank1
  3066  0094  1303               	bcf	3,6	;RP1=0, select bank1
  3067  0095  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3068  0096  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3069  0097  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3070  0098  3E09               	addlw	9
  3071  0099  0084               	movwf	4
  3072  009A  1783               	bsf	3,7	;select IRP bank2
  3073  009B  0800               	movf	0,w
  3074  009C  00B8               	movwf	(??_GBS_Stepper_Exe+1)^(0+128)
  3075  009D  0A84               	incf	4,f
  3076  009E  0800               	movf	0,w
  3077  009F  00B9               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+1)
  3078  00A0  0A84               	incf	4,f
  3079  00A1  0800               	movf	0,w
  3080  00A2  00BA               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+2)
  3081  00A3  0A84               	incf	4,f
  3082  00A4  0800               	movf	0,w
  3083  00A5  00BB               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+3)
  3084  00A6  301A               	movlw	26
  3085  00A7  00FF               	movwf	btemp+1
  3086  00A8  087F               	movf	btemp+1,w
  3087  00A9  00F6               	movwf	___bmul@multiplicand
  3088  00AA  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3089  00AB  3E4E               	addlw	78
  3090  00AC  0084               	movwf	4
  3091  00AD  0800               	movf	0,w
  3092  00AE  120A  158A  207A  120A  118A  	fcall	___bmul
  3093  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  3094  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  3095  00B5  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3096  00B6  00BC               	movwf	(??_GBS_Stepper_Exe+5)^(0+128)
  3097  00B7  083C               	movf	(??_GBS_Stepper_Exe+5)^(0+128),w
  3098  00B8  3E05               	addlw	5
  3099  00B9  0084               	movwf	4
  3100  00BA  1783               	bsf	3,7	;select IRP bank2
  3101  00BB  0800               	movf	0,w
  3102  00BC  00BD               	movwf	(??_GBS_Stepper_Exe+6)^(0+128)
  3103  00BD  0A84               	incf	4,f
  3104  00BE  0800               	movf	0,w
  3105  00BF  00BE               	movwf	((??_GBS_Stepper_Exe+6)^(0+128)+1)
  3106  00C0  0A84               	incf	4,f
  3107  00C1  0800               	movf	0,w
  3108  00C2  00BF               	movwf	((??_GBS_Stepper_Exe+6)^(0+128)+2)
  3109  00C3  0A84               	incf	4,f
  3110  00C4  0800               	movf	0,w
  3111  00C5  00C0               	movwf	((??_GBS_Stepper_Exe+6)^(0+128)+3)
  3112  00C6  301A               	movlw	26
  3113  00C7  00FF               	movwf	btemp+1
  3114  00C8  087F               	movf	btemp+1,w
  3115  00C9  00F6               	movwf	___bmul@multiplicand
  3116  00CA  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3117  00CB  3E4E               	addlw	78
  3118  00CC  0084               	movwf	4
  3119  00CD  0800               	movf	0,w
  3120  00CE  120A  158A  207A  120A  118A  	fcall	___bmul
  3121  00D3  1683               	bsf	3,5	;RP0=1, select bank1
  3122  00D4  1303               	bcf	3,6	;RP1=0, select bank1
  3123  00D5  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3124  00D6  00C1               	movwf	(??_GBS_Stepper_Exe+10)^(0+128)
  3125  00D7  0A41               	incf	(??_GBS_Stepper_Exe+10)^(0+128),w
  3126  00D8  0084               	movwf	4
  3127  00D9  1783               	bsf	3,7	;select IRP bank2
  3128  00DA  0800               	movf	0,w
  3129  00DB  00C2               	movwf	(??_GBS_Stepper_Exe+11)^(0+128)
  3130  00DC  0A84               	incf	4,f
  3131  00DD  0800               	movf	0,w
  3132  00DE  00C3               	movwf	((??_GBS_Stepper_Exe+11)^(0+128)+1)
  3133  00DF  0A84               	incf	4,f
  3134  00E0  0800               	movf	0,w
  3135  00E1  00C4               	movwf	((??_GBS_Stepper_Exe+11)^(0+128)+2)
  3136  00E2  0A84               	incf	4,f
  3137  00E3  0800               	movf	0,w
  3138  00E4  00C5               	movwf	((??_GBS_Stepper_Exe+11)^(0+128)+3)
  3139  00E5  0842               	movf	(??_GBS_Stepper_Exe+11)^(0+128),w
  3140  00E6  07BD               	addwf	(??_GBS_Stepper_Exe+6)^(0+128),f
  3141  00E7  0843               	movf	(??_GBS_Stepper_Exe+12)^(0+128),w
  3142  00E8  1803               	skipnc
  3143  00E9  0F43               	incfsz	(??_GBS_Stepper_Exe+12)^(0+128),w
  3144  00EA  28EC               	goto	u241_20
  3145  00EB  28ED               	goto	u241_21
  3146  00EC                     u241_20:
  3147  00EC  07BE               	addwf	((??_GBS_Stepper_Exe+6)^(0+128)+1),f
  3148  00ED                     u241_21:
  3149  00ED  0844               	movf	(??_GBS_Stepper_Exe+13)^(0+128),w
  3150  00EE  1803               	skipnc
  3151  00EF  0F44               	incfsz	(??_GBS_Stepper_Exe+13)^(0+128),w
  3152  00F0  28F2               	goto	u241_22
  3153  00F1  28F3               	goto	u241_23
  3154  00F2                     u241_22:
  3155  00F2  07BF               	addwf	((??_GBS_Stepper_Exe+6)^(0+128)+2),f
  3156  00F3                     u241_23:
  3157  00F3  0845               	movf	(??_GBS_Stepper_Exe+14)^(0+128),w
  3158  00F4  1803               	skipnc
  3159  00F5  0A45               	incf	(??_GBS_Stepper_Exe+14)^(0+128),w
  3160  00F6  07C0               	addwf	((??_GBS_Stepper_Exe+6)^(0+128)+3),f
  3161  00F7  083D               	movf	(??_GBS_Stepper_Exe+6)^(0+128),w
  3162  00F8  07B8               	addwf	(??_GBS_Stepper_Exe+1)^(0+128),f
  3163  00F9  083E               	movf	(??_GBS_Stepper_Exe+7)^(0+128),w
  3164  00FA  1803               	skipnc
  3165  00FB  0F3E               	incfsz	(??_GBS_Stepper_Exe+7)^(0+128),w
  3166  00FC  28FE               	goto	u242_20
  3167  00FD  28FF               	goto	u242_21
  3168  00FE                     u242_20:
  3169  00FE  07B9               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+1),f
  3170  00FF                     u242_21:
  3171  00FF  083F               	movf	(??_GBS_Stepper_Exe+8)^(0+128),w
  3172  0100  1803               	skipnc
  3173  0101  0F3F               	incfsz	(??_GBS_Stepper_Exe+8)^(0+128),w
  3174  0102  2904               	goto	u242_22
  3175  0103  2905               	goto	u242_23
  3176  0104                     u242_22:
  3177  0104  07BA               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+2),f
  3178  0105                     u242_23:
  3179  0105  0840               	movf	(??_GBS_Stepper_Exe+9)^(0+128),w
  3180  0106  1803               	skipnc
  3181  0107  0A40               	incf	(??_GBS_Stepper_Exe+9)^(0+128),w
  3182  0108  07BB               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+3),f
  3183  0109  083B               	movf	(??_GBS_Stepper_Exe+4)^(0+128),w
  3184  010A  043A               	iorwf	(??_GBS_Stepper_Exe+3)^(0+128),w
  3185  010B  0439               	iorwf	(??_GBS_Stepper_Exe+2)^(0+128),w
  3186  010C  0438               	iorwf	(??_GBS_Stepper_Exe+1)^(0+128),w
  3187  010D  1D03               	skipz
  3188  010E  2910               	goto	u243_21
  3189  010F  2911               	goto	u243_20
  3190  0110                     u243_21:
  3191  0110  2A8B               	goto	i1l2141
  3192  0111                     u243_20:
  3193  0111                     i1l2129:
  3194                           
  3195                           ;../gbs8/driver/scr/gbs8_stepper.c: 216:             {;../gbs8/driver/scr/gbs8_stepper.c
      +                          : 218:                 if (sBufferX->buffer[(sBufferX->head+1)%3].flag==2)
  3196  0111  301A               	movlw	26
  3197  0112  00FF               	movwf	btemp+1
  3198  0113  087F               	movf	btemp+1,w
  3199  0114  00F6               	movwf	___bmul@multiplicand
  3200  0115  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3201  0116  3E4E               	addlw	78
  3202  0117  0084               	movwf	4
  3203  0118  0800               	movf	0,w
  3204  0119  3E01               	addlw	1
  3205  011A  00F2               	movwf	___awmod@dividend
  3206  011B  3000               	movlw	0
  3207  011C  1803               	skipnc
  3208  011D  3001               	movlw	1
  3209  011E  00F3               	movwf	___awmod@dividend+1
  3210  011F  3003               	movlw	3
  3211  0120  00F0               	movwf	___awmod@divisor
  3212  0121  3000               	movlw	0
  3213  0122  00F1               	movwf	___awmod@divisor+1
  3214  0123  120A  158A  229F  120A  118A  	fcall	___awmod
  3215  0128  0870               	movf	?___awmod,w
  3216  0129  120A  158A  207A  120A  118A  	fcall	___bmul
  3217  012E  1683               	bsf	3,5	;RP0=1, select bank1
  3218  012F  1303               	bcf	3,6	;RP1=0, select bank1
  3219  0130  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3220  0131  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3221  0132  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3222  0133  3E19               	addlw	25
  3223  0134  0084               	movwf	4
  3224  0135  3002               	movlw	2
  3225  0136  1783               	bsf	3,7	;select IRP bank2
  3226  0137  0600               	xorwf	0,w
  3227  0138  1D03               	btfss	3,2
  3228  0139  293B               	goto	u244_21
  3229  013A  293C               	goto	u244_20
  3230  013B                     u244_21:
  3231  013B  2A88               	goto	i1l2139
  3232  013C                     u244_20:
  3233  013C                     i1l2131:
  3234                           
  3235                           ;../gbs8/driver/scr/gbs8_stepper.c: 219:                 {;../gbs8/driver/scr/gbs8_stepp
      +                          er.c: 220:                     sBufferX->head = (sBufferX->head+1)%3;
  3236  013C  3003               	movlw	3
  3237  013D  00F0               	movwf	___awmod@divisor
  3238  013E  3000               	movlw	0
  3239  013F  00F1               	movwf	___awmod@divisor+1
  3240  0140  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3241  0141  3E4E               	addlw	78
  3242  0142  0084               	movwf	4
  3243  0143  0800               	movf	0,w
  3244  0144  3E01               	addlw	1
  3245  0145  00F2               	movwf	___awmod@dividend
  3246  0146  3000               	movlw	0
  3247  0147  1803               	skipnc
  3248  0148  3001               	movlw	1
  3249  0149  00F3               	movwf	___awmod@dividend+1
  3250  014A  120A  158A  229F  120A  118A  	fcall	___awmod
  3251  014F  0870               	movf	?___awmod,w
  3252  0150  00FF               	movwf	btemp+1
  3253  0151  1683               	bsf	3,5	;RP0=1, select bank1
  3254  0152  1303               	bcf	3,6	;RP1=0, select bank1
  3255  0153  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3256  0154  3E4E               	addlw	78
  3257  0155  0084               	movwf	4
  3258  0156  087F               	movf	btemp+1,w
  3259  0157  1783               	bsf	3,7	;select IRP bank2
  3260  0158  0080               	movwf	0
  3261                           
  3262                           ;../gbs8/driver/scr/gbs8_stepper.c: 221:                     sBufferX->buffer[sBufferX->
      +                          head].flag = 3;
  3263  0159  301A               	movlw	26
  3264  015A  00FF               	movwf	btemp+1
  3265  015B  087F               	movf	btemp+1,w
  3266  015C  00F6               	movwf	___bmul@multiplicand
  3267  015D  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3268  015E  3E4E               	addlw	78
  3269  015F  0084               	movwf	4
  3270  0160  0800               	movf	0,w
  3271  0161  120A  158A  207A  120A  118A  	fcall	___bmul
  3272  0166  1683               	bsf	3,5	;RP0=1, select bank1
  3273  0167  1303               	bcf	3,6	;RP1=0, select bank1
  3274  0168  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3275  0169  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3276  016A  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3277  016B  3E19               	addlw	25
  3278  016C  0084               	movwf	4
  3279  016D  3003               	movlw	3
  3280  016E  00FF               	movwf	btemp+1
  3281  016F  087F               	movf	btemp+1,w
  3282  0170  1783               	bsf	3,7	;select IRP bank2
  3283  0171  0080               	movwf	0
  3284  0172                     i1l2133:
  3285                           
  3286                           ;../gbs8/driver/scr/gbs8_stepper.c: 222:                     if (stepperX->state==0)
  3287  0172  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3288  0173  0084               	movwf	4
  3289  0174  0800               	movf	0,w
  3290  0175  1D03               	btfss	3,2
  3291  0176  2978               	goto	u245_21
  3292  0177  2979               	goto	u245_20
  3293  0178                     u245_21:
  3294  0178  2A8B               	goto	i1l2141
  3295  0179                     u245_20:
  3296  0179                     i1l2135:
  3297                           
  3298                           ;../gbs8/driver/scr/gbs8_stepper.c: 223:                     {;../gbs8/driver/scr/gbs8_s
      +                          tepper.c: 224:                         stepperX->cntsLast = 10000 / sqrt(((sBufferX->buf
      +                          fer[sBufferX->head].maxSpeed)*(sBufferX->buffer[sBufferX->head].maxSpeed)) + 2*sBufferX-
      +                          >buffer[sBufferX->head].acc);
  3299  0179  3046               	movlw	70
  3300  017A  1283               	bcf	3,5	;RP0=0, select bank0
  3301  017B  1303               	bcf	3,6	;RP1=0, select bank0
  3302  017C  00EB               	movwf	___fldiv@b+3
  3303  017D  301C               	movlw	28
  3304  017E  00EA               	movwf	___fldiv@b+2
  3305  017F  3040               	movlw	64
  3306  0180  00E9               	movwf	___fldiv@b+1
  3307  0181  3000               	movlw	0
  3308  0182  00E8               	movwf	___fldiv@b
  3309  0183  301A               	movlw	26
  3310  0184  00FF               	movwf	btemp+1
  3311  0185  087F               	movf	btemp+1,w
  3312  0186  00F6               	movwf	___bmul@multiplicand
  3313  0187  1683               	bsf	3,5	;RP0=1, select bank1
  3314  0188  1303               	bcf	3,6	;RP1=0, select bank1
  3315  0189  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3316  018A  3E4E               	addlw	78
  3317  018B  0084               	movwf	4
  3318  018C  0800               	movf	0,w
  3319  018D  120A  158A  207A  120A  118A  	fcall	___bmul
  3320  0192  1683               	bsf	3,5	;RP0=1, select bank1
  3321  0193  1303               	bcf	3,6	;RP1=0, select bank1
  3322  0194  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3323  0195  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3324  0196  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3325  0197  3E0D               	addlw	13
  3326  0198  0084               	movwf	4
  3327  0199  1783               	bsf	3,7	;select IRP bank2
  3328  019A  0800               	movf	0,w
  3329  019B  00B8               	movwf	(??_GBS_Stepper_Exe+1)^(0+128)
  3330  019C  0A84               	incf	4,f
  3331  019D  0800               	movf	0,w
  3332  019E  00B9               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+1)
  3333  019F  0A84               	incf	4,f
  3334  01A0  0800               	movf	0,w
  3335  01A1  00BA               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+2)
  3336  01A2  0A84               	incf	4,f
  3337  01A3  0800               	movf	0,w
  3338  01A4  00BB               	movwf	((??_GBS_Stepper_Exe+1)^(0+128)+3)
  3339  01A5  3001               	movlw	1
  3340  01A6                     u246_25:
  3341  01A6  1003               	clrc
  3342  01A7  0DB8               	rlf	(??_GBS_Stepper_Exe+1)^(0+128),f
  3343  01A8  0DB9               	rlf	((??_GBS_Stepper_Exe+1)^(0+128)+1),f
  3344  01A9  0DBA               	rlf	((??_GBS_Stepper_Exe+1)^(0+128)+2),f
  3345  01AA  0DBB               	rlf	((??_GBS_Stepper_Exe+1)^(0+128)+3),f
  3346  01AB                     u246_20:
  3347  01AB  3EFF               	addlw	-1
  3348  01AC  1D03               	skipz
  3349  01AD  29A6               	goto	u246_25
  3350  01AE  301A               	movlw	26
  3351  01AF  00FF               	movwf	btemp+1
  3352  01B0  087F               	movf	btemp+1,w
  3353  01B1  00F6               	movwf	___bmul@multiplicand
  3354  01B2  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3355  01B3  3E4E               	addlw	78
  3356  01B4  0084               	movwf	4
  3357  01B5  0800               	movf	0,w
  3358  01B6  120A  158A  207A  120A  118A  	fcall	___bmul
  3359  01BB  1683               	bsf	3,5	;RP0=1, select bank1
  3360  01BC  1303               	bcf	3,6	;RP1=0, select bank1
  3361  01BD  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3362  01BE  00BC               	movwf	(??_GBS_Stepper_Exe+5)^(0+128)
  3363  01BF  083C               	movf	(??_GBS_Stepper_Exe+5)^(0+128),w
  3364  01C0  3E15               	addlw	21
  3365  01C1  0084               	movwf	4
  3366  01C2  1783               	bsf	3,7	;select IRP bank2
  3367  01C3  0800               	movf	0,w
  3368  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  3369  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  3370  01C6  00B1               	movwf	___lmul@multiplicand
  3371  01C7  0A84               	incf	4,f
  3372  01C8  0800               	movf	0,w
  3373  01C9  00B2               	movwf	___lmul@multiplicand+1
  3374  01CA  0A84               	incf	4,f
  3375  01CB  0800               	movf	0,w
  3376  01CC  00B3               	movwf	___lmul@multiplicand+2
  3377  01CD  0A84               	incf	4,f
  3378  01CE  0800               	movf	0,w
  3379  01CF  00B4               	movwf	___lmul@multiplicand+3
  3380  01D0  301A               	movlw	26
  3381  01D1  00FF               	movwf	btemp+1
  3382  01D2  087F               	movf	btemp+1,w
  3383  01D3  00F6               	movwf	___bmul@multiplicand
  3384  01D4  1683               	bsf	3,5	;RP0=1, select bank1
  3385  01D5  1303               	bcf	3,6	;RP1=0, select bank1
  3386  01D6  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3387  01D7  3E4E               	addlw	78
  3388  01D8  0084               	movwf	4
  3389  01D9  0800               	movf	0,w
  3390  01DA  120A  158A  207A  120A  118A  	fcall	___bmul
  3391  01DF  1683               	bsf	3,5	;RP0=1, select bank1
  3392  01E0  1303               	bcf	3,6	;RP1=0, select bank1
  3393  01E1  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3394  01E2  00BD               	movwf	(??_GBS_Stepper_Exe+6)^(0+128)
  3395  01E3  083D               	movf	(??_GBS_Stepper_Exe+6)^(0+128),w
  3396  01E4  3E15               	addlw	21
  3397  01E5  0084               	movwf	4
  3398  01E6  1783               	bsf	3,7	;select IRP bank2
  3399  01E7  0800               	movf	0,w
  3400  01E8  1283               	bcf	3,5	;RP0=0, select bank0
  3401  01E9  1303               	bcf	3,6	;RP1=0, select bank0
  3402  01EA  00AD               	movwf	___lmul@multiplier
  3403  01EB  0A84               	incf	4,f
  3404  01EC  0800               	movf	0,w
  3405  01ED  00AE               	movwf	___lmul@multiplier+1
  3406  01EE  0A84               	incf	4,f
  3407  01EF  0800               	movf	0,w
  3408  01F0  00AF               	movwf	___lmul@multiplier+2
  3409  01F1  0A84               	incf	4,f
  3410  01F2  0800               	movf	0,w
  3411  01F3  00B0               	movwf	___lmul@multiplier+3
  3412  01F4  120A  158A  2205  120A  118A  	fcall	___lmul
  3413  01F9  1283               	bcf	3,5	;RP0=0, select bank0
  3414  01FA  1303               	bcf	3,6	;RP1=0, select bank0
  3415  01FB  082D               	movf	?___lmul,w
  3416  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  3417  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  3418  01FE  07B8               	addwf	(??_GBS_Stepper_Exe+1)^(0+128),f
  3419  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  3420  0200  1303               	bcf	3,6	;RP1=0, select bank0
  3421  0201  082E               	movf	?___lmul+1,w
  3422  0202  1803               	skipnc
  3423  0203  0F2E               	incfsz	?___lmul+1,w
  3424  0204  2A06               	goto	u247_20
  3425  0205  2A09               	goto	u247_21
  3426  0206                     u247_20:
  3427  0206  1683               	bsf	3,5	;RP0=1, select bank1
  3428  0207  1303               	bcf	3,6	;RP1=0, select bank1
  3429  0208  07B9               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+1),f
  3430  0209                     u247_21:
  3431  0209  1283               	bcf	3,5	;RP0=0, select bank0
  3432  020A  1303               	bcf	3,6	;RP1=0, select bank0
  3433  020B  082F               	movf	?___lmul+2,w
  3434  020C  1803               	skipnc
  3435  020D  0F2F               	incfsz	?___lmul+2,w
  3436  020E  2A10               	goto	u247_22
  3437  020F  2A13               	goto	u247_23
  3438  0210                     u247_22:
  3439  0210  1683               	bsf	3,5	;RP0=1, select bank1
  3440  0211  1303               	bcf	3,6	;RP1=0, select bank1
  3441  0212  07BA               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+2),f
  3442  0213                     u247_23:
  3443  0213  1283               	bcf	3,5	;RP0=0, select bank0
  3444  0214  1303               	bcf	3,6	;RP1=0, select bank0
  3445  0215  0830               	movf	?___lmul+3,w
  3446  0216  1803               	skipnc
  3447  0217  0A30               	incf	?___lmul+3,w
  3448  0218  1683               	bsf	3,5	;RP0=1, select bank1
  3449  0219  1303               	bcf	3,6	;RP1=0, select bank1
  3450  021A  07BB               	addwf	((??_GBS_Stepper_Exe+1)^(0+128)+3),f
  3451  021B  083B               	movf	(??_GBS_Stepper_Exe+4)^(0+128),w
  3452  021C  1283               	bcf	3,5	;RP0=0, select bank0
  3453  021D  1303               	bcf	3,6	;RP1=0, select bank0
  3454  021E  00BC               	movwf	___xxtofl@val+3
  3455  021F  1683               	bsf	3,5	;RP0=1, select bank1
  3456  0220  1303               	bcf	3,6	;RP1=0, select bank1
  3457  0221  083A               	movf	(??_GBS_Stepper_Exe+3)^(0+128),w
  3458  0222  1283               	bcf	3,5	;RP0=0, select bank0
  3459  0223  1303               	bcf	3,6	;RP1=0, select bank0
  3460  0224  00BB               	movwf	___xxtofl@val+2
  3461  0225  1683               	bsf	3,5	;RP0=1, select bank1
  3462  0226  1303               	bcf	3,6	;RP1=0, select bank1
  3463  0227  0839               	movf	(??_GBS_Stepper_Exe+2)^(0+128),w
  3464  0228  1283               	bcf	3,5	;RP0=0, select bank0
  3465  0229  1303               	bcf	3,6	;RP1=0, select bank0
  3466  022A  00BA               	movwf	___xxtofl@val+1
  3467  022B  1683               	bsf	3,5	;RP0=1, select bank1
  3468  022C  1303               	bcf	3,6	;RP1=0, select bank1
  3469  022D  0838               	movf	(??_GBS_Stepper_Exe+1)^(0+128),w
  3470  022E  1283               	bcf	3,5	;RP0=0, select bank0
  3471  022F  1303               	bcf	3,6	;RP1=0, select bank0
  3472  0230  00B9               	movwf	___xxtofl@val
  3473  0231  3000               	movlw	0
  3474  0232  120A  118A  263D  120A  118A  	fcall	___xxtofl
  3475  0237  1283               	bcf	3,5	;RP0=0, select bank0
  3476  0238  1303               	bcf	3,6	;RP1=0, select bank0
  3477  0239  083C               	movf	?___xxtofl+3,w
  3478  023A  00CA               	movwf	sqrt@a+3
  3479  023B  083B               	movf	?___xxtofl+2,w
  3480  023C  00C9               	movwf	sqrt@a+2
  3481  023D  083A               	movf	?___xxtofl+1,w
  3482  023E  00C8               	movwf	sqrt@a+1
  3483  023F  0839               	movf	?___xxtofl,w
  3484  0240  00C7               	movwf	sqrt@a
  3485  0241  120A  158A  238B  120A  118A  	fcall	_sqrt
  3486  0246  1283               	bcf	3,5	;RP0=0, select bank0
  3487  0247  1303               	bcf	3,6	;RP1=0, select bank0
  3488  0248  084A               	movf	?_sqrt+3,w
  3489  0249  00E7               	movwf	___fldiv@a+3
  3490  024A  0849               	movf	?_sqrt+2,w
  3491  024B  00E6               	movwf	___fldiv@a+2
  3492  024C  0848               	movf	?_sqrt+1,w
  3493  024D  00E5               	movwf	___fldiv@a+1
  3494  024E  0847               	movf	?_sqrt,w
  3495  024F  00E4               	movwf	___fldiv@a
  3496  0250  120A  158A  256B  120A  118A  	fcall	___fldiv
  3497  0255  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0256  1303               	bcf	3,6	;RP1=0, select bank0
  3499  0257  0867               	movf	?___fldiv+3,w
  3500  0258  1683               	bsf	3,5	;RP0=1, select bank1
  3501  0259  1303               	bcf	3,6	;RP1=0, select bank1
  3502  025A  00B5               	movwf	(___fltol@f1+3)^(0+128)
  3503  025B  1283               	bcf	3,5	;RP0=0, select bank0
  3504  025C  1303               	bcf	3,6	;RP1=0, select bank0
  3505  025D  0866               	movf	?___fldiv+2,w
  3506  025E  1683               	bsf	3,5	;RP0=1, select bank1
  3507  025F  1303               	bcf	3,6	;RP1=0, select bank1
  3508  0260  00B4               	movwf	(___fltol@f1+2)^(0+128)
  3509  0261  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0262  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0263  0865               	movf	?___fldiv+1,w
  3512  0264  1683               	bsf	3,5	;RP0=1, select bank1
  3513  0265  1303               	bcf	3,6	;RP1=0, select bank1
  3514  0266  00B3               	movwf	(___fltol@f1+1)^(0+128)
  3515  0267  1283               	bcf	3,5	;RP0=0, select bank0
  3516  0268  1303               	bcf	3,6	;RP1=0, select bank0
  3517  0269  0864               	movf	?___fldiv,w
  3518  026A  1683               	bsf	3,5	;RP0=1, select bank1
  3519  026B  1303               	bcf	3,6	;RP1=0, select bank1
  3520  026C  00B2               	movwf	___fltol@f1^(0+128)
  3521  026D  120A  158A  22F8  120A  118A  	fcall	___fltol
  3522  0272  1683               	bsf	3,5	;RP0=1, select bank1
  3523  0273  1303               	bcf	3,6	;RP1=0, select bank1
  3524  0274  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3525  0275  3E07               	addlw	7
  3526  0276  0084               	movwf	4
  3527  0277  0832               	movf	?___fltol^(0+128),w
  3528  0278  1783               	bsf	3,7	;select IRP bank2
  3529  0279  0080               	movwf	0
  3530  027A  0A84               	incf	4,f
  3531  027B  0833               	movf	(?___fltol+1)^(0+128),w
  3532  027C  0080               	movwf	0
  3533  027D  0A84               	incf	4,f
  3534  027E  0834               	movf	(?___fltol+2)^(0+128),w
  3535  027F  0080               	movwf	0
  3536  0280  0A84               	incf	4,f
  3537  0281  0835               	movf	(?___fltol+3)^(0+128),w
  3538  0282  0080               	movwf	0
  3539  0283                     i1l2137:
  3540                           
  3541                           ;../gbs8/driver/scr/gbs8_stepper.c: 225:                         stepperX->state = 1;
  3542  0283  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3543  0284  0084               	movwf	4
  3544  0285  0180               	clrf	0
  3545  0286  0A80               	incf	0,f
  3546  0287  2A8B               	goto	i1l2141
  3547  0288                     i1l2139:
  3548                           
  3549                           ;../gbs8/driver/scr/gbs8_stepper.c: 229:                 {;../gbs8/driver/scr/gbs8_stepp
      +                          er.c: 230:                     stepperX->state = 0;
  3550  0288  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3551  0289  0084               	movwf	4
  3552  028A  0180               	clrf	0
  3553  028B                     i1l2141:
  3554                           
  3555                           ;../gbs8/driver/scr/gbs8_stepper.c: 236:             {;../gbs8/driver/scr/gbs8_stepper.c
      +                          : 237:                 if (sBufferX->buffer[sBufferX->head].acc_until>=0)
  3556  028B  301A               	movlw	26
  3557  028C  00FF               	movwf	btemp+1
  3558  028D  087F               	movf	btemp+1,w
  3559  028E  00F6               	movwf	___bmul@multiplicand
  3560  028F  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3561  0290  3E4E               	addlw	78
  3562  0291  0084               	movwf	4
  3563  0292  0800               	movf	0,w
  3564  0293  120A  158A  207A  120A  118A  	fcall	___bmul
  3565  0298  1683               	bsf	3,5	;RP0=1, select bank1
  3566  0299  1303               	bcf	3,6	;RP1=0, select bank1
  3567  029A  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3568  029B  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3569  029C  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3570  029D  3E19               	addlw	25
  3571  029E  0084               	movwf	4
  3572  029F  3003               	movlw	3
  3573  02A0  1783               	bsf	3,7	;select IRP bank2
  3574  02A1  0600               	xorwf	0,w
  3575  02A2  1D03               	btfss	3,2
  3576  02A3  2AA5               	goto	u248_21
  3577  02A4  2AA6               	goto	u248_20
  3578  02A5                     u248_21:
  3579  02A5  2E3C               	goto	i1l202
  3580  02A6                     u248_20:
  3581  02A6                     i1l2143:
  3582                           
  3583                           ;../gbs8/driver/scr/gbs8_stepper.c: 238:                 {;../gbs8/driver/scr/gbs8_stepp
      +                          er.c: 239:                     stepperX->pinState = 1;
  3584  02A6  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3585  02A7  3E0B               	addlw	11
  3586  02A8  0084               	movwf	4
  3587  02A9  0180               	clrf	0
  3588  02AA  0A80               	incf	0,f
  3589  02AB                     i1l2145:
  3590                           
  3591                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  3592  02AB  30FF               	movlw	255
  3593  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3594  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3595  02AE  00A3               	movwf	___lldiv@divisor+3
  3596  02AF  30FF               	movlw	255
  3597  02B0  00A2               	movwf	___lldiv@divisor+2
  3598  02B1  30E1               	movlw	225
  3599  02B2  00A1               	movwf	___lldiv@divisor+1
  3600  02B3  3000               	movlw	0
  3601  02B4  00A0               	movwf	___lldiv@divisor
  3602  02B5  301A               	movlw	26
  3603  02B6  00FF               	movwf	btemp+1
  3604  02B7  087F               	movf	btemp+1,w
  3605  02B8  00F6               	movwf	___bmul@multiplicand
  3606  02B9  1683               	bsf	3,5	;RP0=1, select bank1
  3607  02BA  1303               	bcf	3,6	;RP1=0, select bank1
  3608  02BB  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3609  02BC  3E4E               	addlw	78
  3610  02BD  0084               	movwf	4
  3611  02BE  0800               	movf	0,w
  3612  02BF  120A  158A  207A  120A  118A  	fcall	___bmul
  3613  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  3614  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  3615  02C6  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3616  02C7  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  3617  02C8  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  3618  02C9  3E0D               	addlw	13
  3619  02CA  0084               	movwf	4
  3620  02CB  1783               	bsf	3,7	;select IRP bank2
  3621  02CC  0800               	movf	0,w
  3622  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  3623  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  3624  02CF  00A4               	movwf	___lldiv@dividend
  3625  02D0  0A84               	incf	4,f
  3626  02D1  0800               	movf	0,w
  3627  02D2  00A5               	movwf	___lldiv@dividend+1
  3628  02D3  0A84               	incf	4,f
  3629  02D4  0800               	movf	0,w
  3630  02D5  00A6               	movwf	___lldiv@dividend+2
  3631  02D6  0A84               	incf	4,f
  3632  02D7  0800               	movf	0,w
  3633  02D8  00A7               	movwf	___lldiv@dividend+3
  3634  02D9  120A  118A  2796  120A  118A  	fcall	___lldiv
  3635  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  3636  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  3637  02E0  0823               	movf	?___lldiv+3,w
  3638  02E1  00B0               	movwf	___lmul@multiplier+3
  3639  02E2  0822               	movf	?___lldiv+2,w
  3640  02E3  00AF               	movwf	___lmul@multiplier+2
  3641  02E4  0821               	movf	?___lldiv+1,w
  3642  02E5  00AE               	movwf	___lmul@multiplier+1
  3643  02E6  0820               	movf	?___lldiv,w
  3644  02E7  00AD               	movwf	___lmul@multiplier
  3645  02E8  30FF               	movlw	255
  3646  02E9  00A3               	movwf	___lldiv@divisor+3
  3647  02EA  30FF               	movlw	255
  3648  02EB  00A2               	movwf	___lldiv@divisor+2
  3649  02EC  30E1               	movlw	225
  3650  02ED  00A1               	movwf	___lldiv@divisor+1
  3651  02EE  3000               	movlw	0
  3652  02EF  00A0               	movwf	___lldiv@divisor
  3653  02F0  301A               	movlw	26
  3654  02F1  00FF               	movwf	btemp+1
  3655  02F2  087F               	movf	btemp+1,w
  3656  02F3  00F6               	movwf	___bmul@multiplicand
  3657  02F4  1683               	bsf	3,5	;RP0=1, select bank1
  3658  02F5  1303               	bcf	3,6	;RP1=0, select bank1
  3659  02F6  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3660  02F7  3E4E               	addlw	78
  3661  02F8  0084               	movwf	4
  3662  02F9  1783               	bsf	3,7	;select IRP bank2
  3663  02FA  0800               	movf	0,w
  3664  02FB  120A  158A  207A  120A  118A  	fcall	___bmul
  3665  0300  1683               	bsf	3,5	;RP0=1, select bank1
  3666  0301  1303               	bcf	3,6	;RP1=0, select bank1
  3667  0302  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  3668  0303  00B8               	movwf	(??_GBS_Stepper_Exe+1)^(0+128)
  3669  0304  0838               	movf	(??_GBS_Stepper_Exe+1)^(0+128),w
  3670  0305  3E0D               	addlw	13
  3671  0306  0084               	movwf	4
  3672  0307  1783               	bsf	3,7	;select IRP bank2
  3673  0308  0800               	movf	0,w
  3674  0309  1283               	bcf	3,5	;RP0=0, select bank0
  3675  030A  1303               	bcf	3,6	;RP1=0, select bank0
  3676  030B  00A4               	movwf	___lldiv@dividend
  3677  030C  0A84               	incf	4,f
  3678  030D  0800               	movf	0,w
  3679  030E  00A5               	movwf	___lldiv@dividend+1
  3680  030F  0A84               	incf	4,f
  3681  0310  0800               	movf	0,w
  3682  0311  00A6               	movwf	___lldiv@dividend+2
  3683  0312  0A84               	incf	4,f
  3684  0313  0800               	movf	0,w
  3685  0314  00A7               	movwf	___lldiv@dividend+3
  3686  0315  120A  118A  2796  120A  118A  	fcall	___lldiv
  3687  031A  1283               	bcf	3,5	;RP0=0, select bank0
  3688  031B  1303               	bcf	3,6	;RP1=0, select bank0
  3689  031C  0823               	movf	?___lldiv+3,w
  3690  031D  00B4               	movwf	___lmul@multiplicand+3
  3691  031E  0822               	movf	?___lldiv+2,w
  3692  031F  00B3               	movwf	___lmul@multiplicand+2
  3693  0320  0821               	movf	?___lldiv+1,w
  3694  0321  00B2               	movwf	___lmul@multiplicand+1
  3695  0322  0820               	movf	?___lldiv,w
  3696  0323  00B1               	movwf	___lmul@multiplicand
  3697  0324  120A  158A  2205  120A  118A  	fcall	___lmul
  3698  0329  1283               	bcf	3,5	;RP0=0, select bank0
  3699  032A  1303               	bcf	3,6	;RP1=0, select bank0
  3700  032B  0830               	movf	?___lmul+3,w
  3701  032C  1683               	bsf	3,5	;RP0=1, select bank1
  3702  032D  1303               	bcf	3,6	;RP1=0, select bank1
  3703  032E  00C9               	movwf	(_GBS_Stepper_Exe$1640+3)^(0+128)
  3704  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0331  082F               	movf	?___lmul+2,w
  3707  0332  1683               	bsf	3,5	;RP0=1, select bank1
  3708  0333  1303               	bcf	3,6	;RP1=0, select bank1
  3709  0334  00C8               	movwf	(_GBS_Stepper_Exe$1640+2)^(0+128)
  3710  0335  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0336  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0337  082E               	movf	?___lmul+1,w
  3713  0338  1683               	bsf	3,5	;RP0=1, select bank1
  3714  0339  1303               	bcf	3,6	;RP1=0, select bank1
  3715  033A  00C7               	movwf	(_GBS_Stepper_Exe$1640+1)^(0+128)
  3716  033B  1283               	bcf	3,5	;RP0=0, select bank0
  3717  033C  1303               	bcf	3,6	;RP1=0, select bank0
  3718  033D  082D               	movf	?___lmul,w
  3719  033E  1683               	bsf	3,5	;RP0=1, select bank1
  3720  033F  1303               	bcf	3,6	;RP1=0, select bank1
  3721  0340  00C6               	movwf	_GBS_Stepper_Exe$1640^(0+128)
  3722  0341                     i1l2147:
  3723                           
  3724                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  3725  0341  0849               	movf	(_GBS_Stepper_Exe$1640+3)^(0+128),w
  3726  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3727  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3728  0344  00B0               	movwf	___lmul@multiplier+3
  3729  0345  1683               	bsf	3,5	;RP0=1, select bank1
  3730  0346  1303               	bcf	3,6	;RP1=0, select bank1
  3731  0347  0848               	movf	(_GBS_Stepper_Exe$1640+2)^(0+128),w
  3732  0348  1283               	bcf	3,5	;RP0=0, select bank0
  3733  0349  1303               	bcf	3,6	;RP1=0, select bank0
  3734  034A  00AF               	movwf	___lmul@multiplier+2
  3735  034B  1683               	bsf	3,5	;RP0=1, select bank1
  3736  034C  1303               	bcf	3,6	;RP1=0, select bank1
  3737  034D  0847               	movf	(_GBS_Stepper_Exe$1640+1)^(0+128),w
  3738  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3739  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3740  0350  00AE               	movwf	___lmul@multiplier+1
  3741  0351  1683               	bsf	3,5	;RP0=1, select bank1
  3742  0352  1303               	bcf	3,6	;RP1=0, select bank1
  3743  0353  0846               	movf	_GBS_Stepper_Exe$1640^(0+128),w
  3744  0354  1283               	bcf	3,5	;RP0=0, select bank0
  3745  0355  1303               	bcf	3,6	;RP1=0, select bank0
  3746  0356  00AD               	movwf	___lmul@multiplier
  3747  0357  1683               	bsf	3,5	;RP0=1, select bank1
  3748  0358  1303               	bcf	3,6	;RP1=0, select bank1
  3749  0359  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3750  035A  3E07               	addlw	7
  3751  035B  0084               	movwf	4
  3752  035C  1783               	bsf	3,7	;select IRP bank2
  3753  035D  0800               	movf	0,w
  3754  035E  1283               	bcf	3,5	;RP0=0, select bank0
  3755  035F  1303               	bcf	3,6	;RP1=0, select bank0
  3756  0360  00B1               	movwf	___lmul@multiplicand
  3757  0361  0A84               	incf	4,f
  3758  0362  0800               	movf	0,w
  3759  0363  00B2               	movwf	___lmul@multiplicand+1
  3760  0364  0A84               	incf	4,f
  3761  0365  0800               	movf	0,w
  3762  0366  00B3               	movwf	___lmul@multiplicand+2
  3763  0367  0A84               	incf	4,f
  3764  0368  0800               	movf	0,w
  3765  0369  00B4               	movwf	___lmul@multiplicand+3
  3766  036A  120A  158A  2205  120A  118A  	fcall	___lmul
  3767  036F  1283               	bcf	3,5	;RP0=0, select bank0
  3768  0370  1303               	bcf	3,6	;RP1=0, select bank0
  3769  0371  0830               	movf	?___lmul+3,w
  3770  0372  1683               	bsf	3,5	;RP0=1, select bank1
  3771  0373  1303               	bcf	3,6	;RP1=0, select bank1
  3772  0374  00CD               	movwf	(_GBS_Stepper_Exe$1641+3)^(0+128)
  3773  0375  1283               	bcf	3,5	;RP0=0, select bank0
  3774  0376  1303               	bcf	3,6	;RP1=0, select bank0
  3775  0377  082F               	movf	?___lmul+2,w
  3776  0378  1683               	bsf	3,5	;RP0=1, select bank1
  3777  0379  1303               	bcf	3,6	;RP1=0, select bank1
  3778  037A  00CC               	movwf	(_GBS_Stepper_Exe$1641+2)^(0+128)
  3779  037B  1283               	bcf	3,5	;RP0=0, select bank0
  3780  037C  1303               	bcf	3,6	;RP1=0, select bank0
  3781  037D  082E               	movf	?___lmul+1,w
  3782  037E  1683               	bsf	3,5	;RP0=1, select bank1
  3783  037F  1303               	bcf	3,6	;RP1=0, select bank1
  3784  0380  00CB               	movwf	(_GBS_Stepper_Exe$1641+1)^(0+128)
  3785  0381  1283               	bcf	3,5	;RP0=0, select bank0
  3786  0382  1303               	bcf	3,6	;RP1=0, select bank0
  3787  0383  082D               	movf	?___lmul,w
  3788  0384  1683               	bsf	3,5	;RP0=1, select bank1
  3789  0385  1303               	bcf	3,6	;RP1=0, select bank1
  3790  0386  00CA               	movwf	_GBS_Stepper_Exe$1641^(0+128)
  3791  0387                     i1l2149:
  3792                           
  3793                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  3794  0387  084D               	movf	(_GBS_Stepper_Exe$1641+3)^(0+128),w
  3795  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3796  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3797  038A  00B0               	movwf	___lmul@multiplier+3
  3798  038B  1683               	bsf	3,5	;RP0=1, select bank1
  3799  038C  1303               	bcf	3,6	;RP1=0, select bank1
  3800  038D  084C               	movf	(_GBS_Stepper_Exe$1641+2)^(0+128),w
  3801  038E  1283               	bcf	3,5	;RP0=0, select bank0
  3802  038F  1303               	bcf	3,6	;RP1=0, select bank0
  3803  0390  00AF               	movwf	___lmul@multiplier+2
  3804  0391  1683               	bsf	3,5	;RP0=1, select bank1
  3805  0392  1303               	bcf	3,6	;RP1=0, select bank1
  3806  0393  084B               	movf	(_GBS_Stepper_Exe$1641+1)^(0+128),w
  3807  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3808  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3809  0396  00AE               	movwf	___lmul@multiplier+1
  3810  0397  1683               	bsf	3,5	;RP0=1, select bank1
  3811  0398  1303               	bcf	3,6	;RP1=0, select bank1
  3812  0399  084A               	movf	_GBS_Stepper_Exe$1641^(0+128),w
  3813  039A  1283               	bcf	3,5	;RP0=0, select bank0
  3814  039B  1303               	bcf	3,6	;RP1=0, select bank0
  3815  039C  00AD               	movwf	___lmul@multiplier
  3816  039D  1683               	bsf	3,5	;RP0=1, select bank1
  3817  039E  1303               	bcf	3,6	;RP1=0, select bank1
  3818  039F  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3819  03A0  3E07               	addlw	7
  3820  03A1  0084               	movwf	4
  3821  03A2  1783               	bsf	3,7	;select IRP bank2
  3822  03A3  0800               	movf	0,w
  3823  03A4  1283               	bcf	3,5	;RP0=0, select bank0
  3824  03A5  1303               	bcf	3,6	;RP1=0, select bank0
  3825  03A6  00B1               	movwf	___lmul@multiplicand
  3826  03A7  0A84               	incf	4,f
  3827  03A8  0800               	movf	0,w
  3828  03A9  00B2               	movwf	___lmul@multiplicand+1
  3829  03AA  0A84               	incf	4,f
  3830  03AB  0800               	movf	0,w
  3831  03AC  00B3               	movwf	___lmul@multiplicand+2
  3832  03AD  0A84               	incf	4,f
  3833  03AE  0800               	movf	0,w
  3834  03AF  00B4               	movwf	___lmul@multiplicand+3
  3835  03B0  120A  158A  2205  120A  118A  	fcall	___lmul
  3836  03B5  1283               	bcf	3,5	;RP0=0, select bank0
  3837  03B6  1303               	bcf	3,6	;RP1=0, select bank0
  3838  03B7  0830               	movf	?___lmul+3,w
  3839  03B8  1683               	bsf	3,5	;RP0=1, select bank1
  3840  03B9  1303               	bcf	3,6	;RP1=0, select bank1
  3841  03BA  00D1               	movwf	(_GBS_Stepper_Exe$1642+3)^(0+128)
  3842  03BB  1283               	bcf	3,5	;RP0=0, select bank0
  3843  03BC  1303               	bcf	3,6	;RP1=0, select bank0
  3844  03BD  082F               	movf	?___lmul+2,w
  3845  03BE  1683               	bsf	3,5	;RP0=1, select bank1
  3846  03BF  1303               	bcf	3,6	;RP1=0, select bank1
  3847  03C0  00D0               	movwf	(_GBS_Stepper_Exe$1642+2)^(0+128)
  3848  03C1  1283               	bcf	3,5	;RP0=0, select bank0
  3849  03C2  1303               	bcf	3,6	;RP1=0, select bank0
  3850  03C3  082E               	movf	?___lmul+1,w
  3851  03C4  1683               	bsf	3,5	;RP0=1, select bank1
  3852  03C5  1303               	bcf	3,6	;RP1=0, select bank1
  3853  03C6  00CF               	movwf	(_GBS_Stepper_Exe$1642+1)^(0+128)
  3854  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  3855  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  3856  03C9  082D               	movf	?___lmul,w
  3857  03CA  1683               	bsf	3,5	;RP0=1, select bank1
  3858  03CB  1303               	bcf	3,6	;RP1=0, select bank1
  3859  03CC  00CE               	movwf	_GBS_Stepper_Exe$1642^(0+128)
  3860  03CD                     i1l2151:
  3861                           
  3862                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  3863  03CD  0851               	movf	(_GBS_Stepper_Exe$1642+3)^(0+128),w
  3864  03CE  1283               	bcf	3,5	;RP0=0, select bank0
  3865  03CF  1303               	bcf	3,6	;RP1=0, select bank0
  3866  03D0  00B0               	movwf	___lmul@multiplier+3
  3867  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  3868  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  3869  03D3  0850               	movf	(_GBS_Stepper_Exe$1642+2)^(0+128),w
  3870  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  3871  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  3872  03D6  00AF               	movwf	___lmul@multiplier+2
  3873  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  3874  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  3875  03D9  084F               	movf	(_GBS_Stepper_Exe$1642+1)^(0+128),w
  3876  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  3877  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  3878  03DC  00AE               	movwf	___lmul@multiplier+1
  3879  03DD  1683               	bsf	3,5	;RP0=1, select bank1
  3880  03DE  1303               	bcf	3,6	;RP1=0, select bank1
  3881  03DF  084E               	movf	_GBS_Stepper_Exe$1642^(0+128),w
  3882  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  3883  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  3884  03E2  00AD               	movwf	___lmul@multiplier
  3885  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  3886  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  3887  03E5  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3888  03E6  3E07               	addlw	7
  3889  03E7  0084               	movwf	4
  3890  03E8  1783               	bsf	3,7	;select IRP bank2
  3891  03E9  0800               	movf	0,w
  3892  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3893  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3894  03EC  00B1               	movwf	___lmul@multiplicand
  3895  03ED  0A84               	incf	4,f
  3896  03EE  0800               	movf	0,w
  3897  03EF  00B2               	movwf	___lmul@multiplicand+1
  3898  03F0  0A84               	incf	4,f
  3899  03F1  0800               	movf	0,w
  3900  03F2  00B3               	movwf	___lmul@multiplicand+2
  3901  03F3  0A84               	incf	4,f
  3902  03F4  0800               	movf	0,w
  3903  03F5  00B4               	movwf	___lmul@multiplicand+3
  3904  03F6  120A  158A  2205  120A  118A  	fcall	___lmul
  3905  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3906  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3907  03FD  0830               	movf	?___lmul+3,w
  3908  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  3909  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  3910  0400  00D5               	movwf	(_GBS_Stepper_Exe$1643+3)^(0+128)
  3911  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3912  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3913  0403  082F               	movf	?___lmul+2,w
  3914  0404  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0405  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0406  00D4               	movwf	(_GBS_Stepper_Exe$1643+2)^(0+128)
  3917  0407  1283               	bcf	3,5	;RP0=0, select bank0
  3918  0408  1303               	bcf	3,6	;RP1=0, select bank0
  3919  0409  082E               	movf	?___lmul+1,w
  3920  040A  1683               	bsf	3,5	;RP0=1, select bank1
  3921  040B  1303               	bcf	3,6	;RP1=0, select bank1
  3922  040C  00D3               	movwf	(_GBS_Stepper_Exe$1643+1)^(0+128)
  3923  040D  1283               	bcf	3,5	;RP0=0, select bank0
  3924  040E  1303               	bcf	3,6	;RP1=0, select bank0
  3925  040F  082D               	movf	?___lmul,w
  3926  0410  1683               	bsf	3,5	;RP0=1, select bank1
  3927  0411  1303               	bcf	3,6	;RP1=0, select bank1
  3928  0412  00D2               	movwf	_GBS_Stepper_Exe$1643^(0+128)
  3929  0413                     i1l2153:
  3930                           
  3931                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  3932  0413  0855               	movf	(_GBS_Stepper_Exe$1643+3)^(0+128),w
  3933  0414  1283               	bcf	3,5	;RP0=0, select bank0
  3934  0415  1303               	bcf	3,6	;RP1=0, select bank0
  3935  0416  00B0               	movwf	___lmul@multiplier+3
  3936  0417  1683               	bsf	3,5	;RP0=1, select bank1
  3937  0418  1303               	bcf	3,6	;RP1=0, select bank1
  3938  0419  0854               	movf	(_GBS_Stepper_Exe$1643+2)^(0+128),w
  3939  041A  1283               	bcf	3,5	;RP0=0, select bank0
  3940  041B  1303               	bcf	3,6	;RP1=0, select bank0
  3941  041C  00AF               	movwf	___lmul@multiplier+2
  3942  041D  1683               	bsf	3,5	;RP0=1, select bank1
  3943  041E  1303               	bcf	3,6	;RP1=0, select bank1
  3944  041F  0853               	movf	(_GBS_Stepper_Exe$1643+1)^(0+128),w
  3945  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3946  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3947  0422  00AE               	movwf	___lmul@multiplier+1
  3948  0423  1683               	bsf	3,5	;RP0=1, select bank1
  3949  0424  1303               	bcf	3,6	;RP1=0, select bank1
  3950  0425  0852               	movf	_GBS_Stepper_Exe$1643^(0+128),w
  3951  0426  1283               	bcf	3,5	;RP0=0, select bank0
  3952  0427  1303               	bcf	3,6	;RP1=0, select bank0
  3953  0428  00AD               	movwf	___lmul@multiplier
  3954  0429  1683               	bsf	3,5	;RP0=1, select bank1
  3955  042A  1303               	bcf	3,6	;RP1=0, select bank1
  3956  042B  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  3957  042C  3E07               	addlw	7
  3958  042D  0084               	movwf	4
  3959  042E  1783               	bsf	3,7	;select IRP bank2
  3960  042F  0800               	movf	0,w
  3961  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3962  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3963  0432  00B1               	movwf	___lmul@multiplicand
  3964  0433  0A84               	incf	4,f
  3965  0434  0800               	movf	0,w
  3966  0435  00B2               	movwf	___lmul@multiplicand+1
  3967  0436  0A84               	incf	4,f
  3968  0437  0800               	movf	0,w
  3969  0438  00B3               	movwf	___lmul@multiplicand+2
  3970  0439  0A84               	incf	4,f
  3971  043A  0800               	movf	0,w
  3972  043B  00B4               	movwf	___lmul@multiplicand+3
  3973  043C  120A  158A  2205  120A  118A  	fcall	___lmul
  3974  0441  1283               	bcf	3,5	;RP0=0, select bank0
  3975  0442  1303               	bcf	3,6	;RP1=0, select bank0
  3976  0443  0830               	movf	?___lmul+3,w
  3977  0444  1683               	bsf	3,5	;RP0=1, select bank1
  3978  0445  1303               	bcf	3,6	;RP1=0, select bank1
  3979  0446  00D9               	movwf	(_GBS_Stepper_Exe$1644+3)^(0+128)
  3980  0447  1283               	bcf	3,5	;RP0=0, select bank0
  3981  0448  1303               	bcf	3,6	;RP1=0, select bank0
  3982  0449  082F               	movf	?___lmul+2,w
  3983  044A  1683               	bsf	3,5	;RP0=1, select bank1
  3984  044B  1303               	bcf	3,6	;RP1=0, select bank1
  3985  044C  00D8               	movwf	(_GBS_Stepper_Exe$1644+2)^(0+128)
  3986  044D  1283               	bcf	3,5	;RP0=0, select bank0
  3987  044E  1303               	bcf	3,6	;RP1=0, select bank0
  3988  044F  082E               	movf	?___lmul+1,w
  3989  0450  1683               	bsf	3,5	;RP0=1, select bank1
  3990  0451  1303               	bcf	3,6	;RP1=0, select bank1
  3991  0452  00D7               	movwf	(_GBS_Stepper_Exe$1644+1)^(0+128)
  3992  0453  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0454  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0455  082D               	movf	?___lmul,w
  3995  0456  1683               	bsf	3,5	;RP0=1, select bank1
  3996  0457  1303               	bcf	3,6	;RP1=0, select bank1
  3997  0458  00D6               	movwf	_GBS_Stepper_Exe$1644^(0+128)
  3998  0459                     i1l2155:
  3999                           
  4000                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  4001  0459  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4002  045A  3E07               	addlw	7
  4003  045B  0084               	movwf	4
  4004  045C  1783               	bsf	3,7	;select IRP bank2
  4005  045D  0800               	movf	0,w
  4006  045E  1283               	bcf	3,5	;RP0=0, select bank0
  4007  045F  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0460  00AD               	movwf	___lmul@multiplier
  4009  0461  0A84               	incf	4,f
  4010  0462  0800               	movf	0,w
  4011  0463  00AE               	movwf	___lmul@multiplier+1
  4012  0464  0A84               	incf	4,f
  4013  0465  0800               	movf	0,w
  4014  0466  00AF               	movwf	___lmul@multiplier+2
  4015  0467  0A84               	incf	4,f
  4016  0468  0800               	movf	0,w
  4017  0469  00B0               	movwf	___lmul@multiplier+3
  4018  046A  1683               	bsf	3,5	;RP0=1, select bank1
  4019  046B  1303               	bcf	3,6	;RP1=0, select bank1
  4020  046C  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4021  046D  3E07               	addlw	7
  4022  046E  0084               	movwf	4
  4023  046F  0800               	movf	0,w
  4024  0470  1283               	bcf	3,5	;RP0=0, select bank0
  4025  0471  1303               	bcf	3,6	;RP1=0, select bank0
  4026  0472  00B1               	movwf	___lmul@multiplicand
  4027  0473  0A84               	incf	4,f
  4028  0474  0800               	movf	0,w
  4029  0475  00B2               	movwf	___lmul@multiplicand+1
  4030  0476  0A84               	incf	4,f
  4031  0477  0800               	movf	0,w
  4032  0478  00B3               	movwf	___lmul@multiplicand+2
  4033  0479  0A84               	incf	4,f
  4034  047A  0800               	movf	0,w
  4035  047B  00B4               	movwf	___lmul@multiplicand+3
  4036  047C  120A  158A  2205  120A  118A  	fcall	___lmul
  4037  0481  1283               	bcf	3,5	;RP0=0, select bank0
  4038  0482  1303               	bcf	3,6	;RP1=0, select bank0
  4039  0483  0830               	movf	?___lmul+3,w
  4040  0484  1683               	bsf	3,5	;RP0=1, select bank1
  4041  0485  1303               	bcf	3,6	;RP1=0, select bank1
  4042  0486  00DD               	movwf	(_GBS_Stepper_Exe$1645+3)^(0+128)
  4043  0487  1283               	bcf	3,5	;RP0=0, select bank0
  4044  0488  1303               	bcf	3,6	;RP1=0, select bank0
  4045  0489  082F               	movf	?___lmul+2,w
  4046  048A  1683               	bsf	3,5	;RP0=1, select bank1
  4047  048B  1303               	bcf	3,6	;RP1=0, select bank1
  4048  048C  00DC               	movwf	(_GBS_Stepper_Exe$1645+2)^(0+128)
  4049  048D  1283               	bcf	3,5	;RP0=0, select bank0
  4050  048E  1303               	bcf	3,6	;RP1=0, select bank0
  4051  048F  082E               	movf	?___lmul+1,w
  4052  0490  1683               	bsf	3,5	;RP0=1, select bank1
  4053  0491  1303               	bcf	3,6	;RP1=0, select bank1
  4054  0492  00DB               	movwf	(_GBS_Stepper_Exe$1645+1)^(0+128)
  4055  0493  1283               	bcf	3,5	;RP0=0, select bank0
  4056  0494  1303               	bcf	3,6	;RP1=0, select bank0
  4057  0495  082D               	movf	?___lmul,w
  4058  0496  1683               	bsf	3,5	;RP0=1, select bank1
  4059  0497  1303               	bcf	3,6	;RP1=0, select bank1
  4060  0498  00DA               	movwf	_GBS_Stepper_Exe$1645^(0+128)
  4061  0499                     i1l2157:
  4062                           
  4063                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  4064  0499  085D               	movf	(_GBS_Stepper_Exe$1645+3)^(0+128),w
  4065  049A  1283               	bcf	3,5	;RP0=0, select bank0
  4066  049B  1303               	bcf	3,6	;RP1=0, select bank0
  4067  049C  00B0               	movwf	___lmul@multiplier+3
  4068  049D  1683               	bsf	3,5	;RP0=1, select bank1
  4069  049E  1303               	bcf	3,6	;RP1=0, select bank1
  4070  049F  085C               	movf	(_GBS_Stepper_Exe$1645+2)^(0+128),w
  4071  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  4072  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  4073  04A2  00AF               	movwf	___lmul@multiplier+2
  4074  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  4075  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  4076  04A5  085B               	movf	(_GBS_Stepper_Exe$1645+1)^(0+128),w
  4077  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  4078  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  4079  04A8  00AE               	movwf	___lmul@multiplier+1
  4080  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  4081  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  4082  04AB  085A               	movf	_GBS_Stepper_Exe$1645^(0+128),w
  4083  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  4084  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  4085  04AE  00AD               	movwf	___lmul@multiplier
  4086  04AF  1683               	bsf	3,5	;RP0=1, select bank1
  4087  04B0  1303               	bcf	3,6	;RP1=0, select bank1
  4088  04B1  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4089  04B2  3E07               	addlw	7
  4090  04B3  0084               	movwf	4
  4091  04B4  1783               	bsf	3,7	;select IRP bank2
  4092  04B5  0800               	movf	0,w
  4093  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  4094  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  4095  04B8  00B1               	movwf	___lmul@multiplicand
  4096  04B9  0A84               	incf	4,f
  4097  04BA  0800               	movf	0,w
  4098  04BB  00B2               	movwf	___lmul@multiplicand+1
  4099  04BC  0A84               	incf	4,f
  4100  04BD  0800               	movf	0,w
  4101  04BE  00B3               	movwf	___lmul@multiplicand+2
  4102  04BF  0A84               	incf	4,f
  4103  04C0  0800               	movf	0,w
  4104  04C1  00B4               	movwf	___lmul@multiplicand+3
  4105  04C2  120A  158A  2205  120A  118A  	fcall	___lmul
  4106  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  4107  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  4108  04C9  0830               	movf	?___lmul+3,w
  4109  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  4110  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  4111  04CC  00E1               	movwf	(_GBS_Stepper_Exe$1646+3)^(0+128)
  4112  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  4113  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  4114  04CF  082F               	movf	?___lmul+2,w
  4115  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  4116  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  4117  04D2  00E0               	movwf	(_GBS_Stepper_Exe$1646+2)^(0+128)
  4118  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  4119  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  4120  04D5  082E               	movf	?___lmul+1,w
  4121  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  4122  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  4123  04D8  00DF               	movwf	(_GBS_Stepper_Exe$1646+1)^(0+128)
  4124  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  4125  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  4126  04DB  082D               	movf	?___lmul,w
  4127  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  4128  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  4129  04DE  00DE               	movwf	_GBS_Stepper_Exe$1646^(0+128)
  4130  04DF                     i1l2159:
  4131                           
  4132                           ;../gbs8/driver/scr/gbs8_stepper.c: 240:                     stepperX->cntsLast = steppe
      +                          rX->cntsLast + 1*((stepperX->cntsLast)*(stepperX->cntsLast)*(stepperX->cntsLast))*sBuffe
      +                          rX->buffer[sBufferX->head].acc/((10000)*(10000)) + ((stepperX->cntsLast)*(stepperX->cnts
      +                          Last)*(stepperX->cntsLast))*((stepperX->cntsLast)*(stepperX->cntsLast))*((sBufferX->buff
      +                          er[sBufferX->head].acc/((10000)*(10000)))*(sBufferX->buffer[sBufferX->head].acc/((10000)
      +                          *(10000))));
  4133  04DF  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4134  04E0  3E07               	addlw	7
  4135  04E1  0084               	movwf	4
  4136  04E2  1783               	bsf	3,7	;select IRP bank2
  4137  04E3  0800               	movf	0,w
  4138  04E4  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  4139  04E5  0A84               	incf	4,f
  4140  04E6  0800               	movf	0,w
  4141  04E7  00B8               	movwf	(??_GBS_Stepper_Exe^(0+128)+1)
  4142  04E8  0A84               	incf	4,f
  4143  04E9  0800               	movf	0,w
  4144  04EA  00B9               	movwf	(??_GBS_Stepper_Exe^(0+128)+2)
  4145  04EB  0A84               	incf	4,f
  4146  04EC  0800               	movf	0,w
  4147  04ED  00BA               	movwf	(??_GBS_Stepper_Exe^(0+128)+3)
  4148  04EE  0859               	movf	(_GBS_Stepper_Exe$1644+3)^(0+128),w
  4149  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  4150  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  4151  04F1  00B0               	movwf	___lmul@multiplier+3
  4152  04F2  1683               	bsf	3,5	;RP0=1, select bank1
  4153  04F3  1303               	bcf	3,6	;RP1=0, select bank1
  4154  04F4  0858               	movf	(_GBS_Stepper_Exe$1644+2)^(0+128),w
  4155  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  4156  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  4157  04F7  00AF               	movwf	___lmul@multiplier+2
  4158  04F8  1683               	bsf	3,5	;RP0=1, select bank1
  4159  04F9  1303               	bcf	3,6	;RP1=0, select bank1
  4160  04FA  0857               	movf	(_GBS_Stepper_Exe$1644+1)^(0+128),w
  4161  04FB  1283               	bcf	3,5	;RP0=0, select bank0
  4162  04FC  1303               	bcf	3,6	;RP1=0, select bank0
  4163  04FD  00AE               	movwf	___lmul@multiplier+1
  4164  04FE  1683               	bsf	3,5	;RP0=1, select bank1
  4165  04FF  1303               	bcf	3,6	;RP1=0, select bank1
  4166  0500  0856               	movf	_GBS_Stepper_Exe$1644^(0+128),w
  4167  0501  1283               	bcf	3,5	;RP0=0, select bank0
  4168  0502  1303               	bcf	3,6	;RP1=0, select bank0
  4169  0503  00AD               	movwf	___lmul@multiplier
  4170  0504  1683               	bsf	3,5	;RP0=1, select bank1
  4171  0505  1303               	bcf	3,6	;RP1=0, select bank1
  4172  0506  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4173  0507  3E07               	addlw	7
  4174  0508  0084               	movwf	4
  4175  0509  0800               	movf	0,w
  4176  050A  1283               	bcf	3,5	;RP0=0, select bank0
  4177  050B  1303               	bcf	3,6	;RP1=0, select bank0
  4178  050C  00B1               	movwf	___lmul@multiplicand
  4179  050D  0A84               	incf	4,f
  4180  050E  0800               	movf	0,w
  4181  050F  00B2               	movwf	___lmul@multiplicand+1
  4182  0510  0A84               	incf	4,f
  4183  0511  0800               	movf	0,w
  4184  0512  00B3               	movwf	___lmul@multiplicand+2
  4185  0513  0A84               	incf	4,f
  4186  0514  0800               	movf	0,w
  4187  0515  00B4               	movwf	___lmul@multiplicand+3
  4188  0516  120A  158A  2205  120A  118A  	fcall	___lmul
  4189  051B  1283               	bcf	3,5	;RP0=0, select bank0
  4190  051C  1303               	bcf	3,6	;RP1=0, select bank0
  4191  051D  082D               	movf	?___lmul,w
  4192  051E  1683               	bsf	3,5	;RP0=1, select bank1
  4193  051F  1303               	bcf	3,6	;RP1=0, select bank1
  4194  0520  00BB               	movwf	(??_GBS_Stepper_Exe+4)^(0+128)
  4195  0521  1283               	bcf	3,5	;RP0=0, select bank0
  4196  0522  1303               	bcf	3,6	;RP1=0, select bank0
  4197  0523  082E               	movf	?___lmul+1,w
  4198  0524  1683               	bsf	3,5	;RP0=1, select bank1
  4199  0525  1303               	bcf	3,6	;RP1=0, select bank1
  4200  0526  00BC               	movwf	((??_GBS_Stepper_Exe+4)^(0+128)+1)
  4201  0527  1283               	bcf	3,5	;RP0=0, select bank0
  4202  0528  1303               	bcf	3,6	;RP1=0, select bank0
  4203  0529  082F               	movf	?___lmul+2,w
  4204  052A  1683               	bsf	3,5	;RP0=1, select bank1
  4205  052B  1303               	bcf	3,6	;RP1=0, select bank1
  4206  052C  00BD               	movwf	((??_GBS_Stepper_Exe+4)^(0+128)+2)
  4207  052D  1283               	bcf	3,5	;RP0=0, select bank0
  4208  052E  1303               	bcf	3,6	;RP1=0, select bank0
  4209  052F  0830               	movf	?___lmul+3,w
  4210  0530  1683               	bsf	3,5	;RP0=1, select bank1
  4211  0531  1303               	bcf	3,6	;RP1=0, select bank1
  4212  0532  00BE               	movwf	((??_GBS_Stepper_Exe+4)^(0+128)+3)
  4213  0533  30FF               	movlw	255
  4214  0534  1283               	bcf	3,5	;RP0=0, select bank0
  4215  0535  1303               	bcf	3,6	;RP1=0, select bank0
  4216  0536  00A3               	movwf	___lldiv@divisor+3
  4217  0537  30FF               	movlw	255
  4218  0538  00A2               	movwf	___lldiv@divisor+2
  4219  0539  30E1               	movlw	225
  4220  053A  00A1               	movwf	___lldiv@divisor+1
  4221  053B  3000               	movlw	0
  4222  053C  00A0               	movwf	___lldiv@divisor
  4223  053D  1683               	bsf	3,5	;RP0=1, select bank1
  4224  053E  1303               	bcf	3,6	;RP1=0, select bank1
  4225  053F  0861               	movf	(_GBS_Stepper_Exe$1646+3)^(0+128),w
  4226  0540  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0541  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0542  00B0               	movwf	___lmul@multiplier+3
  4229  0543  1683               	bsf	3,5	;RP0=1, select bank1
  4230  0544  1303               	bcf	3,6	;RP1=0, select bank1
  4231  0545  0860               	movf	(_GBS_Stepper_Exe$1646+2)^(0+128),w
  4232  0546  1283               	bcf	3,5	;RP0=0, select bank0
  4233  0547  1303               	bcf	3,6	;RP1=0, select bank0
  4234  0548  00AF               	movwf	___lmul@multiplier+2
  4235  0549  1683               	bsf	3,5	;RP0=1, select bank1
  4236  054A  1303               	bcf	3,6	;RP1=0, select bank1
  4237  054B  085F               	movf	(_GBS_Stepper_Exe$1646+1)^(0+128),w
  4238  054C  1283               	bcf	3,5	;RP0=0, select bank0
  4239  054D  1303               	bcf	3,6	;RP1=0, select bank0
  4240  054E  00AE               	movwf	___lmul@multiplier+1
  4241  054F  1683               	bsf	3,5	;RP0=1, select bank1
  4242  0550  1303               	bcf	3,6	;RP1=0, select bank1
  4243  0551  085E               	movf	_GBS_Stepper_Exe$1646^(0+128),w
  4244  0552  1283               	bcf	3,5	;RP0=0, select bank0
  4245  0553  1303               	bcf	3,6	;RP1=0, select bank0
  4246  0554  00AD               	movwf	___lmul@multiplier
  4247  0555  301A               	movlw	26
  4248  0556  00FF               	movwf	btemp+1
  4249  0557  087F               	movf	btemp+1,w
  4250  0558  00F6               	movwf	___bmul@multiplicand
  4251  0559  1683               	bsf	3,5	;RP0=1, select bank1
  4252  055A  1303               	bcf	3,6	;RP1=0, select bank1
  4253  055B  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4254  055C  3E4E               	addlw	78
  4255  055D  0084               	movwf	4
  4256  055E  1783               	bsf	3,7	;select IRP bank2
  4257  055F  0800               	movf	0,w
  4258  0560  120A  158A  207A  120A  118A  	fcall	___bmul
  4259  0565  1683               	bsf	3,5	;RP0=1, select bank1
  4260  0566  1303               	bcf	3,6	;RP1=0, select bank1
  4261  0567  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4262  0568  00BF               	movwf	(??_GBS_Stepper_Exe+8)^(0+128)
  4263  0569  083F               	movf	(??_GBS_Stepper_Exe+8)^(0+128),w
  4264  056A  3E0D               	addlw	13
  4265  056B  0084               	movwf	4
  4266  056C  1783               	bsf	3,7	;select IRP bank2
  4267  056D  0800               	movf	0,w
  4268  056E  1283               	bcf	3,5	;RP0=0, select bank0
  4269  056F  1303               	bcf	3,6	;RP1=0, select bank0
  4270  0570  00B1               	movwf	___lmul@multiplicand
  4271  0571  0A84               	incf	4,f
  4272  0572  0800               	movf	0,w
  4273  0573  00B2               	movwf	___lmul@multiplicand+1
  4274  0574  0A84               	incf	4,f
  4275  0575  0800               	movf	0,w
  4276  0576  00B3               	movwf	___lmul@multiplicand+2
  4277  0577  0A84               	incf	4,f
  4278  0578  0800               	movf	0,w
  4279  0579  00B4               	movwf	___lmul@multiplicand+3
  4280  057A  120A  158A  2205  120A  118A  	fcall	___lmul
  4281  057F  1283               	bcf	3,5	;RP0=0, select bank0
  4282  0580  1303               	bcf	3,6	;RP1=0, select bank0
  4283  0581  0830               	movf	?___lmul+3,w
  4284  0582  00A7               	movwf	___lldiv@dividend+3
  4285  0583  082F               	movf	?___lmul+2,w
  4286  0584  00A6               	movwf	___lldiv@dividend+2
  4287  0585  082E               	movf	?___lmul+1,w
  4288  0586  00A5               	movwf	___lldiv@dividend+1
  4289  0587  082D               	movf	?___lmul,w
  4290  0588  00A4               	movwf	___lldiv@dividend
  4291  0589  120A  118A  2796  120A  118A  	fcall	___lldiv
  4292  058E  1283               	bcf	3,5	;RP0=0, select bank0
  4293  058F  1303               	bcf	3,6	;RP1=0, select bank0
  4294  0590  0820               	movf	?___lldiv,w
  4295  0591  1683               	bsf	3,5	;RP0=1, select bank1
  4296  0592  1303               	bcf	3,6	;RP1=0, select bank1
  4297  0593  07BB               	addwf	(??_GBS_Stepper_Exe+4)^(0+128),f
  4298  0594  1283               	bcf	3,5	;RP0=0, select bank0
  4299  0595  1303               	bcf	3,6	;RP1=0, select bank0
  4300  0596  0821               	movf	?___lldiv+1,w
  4301  0597  1803               	skipnc
  4302  0598  0F21               	incfsz	?___lldiv+1,w
  4303  0599  2D9B               	goto	u249_20
  4304  059A  2D9E               	goto	u249_21
  4305  059B                     u249_20:
  4306  059B  1683               	bsf	3,5	;RP0=1, select bank1
  4307  059C  1303               	bcf	3,6	;RP1=0, select bank1
  4308  059D  07BC               	addwf	((??_GBS_Stepper_Exe+4)^(0+128)+1),f
  4309  059E                     u249_21:
  4310  059E  1283               	bcf	3,5	;RP0=0, select bank0
  4311  059F  1303               	bcf	3,6	;RP1=0, select bank0
  4312  05A0  0822               	movf	?___lldiv+2,w
  4313  05A1  1803               	skipnc
  4314  05A2  0F22               	incfsz	?___lldiv+2,w
  4315  05A3  2DA5               	goto	u249_22
  4316  05A4  2DA8               	goto	u249_23
  4317  05A5                     u249_22:
  4318  05A5  1683               	bsf	3,5	;RP0=1, select bank1
  4319  05A6  1303               	bcf	3,6	;RP1=0, select bank1
  4320  05A7  07BD               	addwf	((??_GBS_Stepper_Exe+4)^(0+128)+2),f
  4321  05A8                     u249_23:
  4322  05A8  1283               	bcf	3,5	;RP0=0, select bank0
  4323  05A9  1303               	bcf	3,6	;RP1=0, select bank0
  4324  05AA  0823               	movf	?___lldiv+3,w
  4325  05AB  1803               	skipnc
  4326  05AC  0A23               	incf	?___lldiv+3,w
  4327  05AD  1683               	bsf	3,5	;RP0=1, select bank1
  4328  05AE  1303               	bcf	3,6	;RP1=0, select bank1
  4329  05AF  07BE               	addwf	((??_GBS_Stepper_Exe+4)^(0+128)+3),f
  4330  05B0  083B               	movf	(??_GBS_Stepper_Exe+4)^(0+128),w
  4331  05B1  07B7               	addwf	??_GBS_Stepper_Exe^(0+128),f
  4332  05B2  083C               	movf	(??_GBS_Stepper_Exe+5)^(0+128),w
  4333  05B3  1803               	skipnc
  4334  05B4  0F3C               	incfsz	(??_GBS_Stepper_Exe+5)^(0+128),w
  4335  05B5  2DB7               	goto	u250_20
  4336  05B6  2DB8               	goto	u250_21
  4337  05B7                     u250_20:
  4338  05B7  07B8               	addwf	(??_GBS_Stepper_Exe^(0+128)+1),f
  4339  05B8                     u250_21:
  4340  05B8  083D               	movf	(??_GBS_Stepper_Exe+6)^(0+128),w
  4341  05B9  1803               	skipnc
  4342  05BA  0F3D               	incfsz	(??_GBS_Stepper_Exe+6)^(0+128),w
  4343  05BB  2DBD               	goto	u250_22
  4344  05BC  2DBE               	goto	u250_23
  4345  05BD                     u250_22:
  4346  05BD  07B9               	addwf	(??_GBS_Stepper_Exe^(0+128)+2),f
  4347  05BE                     u250_23:
  4348  05BE  083E               	movf	(??_GBS_Stepper_Exe+7)^(0+128),w
  4349  05BF  1803               	skipnc
  4350  05C0  0A3E               	incf	(??_GBS_Stepper_Exe+7)^(0+128),w
  4351  05C1  07BA               	addwf	(??_GBS_Stepper_Exe^(0+128)+3),f
  4352  05C2  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4353  05C3  3E07               	addlw	7
  4354  05C4  0084               	movwf	4
  4355  05C5  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  4356  05C6  1783               	bsf	3,7	;select IRP bank2
  4357  05C7  0080               	movwf	0
  4358  05C8  0A84               	incf	4,f
  4359  05C9  0838               	movf	(??_GBS_Stepper_Exe+1)^(0+128),w
  4360  05CA  0080               	movwf	0
  4361  05CB  0A84               	incf	4,f
  4362  05CC  0839               	movf	(??_GBS_Stepper_Exe+2)^(0+128),w
  4363  05CD  0080               	movwf	0
  4364  05CE  0A84               	incf	4,f
  4365  05CF  083A               	movf	(??_GBS_Stepper_Exe+3)^(0+128),w
  4366  05D0  0080               	movwf	0
  4367  05D1                     i1l2161:
  4368                           
  4369                           ;../gbs8/driver/scr/gbs8_stepper.c: 242:                     sBufferX->buffer[sBufferX->
      +                          head].acc_until--;
  4370  05D1  301A               	movlw	26
  4371  05D2  00FF               	movwf	btemp+1
  4372  05D3  087F               	movf	btemp+1,w
  4373  05D4  00F6               	movwf	___bmul@multiplicand
  4374  05D5  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4375  05D6  3E4E               	addlw	78
  4376  05D7  0084               	movwf	4
  4377  05D8  0800               	movf	0,w
  4378  05D9  120A  158A  207A  120A  118A  	fcall	___bmul
  4379  05DE  1683               	bsf	3,5	;RP0=1, select bank1
  4380  05DF  1303               	bcf	3,6	;RP1=0, select bank1
  4381  05E0  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4382  05E1  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  4383  05E2  0A37               	incf	??_GBS_Stepper_Exe^(0+128),w
  4384  05E3  0084               	movwf	4
  4385  05E4  3001               	movlw	1
  4386  05E5  1783               	bsf	3,7	;select IRP bank2
  4387  05E6  0280               	subwf	0,f
  4388  05E7  0A84               	incf	4,f
  4389  05E8  3000               	movlw	0
  4390  05E9  1C03               	skipc
  4391  05EA  3001               	movlw	1
  4392  05EB  0280               	subwf	0,f
  4393  05EC  0A84               	incf	4,f
  4394  05ED  3000               	movlw	0
  4395  05EE  1C03               	skipc
  4396  05EF  3001               	movlw	1
  4397  05F0  0280               	subwf	0,f
  4398  05F1  0A84               	incf	4,f
  4399  05F2  3000               	movlw	0
  4400  05F3  1C03               	skipc
  4401  05F4  3001               	movlw	1
  4402  05F5  0280               	subwf	0,f
  4403  05F6  3003               	movlw	3
  4404  05F7  0284               	subwf	4,f
  4405  05F8                     i1l2163:
  4406                           
  4407                           ;../gbs8/driver/scr/gbs8_stepper.c: 243:                     sBufferX->buffer[sBufferX->
      +                          head].dec_after--;
  4408  05F8  301A               	movlw	26
  4409  05F9  00FF               	movwf	btemp+1
  4410  05FA  087F               	movf	btemp+1,w
  4411  05FB  00F6               	movwf	___bmul@multiplicand
  4412  05FC  0836               	movf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4413  05FD  3E4E               	addlw	78
  4414  05FE  0084               	movwf	4
  4415  05FF  0800               	movf	0,w
  4416  0600  120A  158A  207A  120A  118A  	fcall	___bmul
  4417  0605  1683               	bsf	3,5	;RP0=1, select bank1
  4418  0606  1303               	bcf	3,6	;RP1=0, select bank1
  4419  0607  0736               	addwf	GBS_Stepper_Exe@sBufferX^(0+128),w
  4420  0608  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  4421  0609  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  4422  060A  3E05               	addlw	5
  4423  060B  0084               	movwf	4
  4424  060C  3001               	movlw	1
  4425  060D  1783               	bsf	3,7	;select IRP bank2
  4426  060E  0280               	subwf	0,f
  4427  060F  0A84               	incf	4,f
  4428  0610  3000               	movlw	0
  4429  0611  1C03               	skipc
  4430  0612  3001               	movlw	1
  4431  0613  0280               	subwf	0,f
  4432  0614  0A84               	incf	4,f
  4433  0615  3000               	movlw	0
  4434  0616  1C03               	skipc
  4435  0617  3001               	movlw	1
  4436  0618  0280               	subwf	0,f
  4437  0619  0A84               	incf	4,f
  4438  061A  3000               	movlw	0
  4439  061B  1C03               	skipc
  4440  061C  3001               	movlw	1
  4441  061D  0280               	subwf	0,f
  4442  061E  3003               	movlw	3
  4443  061F  0284               	subwf	4,f
  4444  0620                     i1l199:	
  4445                           ;../gbs8/driver/scr/gbs8_stepper.c: 244:                 }
  4446                           
  4447                           
  4448                           ;../gbs8/driver/scr/gbs8_stepper.c: 255:                 stepperX->cnts = stepperX->cnts
      +                          Last;
  4449  0620  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4450  0621  3E07               	addlw	7
  4451  0622  0084               	movwf	4
  4452  0623  0800               	movf	0,w
  4453  0624  00B7               	movwf	??_GBS_Stepper_Exe^(0+128)
  4454  0625  0A84               	incf	4,f
  4455  0626  0800               	movf	0,w
  4456  0627  00B8               	movwf	(??_GBS_Stepper_Exe^(0+128)+1)
  4457  0628  0A84               	incf	4,f
  4458  0629  0800               	movf	0,w
  4459  062A  00B9               	movwf	(??_GBS_Stepper_Exe^(0+128)+2)
  4460  062B  0A84               	incf	4,f
  4461  062C  0800               	movf	0,w
  4462  062D  00BA               	movwf	(??_GBS_Stepper_Exe^(0+128)+3)
  4463  062E  0862               	movf	GBS_Stepper_Exe@stepperX^(0+128),w
  4464  062F  3E03               	addlw	3
  4465  0630  0084               	movwf	4
  4466  0631  0837               	movf	??_GBS_Stepper_Exe^(0+128),w
  4467  0632  0080               	movwf	0
  4468  0633  0A84               	incf	4,f
  4469  0634  0838               	movf	(??_GBS_Stepper_Exe+1)^(0+128),w
  4470  0635  0080               	movwf	0
  4471  0636  0A84               	incf	4,f
  4472  0637  0839               	movf	(??_GBS_Stepper_Exe+2)^(0+128),w
  4473  0638  0080               	movwf	0
  4474  0639  0A84               	incf	4,f
  4475  063A  083A               	movf	(??_GBS_Stepper_Exe+3)^(0+128),w
  4476  063B  0080               	movwf	0
  4477  063C                     i1l202:
  4478  063C  0008               	return
  4479  063D                     __end_of_GBS_Stepper_Exe:
  4480                           
  4481                           	psect	text19
  4482  0B8B                     __ptext19:	
  4483 ;; *************** function _sqrt *****************
  4484 ;; Defined at:
  4485 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;  a               4   39[BANK0 ] void 
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  frac            4   64[BANK0 ] unsigned long 
  4490 ;;  root            4   60[BANK0 ] struct .
  4491 ;;  grs             4   54[BANK0 ] unsigned long 
  4492 ;;  tfrac           4   49[BANK0 ] unsigned long 
  4493 ;;  exp             2   58[BANK0 ] int 
  4494 ;;  p               1   53[BANK0 ] unsigned char 
  4495 ;;  i               1   48[BANK0 ] unsigned char 
  4496 ;;  sign            1   47[BANK0 ] unsigned char 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  4   39[BANK0 ] unsigned char 
  4499 ;; Registers used:
  4500 ;;		wreg, status,2, status,0, btemp+1
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4506 ;;      Params:         0       4       0       0       0
  4507 ;;      Locals:         0      21       0       0       0
  4508 ;;      Temps:          0       4       0       0       0
  4509 ;;      Totals:         0      29       0       0       0
  4510 ;;Total ram usage:       29 bytes
  4511 ;; Hardware stack levels used:    1
  4512 ;; This function calls:
  4513 ;;		Nothing
  4514 ;; This function is called by:
  4515 ;;		_GBS_Stepper_Exe
  4516 ;; This function uses a non-reentrant model
  4517 ;;
  4518                           
  4519                           
  4520                           ;psect for function _sqrt
  4521  0B8B                     _sqrt:
  4522  0B8B                     i1l1679:	
  4523                           ;incstack = 0
  4524                           ; Regs used in _sqrt: [wreg+status,2+status,0+btemp+1]
  4525                           
  4526  0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  4527  0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  4528  0B8D  084A               	movf	sqrt@a+3,w
  4529  0B8E  3980               	andlw	128
  4530  0B8F  00FF               	movwf	btemp+1
  4531  0B90  087F               	movf	btemp+1,w
  4532  0B91  00CF               	movwf	sqrt@sign
  4533  0B92                     i1l1681:
  4534  0B92  084A               	movf	sqrt@a+3,w
  4535  0B93  00CB               	movwf	??_sqrt
  4536  0B94  074B               	addwf	??_sqrt,w
  4537  0B95  00FF               	movwf	btemp+1
  4538  0B96  087F               	movf	btemp+1,w
  4539  0B97  00D5               	movwf	sqrt@p
  4540  0B98                     i1l1683:
  4541  0B98  1FC9               	btfss	sqrt@a+2,7
  4542  0B99  2B9B               	goto	u140_21
  4543  0B9A  2B9C               	goto	u140_20
  4544  0B9B                     u140_21:
  4545  0B9B  2B9D               	goto	i1l1687
  4546  0B9C                     u140_20:
  4547  0B9C                     i1l1685:
  4548  0B9C  1455               	bsf	sqrt@p,0
  4549  0B9D                     i1l1687:
  4550  0B9D  0855               	movf	sqrt@p,w
  4551  0B9E  00CB               	movwf	??_sqrt
  4552  0B9F  01CC               	clrf	??_sqrt+1
  4553  0BA0  084B               	movf	??_sqrt,w
  4554  0BA1  00DA               	movwf	sqrt@exp
  4555  0BA2  084C               	movf	??_sqrt+1,w
  4556  0BA3  00DB               	movwf	sqrt@exp+1
  4557  0BA4  30FF               	movlw	255
  4558  0BA5  0547               	andwf	sqrt@a,w
  4559  0BA6  00E0               	movwf	sqrt@frac
  4560  0BA7  30FF               	movlw	255
  4561  0BA8  0548               	andwf	sqrt@a+1,w
  4562  0BA9  00E1               	movwf	sqrt@frac+1
  4563  0BAA  307F               	movlw	127
  4564  0BAB  0549               	andwf	sqrt@a+2,w
  4565  0BAC  00E2               	movwf	sqrt@frac+2
  4566  0BAD  3000               	movlw	0
  4567  0BAE  054A               	andwf	sqrt@a+3,w
  4568  0BAF  00E3               	movwf	sqrt@frac+3
  4569  0BB0                     i1l1689:
  4570  0BB0  085A               	movf	sqrt@exp,w
  4571  0BB1  045B               	iorwf	sqrt@exp+1,w
  4572  0BB2  1903               	btfsc	3,2
  4573  0BB3  2BB5               	goto	u141_21
  4574  0BB4  2BB6               	goto	u141_20
  4575  0BB5                     u141_21:
  4576  0BB5  2BBD               	goto	i1l1695
  4577  0BB6                     u141_20:
  4578  0BB6                     i1l1691:
  4579  0BB6  17E2               	bsf	sqrt@frac+2,7
  4580  0BB7                     i1l1693:
  4581  0BB7  0A5A               	incf	sqrt@exp,w
  4582  0BB8  045B               	iorwf	sqrt@exp+1,w
  4583  0BB9  1D03               	btfss	3,2
  4584  0BBA  2BBC               	goto	u142_21
  4585  0BBB  2BBD               	goto	u142_20
  4586  0BBC                     u142_21:
  4587  0BBC  2BC5               	goto	i1l1699
  4588  0BBD                     u142_20:
  4589  0BBD                     i1l1695:
  4590  0BBD  3000               	movlw	0
  4591  0BBE  00E3               	movwf	sqrt@frac+3
  4592  0BBF  3000               	movlw	0
  4593  0BC0  00E2               	movwf	sqrt@frac+2
  4594  0BC1  3000               	movlw	0
  4595  0BC2  00E1               	movwf	sqrt@frac+1
  4596  0BC3  3000               	movlw	0
  4597  0BC4  00E0               	movwf	sqrt@frac
  4598  0BC5                     i1l1699:
  4599  0BC5  085A               	movf	sqrt@exp,w
  4600  0BC6  045B               	iorwf	sqrt@exp+1,w
  4601  0BC7  1D03               	btfss	3,2
  4602  0BC8  2BCA               	goto	u143_21
  4603  0BC9  2BCB               	goto	u143_20
  4604  0BCA                     u143_21:
  4605  0BCA  2BD4               	goto	i1l1705
  4606  0BCB                     u143_20:
  4607  0BCB                     i1l1701:
  4608  0BCB  3000               	movlw	0
  4609  0BCC  00CA               	movwf	?_sqrt+3
  4610  0BCD  3000               	movlw	0
  4611  0BCE  00C9               	movwf	?_sqrt+2
  4612  0BCF  3000               	movlw	0
  4613  0BD0  00C8               	movwf	?_sqrt+1
  4614  0BD1  3000               	movlw	0
  4615  0BD2  00C7               	movwf	?_sqrt
  4616  0BD3  2D6A               	goto	i1l765
  4617  0BD4                     i1l1705:
  4618  0BD4  084F               	movf	sqrt@sign,w
  4619  0BD5  1903               	btfsc	3,2
  4620  0BD6  2BD8               	goto	u144_21
  4621  0BD7  2BD9               	goto	u144_20
  4622  0BD8                     u144_21:
  4623  0BD8  2BF6               	goto	i1l1711
  4624  0BD9                     u144_20:
  4625  0BD9                     i1l1707:
  4626  0BD9  3000               	movlw	0
  4627  0BDA  00DF               	movwf	sqrt@root+3
  4628  0BDB  3040               	movlw	64
  4629  0BDC  00DE               	movwf	sqrt@root+2
  4630  0BDD  3000               	movlw	0
  4631  0BDE  00DD               	movwf	sqrt@root+1
  4632  0BDF  3000               	movlw	0
  4633  0BE0  00DC               	movwf	sqrt@root
  4634  0BE1  3080               	movlw	128
  4635  0BE2  04DE               	iorwf	sqrt@root+2,f
  4636  0BE3  30FF               	movlw	255
  4637  0BE4  04DF               	iorwf	sqrt@root+3,f
  4638  0BE5  3021               	movlw	33
  4639  0BE6  1683               	bsf	3,5	;RP0=1, select bank1
  4640  0BE7  1303               	bcf	3,6	;RP1=0, select bank1
  4641  0BE8  00E7               	movwf	_errno^(0+128)
  4642  0BE9  3000               	movlw	0
  4643  0BEA  00E8               	movwf	(_errno^(0+128)+1)
  4644  0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  4645  0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  4646  0BED  085F               	movf	sqrt@root+3,w
  4647  0BEE  00CA               	movwf	?_sqrt+3
  4648  0BEF  085E               	movf	sqrt@root+2,w
  4649  0BF0  00C9               	movwf	?_sqrt+2
  4650  0BF1  085D               	movf	sqrt@root+1,w
  4651  0BF2  00C8               	movwf	?_sqrt+1
  4652  0BF3  085C               	movf	sqrt@root,w
  4653  0BF4  00C7               	movwf	?_sqrt
  4654  0BF5  2D6A               	goto	i1l765
  4655  0BF6                     i1l1711:
  4656  0BF6  0A5A               	incf	sqrt@exp,w
  4657  0BF7  045B               	iorwf	sqrt@exp+1,w
  4658  0BF8  1D03               	btfss	3,2
  4659  0BF9  2BFB               	goto	u145_21
  4660  0BFA  2BFC               	goto	u145_20
  4661  0BFB                     u145_21:
  4662  0BFB  2C0D               	goto	i1l1717
  4663  0BFC                     u145_20:
  4664  0BFC                     i1l1713:
  4665  0BFC  307F               	movlw	127
  4666  0BFD  00DF               	movwf	sqrt@root+3
  4667  0BFE  3080               	movlw	128
  4668  0BFF  00DE               	movwf	sqrt@root+2
  4669  0C00  3000               	movlw	0
  4670  0C01  00DD               	movwf	sqrt@root+1
  4671  0C02  3000               	movlw	0
  4672  0C03  00DC               	movwf	sqrt@root
  4673  0C04  085F               	movf	sqrt@root+3,w
  4674  0C05  00CA               	movwf	?_sqrt+3
  4675  0C06  085E               	movf	sqrt@root+2,w
  4676  0C07  00C9               	movwf	?_sqrt+2
  4677  0C08  085D               	movf	sqrt@root+1,w
  4678  0C09  00C8               	movwf	?_sqrt+1
  4679  0C0A  085C               	movf	sqrt@root,w
  4680  0C0B  00C7               	movwf	?_sqrt
  4681  0C0C  2D6A               	goto	i1l765
  4682  0C0D                     i1l1717:
  4683  0C0D  3081               	movlw	129
  4684  0C0E  07DA               	addwf	sqrt@exp,f
  4685  0C0F  1803               	skipnc
  4686  0C10  0ADB               	incf	sqrt@exp+1,f
  4687  0C11  30FF               	movlw	255
  4688  0C12  07DB               	addwf	sqrt@exp+1,f
  4689  0C13                     i1l1719:
  4690  0C13  085A               	movf	sqrt@exp,w
  4691  0C14  3901               	andlw	1
  4692  0C15  00FF               	movwf	btemp+1
  4693  0C16  087F               	movf	btemp+1,w
  4694  0C17  00D5               	movwf	sqrt@p
  4695  0C18                     i1l1721:
  4696  0C18  3001               	movlw	1
  4697  0C19  00FF               	movwf	btemp+1
  4698  0C1A                     u146_25:
  4699  0C1A  0D5B               	rlf	sqrt@exp+1,w
  4700  0C1B  0CDB               	rrf	sqrt@exp+1,f
  4701  0C1C  0CDA               	rrf	sqrt@exp,f
  4702  0C1D  0BFF               	decfsz	btemp+1,f
  4703  0C1E  2C1A               	goto	u146_25
  4704  0C1F                     i1l1723:
  4705  0C1F  307F               	movlw	127
  4706  0C20  07DA               	addwf	sqrt@exp,f
  4707  0C21  1803               	skipnc
  4708  0C22  0ADB               	incf	sqrt@exp+1,f
  4709  0C23  3000               	movlw	0
  4710  0C24  07DB               	addwf	sqrt@exp+1,f
  4711  0C25                     i1l1725:
  4712  0C25  1003               	clrc
  4713  0C26  0D60               	rlf	sqrt@frac,w
  4714  0C27  00D1               	movwf	sqrt@tfrac
  4715  0C28  0D61               	rlf	sqrt@frac+1,w
  4716  0C29  00D2               	movwf	sqrt@tfrac+1
  4717  0C2A  0D62               	rlf	sqrt@frac+2,w
  4718  0C2B  00D3               	movwf	sqrt@tfrac+2
  4719  0C2C  0D63               	rlf	sqrt@frac+3,w
  4720  0C2D  00D4               	movwf	sqrt@tfrac+3
  4721  0C2E                     i1l1727:
  4722  0C2E  3000               	movlw	0
  4723  0C2F  00E3               	movwf	sqrt@frac+3
  4724  0C30  3000               	movlw	0
  4725  0C31  00E2               	movwf	sqrt@frac+2
  4726  0C32  3000               	movlw	0
  4727  0C33  00E1               	movwf	sqrt@frac+1
  4728  0C34  3000               	movlw	0
  4729  0C35  00E0               	movwf	sqrt@frac
  4730  0C36                     i1l1729:
  4731  0C36  3001               	movlw	1
  4732  0C37  00D9               	movwf	sqrt@grs+3
  4733  0C38  3000               	movlw	0
  4734  0C39  00D8               	movwf	sqrt@grs+2
  4735  0C3A  3000               	movlw	0
  4736  0C3B  00D7               	movwf	sqrt@grs+1
  4737  0C3C  3000               	movlw	0
  4738  0C3D  00D6               	movwf	sqrt@grs
  4739  0C3E                     i1l1731:
  4740  0C3E  0855               	movf	sqrt@p,w
  4741  0C3F  1903               	btfsc	3,2
  4742  0C40  2C42               	goto	u147_21
  4743  0C41  2C43               	goto	u147_20
  4744  0C42                     u147_21:
  4745  0C42  2C4C               	goto	i1l1735
  4746  0C43                     u147_20:
  4747  0C43                     i1l1733:
  4748  0C43  3001               	movlw	1
  4749  0C44  00CB               	movwf	??_sqrt
  4750  0C45                     u148_25:
  4751  0C45  1003               	clrc
  4752  0C46  0DD1               	rlf	sqrt@tfrac,f
  4753  0C47  0DD2               	rlf	sqrt@tfrac+1,f
  4754  0C48  0DD3               	rlf	sqrt@tfrac+2,f
  4755  0C49  0DD4               	rlf	sqrt@tfrac+3,f
  4756  0C4A  0BCB               	decfsz	??_sqrt,f
  4757  0C4B  2C45               	goto	u148_25
  4758  0C4C                     i1l1735:
  4759  0C4C  01D0               	clrf	sqrt@i
  4760  0C4D  2CC4               	goto	i1l1745
  4761  0C4E                     i1l1737:
  4762  0C4E  0856               	movf	sqrt@grs,w
  4763  0C4F  04E0               	iorwf	sqrt@frac,f
  4764  0C50  0857               	movf	sqrt@grs+1,w
  4765  0C51  04E1               	iorwf	sqrt@frac+1,f
  4766  0C52  0858               	movf	sqrt@grs+2,w
  4767  0C53  04E2               	iorwf	sqrt@frac+2,f
  4768  0C54  0859               	movf	sqrt@grs+3,w
  4769  0C55  04E3               	iorwf	sqrt@frac+3,f
  4770  0C56  0863               	movf	sqrt@frac+3,w
  4771  0C57  0254               	subwf	sqrt@tfrac+3,w
  4772  0C58  1D03               	skipz
  4773  0C59  2C64               	goto	u149_25
  4774  0C5A  0862               	movf	sqrt@frac+2,w
  4775  0C5B  0253               	subwf	sqrt@tfrac+2,w
  4776  0C5C  1D03               	skipz
  4777  0C5D  2C64               	goto	u149_25
  4778  0C5E  0861               	movf	sqrt@frac+1,w
  4779  0C5F  0252               	subwf	sqrt@tfrac+1,w
  4780  0C60  1D03               	skipz
  4781  0C61  2C64               	goto	u149_25
  4782  0C62  0860               	movf	sqrt@frac,w
  4783  0C63  0251               	subwf	sqrt@tfrac,w
  4784  0C64                     u149_25:
  4785  0C64  1C03               	skipc
  4786  0C65  2C67               	goto	u149_21
  4787  0C66  2C68               	goto	u149_20
  4788  0C67                     u149_21:
  4789  0C67  2C8E               	goto	i1l1741
  4790  0C68                     u149_20:
  4791  0C68                     i1l1739:
  4792  0C68  0860               	movf	sqrt@frac,w
  4793  0C69  02D1               	subwf	sqrt@tfrac,f
  4794  0C6A  0861               	movf	sqrt@frac+1,w
  4795  0C6B  1C03               	skipc
  4796  0C6C  0F61               	incfsz	sqrt@frac+1,w
  4797  0C6D  02D2               	subwf	sqrt@tfrac+1,f
  4798  0C6E  0862               	movf	sqrt@frac+2,w
  4799  0C6F  1C03               	skipc
  4800  0C70  0F62               	incfsz	sqrt@frac+2,w
  4801  0C71  02D3               	subwf	sqrt@tfrac+2,f
  4802  0C72  0863               	movf	sqrt@frac+3,w
  4803  0C73  1C03               	skipc
  4804  0C74  0F63               	incfsz	sqrt@frac+3,w
  4805  0C75  02D4               	subwf	sqrt@tfrac+3,f
  4806  0C76  0856               	movf	sqrt@grs,w
  4807  0C77  07E0               	addwf	sqrt@frac,f
  4808  0C78  0857               	movf	sqrt@grs+1,w
  4809  0C79  1103               	clrz
  4810  0C7A  1803               	skipnc
  4811  0C7B  3E01               	addlw	1
  4812  0C7C  1903               	skipnz
  4813  0C7D  2C7F               	goto	u150_21
  4814  0C7E  07E1               	addwf	sqrt@frac+1,f
  4815  0C7F                     u150_21:
  4816  0C7F  0858               	movf	sqrt@grs+2,w
  4817  0C80  1103               	clrz
  4818  0C81  1803               	skipnc
  4819  0C82  3E01               	addlw	1
  4820  0C83  1903               	skipnz
  4821  0C84  2C86               	goto	u150_22
  4822  0C85  07E2               	addwf	sqrt@frac+2,f
  4823  0C86                     u150_22:
  4824  0C86  0859               	movf	sqrt@grs+3,w
  4825  0C87  1103               	clrz
  4826  0C88  1803               	skipnc
  4827  0C89  3E01               	addlw	1
  4828  0C8A  1903               	skipnz
  4829  0C8B  2C8D               	goto	u150_23
  4830  0C8C  07E3               	addwf	sqrt@frac+3,f
  4831  0C8D                     u150_23:
  4832  0C8D  2C9E               	goto	i1l772
  4833  0C8E                     i1l1741:
  4834  0C8E  0956               	comf	sqrt@grs,w
  4835  0C8F  00CB               	movwf	??_sqrt
  4836  0C90  0957               	comf	sqrt@grs+1,w
  4837  0C91  00CC               	movwf	??_sqrt+1
  4838  0C92  0958               	comf	sqrt@grs+2,w
  4839  0C93  00CD               	movwf	??_sqrt+2
  4840  0C94  0959               	comf	sqrt@grs+3,w
  4841  0C95  00CE               	movwf	??_sqrt+3
  4842  0C96  084B               	movf	??_sqrt,w
  4843  0C97  05E0               	andwf	sqrt@frac,f
  4844  0C98  084C               	movf	??_sqrt+1,w
  4845  0C99  05E1               	andwf	sqrt@frac+1,f
  4846  0C9A  084D               	movf	??_sqrt+2,w
  4847  0C9B  05E2               	andwf	sqrt@frac+2,f
  4848  0C9C  084E               	movf	??_sqrt+3,w
  4849  0C9D  05E3               	andwf	sqrt@frac+3,f
  4850  0C9E                     i1l772:
  4851  0C9E  0856               	movf	sqrt@grs,w
  4852  0C9F  00CB               	movwf	??_sqrt
  4853  0CA0  0857               	movf	sqrt@grs+1,w
  4854  0CA1  00CC               	movwf	??_sqrt+1
  4855  0CA2  0858               	movf	sqrt@grs+2,w
  4856  0CA3  00CD               	movwf	??_sqrt+2
  4857  0CA4  0859               	movf	sqrt@grs+3,w
  4858  0CA5  00CE               	movwf	??_sqrt+3
  4859  0CA6  3001               	movlw	1
  4860  0CA7                     u151_25:
  4861  0CA7  1003               	clrc
  4862  0CA8  0CCE               	rrf	??_sqrt+3,f
  4863  0CA9  0CCD               	rrf	??_sqrt+2,f
  4864  0CAA  0CCC               	rrf	??_sqrt+1,f
  4865  0CAB  0CCB               	rrf	??_sqrt,f
  4866  0CAC                     u151_20:
  4867  0CAC  3EFF               	addlw	-1
  4868  0CAD  1D03               	skipz
  4869  0CAE  2CA7               	goto	u151_25
  4870  0CAF  084E               	movf	??_sqrt+3,w
  4871  0CB0  00D9               	movwf	sqrt@grs+3
  4872  0CB1  084D               	movf	??_sqrt+2,w
  4873  0CB2  00D8               	movwf	sqrt@grs+2
  4874  0CB3  084C               	movf	??_sqrt+1,w
  4875  0CB4  00D7               	movwf	sqrt@grs+1
  4876  0CB5  084B               	movf	??_sqrt,w
  4877  0CB6  00D6               	movwf	sqrt@grs
  4878  0CB7  3001               	movlw	1
  4879  0CB8  00CB               	movwf	??_sqrt
  4880  0CB9                     u152_25:
  4881  0CB9  1003               	clrc
  4882  0CBA  0DD1               	rlf	sqrt@tfrac,f
  4883  0CBB  0DD2               	rlf	sqrt@tfrac+1,f
  4884  0CBC  0DD3               	rlf	sqrt@tfrac+2,f
  4885  0CBD  0DD4               	rlf	sqrt@tfrac+3,f
  4886  0CBE  0BCB               	decfsz	??_sqrt,f
  4887  0CBF  2CB9               	goto	u152_25
  4888  0CC0                     i1l1743:
  4889  0CC0  3001               	movlw	1
  4890  0CC1  00FF               	movwf	btemp+1
  4891  0CC2  087F               	movf	btemp+1,w
  4892  0CC3  07D0               	addwf	sqrt@i,f
  4893  0CC4                     i1l1745:
  4894  0CC4  3019               	movlw	25
  4895  0CC5  0250               	subwf	sqrt@i,w
  4896  0CC6  1C03               	skipc
  4897  0CC7  2CC9               	goto	u153_21
  4898  0CC8  2CCA               	goto	u153_20
  4899  0CC9                     u153_21:
  4900  0CC9  2C4E               	goto	i1l1737
  4901  0CCA                     u153_20:
  4902  0CCA                     i1l1747:
  4903  0CCA  0860               	movf	sqrt@frac,w
  4904  0CCB  00CB               	movwf	??_sqrt
  4905  0CCC  0861               	movf	sqrt@frac+1,w
  4906  0CCD  00CC               	movwf	??_sqrt+1
  4907  0CCE  0862               	movf	sqrt@frac+2,w
  4908  0CCF  00CD               	movwf	??_sqrt+2
  4909  0CD0  0863               	movf	sqrt@frac+3,w
  4910  0CD1  00CE               	movwf	??_sqrt+3
  4911  0CD2  3001               	movlw	1
  4912  0CD3                     u154_25:
  4913  0CD3  1003               	clrc
  4914  0CD4  0CCE               	rrf	??_sqrt+3,f
  4915  0CD5  0CCD               	rrf	??_sqrt+2,f
  4916  0CD6  0CCC               	rrf	??_sqrt+1,f
  4917  0CD7  0CCB               	rrf	??_sqrt,f
  4918  0CD8                     u154_20:
  4919  0CD8  3EFF               	addlw	-1
  4920  0CD9  1D03               	skipz
  4921  0CDA  2CD3               	goto	u154_25
  4922  0CDB  084E               	movf	??_sqrt+3,w
  4923  0CDC  00E3               	movwf	sqrt@frac+3
  4924  0CDD  084D               	movf	??_sqrt+2,w
  4925  0CDE  00E2               	movwf	sqrt@frac+2
  4926  0CDF  084C               	movf	??_sqrt+1,w
  4927  0CE0  00E1               	movwf	sqrt@frac+1
  4928  0CE1  084B               	movf	??_sqrt,w
  4929  0CE2  00E0               	movwf	sqrt@frac
  4930  0CE3                     i1l1749:
  4931  0CE3  3001               	movlw	1
  4932  0CE4  0560               	andwf	sqrt@frac,w
  4933  0CE5  00D6               	movwf	sqrt@grs
  4934  0CE6  3000               	movlw	0
  4935  0CE7  0561               	andwf	sqrt@frac+1,w
  4936  0CE8  00D7               	movwf	sqrt@grs+1
  4937  0CE9  3000               	movlw	0
  4938  0CEA  0562               	andwf	sqrt@frac+2,w
  4939  0CEB  00D8               	movwf	sqrt@grs+2
  4940  0CEC  3000               	movlw	0
  4941  0CED  0563               	andwf	sqrt@frac+3,w
  4942  0CEE  00D9               	movwf	sqrt@grs+3
  4943  0CEF                     i1l1751:
  4944  0CEF  0860               	movf	sqrt@frac,w
  4945  0CF0  00CB               	movwf	??_sqrt
  4946  0CF1  0861               	movf	sqrt@frac+1,w
  4947  0CF2  00CC               	movwf	??_sqrt+1
  4948  0CF3  0862               	movf	sqrt@frac+2,w
  4949  0CF4  00CD               	movwf	??_sqrt+2
  4950  0CF5  0863               	movf	sqrt@frac+3,w
  4951  0CF6  00CE               	movwf	??_sqrt+3
  4952  0CF7  3001               	movlw	1
  4953  0CF8                     u155_25:
  4954  0CF8  1003               	clrc
  4955  0CF9  0CCE               	rrf	??_sqrt+3,f
  4956  0CFA  0CCD               	rrf	??_sqrt+2,f
  4957  0CFB  0CCC               	rrf	??_sqrt+1,f
  4958  0CFC  0CCB               	rrf	??_sqrt,f
  4959  0CFD                     u155_20:
  4960  0CFD  3EFF               	addlw	-1
  4961  0CFE  1D03               	skipz
  4962  0CFF  2CF8               	goto	u155_25
  4963  0D00  084E               	movf	??_sqrt+3,w
  4964  0D01  00E3               	movwf	sqrt@frac+3
  4965  0D02  084D               	movf	??_sqrt+2,w
  4966  0D03  00E2               	movwf	sqrt@frac+2
  4967  0D04  084C               	movf	??_sqrt+1,w
  4968  0D05  00E1               	movwf	sqrt@frac+1
  4969  0D06  084B               	movf	??_sqrt,w
  4970  0D07  00E0               	movwf	sqrt@frac
  4971  0D08  0856               	movf	sqrt@grs,w
  4972  0D09  07E0               	addwf	sqrt@frac,f
  4973  0D0A  0857               	movf	sqrt@grs+1,w
  4974  0D0B  1103               	clrz
  4975  0D0C  1803               	skipnc
  4976  0D0D  3E01               	addlw	1
  4977  0D0E  1903               	skipnz
  4978  0D0F  2D11               	goto	u156_21
  4979  0D10  07E1               	addwf	sqrt@frac+1,f
  4980  0D11                     u156_21:
  4981  0D11  0858               	movf	sqrt@grs+2,w
  4982  0D12  1103               	clrz
  4983  0D13  1803               	skipnc
  4984  0D14  3E01               	addlw	1
  4985  0D15  1903               	skipnz
  4986  0D16  2D18               	goto	u156_22
  4987  0D17  07E2               	addwf	sqrt@frac+2,f
  4988  0D18                     u156_22:
  4989  0D18  0859               	movf	sqrt@grs+3,w
  4990  0D19  1103               	clrz
  4991  0D1A  1803               	skipnc
  4992  0D1B  3E01               	addlw	1
  4993  0D1C  1903               	skipnz
  4994  0D1D  2D1F               	goto	u156_23
  4995  0D1E  07E3               	addwf	sqrt@frac+3,f
  4996  0D1F                     u156_23:
  4997  0D1F                     i1l1753:
  4998  0D1F  1C63               	btfss	sqrt@frac+3,0
  4999  0D20  2D22               	goto	u157_21
  5000  0D21  2D23               	goto	u157_20
  5001  0D22                     u157_21:
  5002  0D22  2D42               	goto	i1l1759
  5003  0D23                     u157_20:
  5004  0D23                     i1l1755:
  5005  0D23  0860               	movf	sqrt@frac,w
  5006  0D24  00CB               	movwf	??_sqrt
  5007  0D25  0861               	movf	sqrt@frac+1,w
  5008  0D26  00CC               	movwf	??_sqrt+1
  5009  0D27  0862               	movf	sqrt@frac+2,w
  5010  0D28  00CD               	movwf	??_sqrt+2
  5011  0D29  0863               	movf	sqrt@frac+3,w
  5012  0D2A  00CE               	movwf	??_sqrt+3
  5013  0D2B  3001               	movlw	1
  5014  0D2C                     u158_25:
  5015  0D2C  1003               	clrc
  5016  0D2D  0CCE               	rrf	??_sqrt+3,f
  5017  0D2E  0CCD               	rrf	??_sqrt+2,f
  5018  0D2F  0CCC               	rrf	??_sqrt+1,f
  5019  0D30  0CCB               	rrf	??_sqrt,f
  5020  0D31                     u158_20:
  5021  0D31  3EFF               	addlw	-1
  5022  0D32  1D03               	skipz
  5023  0D33  2D2C               	goto	u158_25
  5024  0D34  084E               	movf	??_sqrt+3,w
  5025  0D35  00E3               	movwf	sqrt@frac+3
  5026  0D36  084D               	movf	??_sqrt+2,w
  5027  0D37  00E2               	movwf	sqrt@frac+2
  5028  0D38  084C               	movf	??_sqrt+1,w
  5029  0D39  00E1               	movwf	sqrt@frac+1
  5030  0D3A  084B               	movf	??_sqrt,w
  5031  0D3B  00E0               	movwf	sqrt@frac
  5032  0D3C                     i1l1757:
  5033  0D3C  3001               	movlw	1
  5034  0D3D  07DA               	addwf	sqrt@exp,f
  5035  0D3E  1803               	skipnc
  5036  0D3F  0ADB               	incf	sqrt@exp+1,f
  5037  0D40  3000               	movlw	0
  5038  0D41  07DB               	addwf	sqrt@exp+1,f
  5039  0D42                     i1l1759:
  5040  0D42  30FF               	movlw	255
  5041  0D43  0560               	andwf	sqrt@frac,w
  5042  0D44  00DC               	movwf	sqrt@root
  5043  0D45  30FF               	movlw	255
  5044  0D46  0561               	andwf	sqrt@frac+1,w
  5045  0D47  00DD               	movwf	sqrt@root+1
  5046  0D48  307F               	movlw	127
  5047  0D49  0562               	andwf	sqrt@frac+2,w
  5048  0D4A  00DE               	movwf	sqrt@root+2
  5049  0D4B  3000               	movlw	0
  5050  0D4C  0563               	andwf	sqrt@frac+3,w
  5051  0D4D  00DF               	movwf	sqrt@root+3
  5052  0D4E                     i1l1761:
  5053  0D4E  085A               	movf	sqrt@exp,w
  5054  0D4F  00FF               	movwf	btemp+1
  5055  0D50  087F               	movf	btemp+1,w
  5056  0D51  00D5               	movwf	sqrt@p
  5057  0D52                     i1l1763:
  5058  0D52  1C55               	btfss	sqrt@p,0
  5059  0D53  2D55               	goto	u159_21
  5060  0D54  2D56               	goto	u159_20
  5061  0D55                     u159_21:
  5062  0D55  2D57               	goto	i1l1767
  5063  0D56                     u159_20:
  5064  0D56                     i1l1765:
  5065  0D56  17DE               	bsf	sqrt@root+2,7
  5066  0D57                     i1l1767:
  5067  0D57  0855               	movf	sqrt@p,w
  5068  0D58  00CB               	movwf	??_sqrt
  5069  0D59  1003               	clrc
  5070  0D5A  0C4B               	rrf	??_sqrt,w
  5071  0D5B  00FF               	movwf	btemp+1
  5072  0D5C  087F               	movf	btemp+1,w
  5073  0D5D  00DF               	movwf	sqrt@root+3
  5074  0D5E  307F               	movlw	127
  5075  0D5F  00FF               	movwf	btemp+1
  5076  0D60  087F               	movf	btemp+1,w
  5077  0D61  05DF               	andwf	sqrt@root+3,f
  5078  0D62                     i1l1769:
  5079  0D62  085F               	movf	sqrt@root+3,w
  5080  0D63  00CA               	movwf	?_sqrt+3
  5081  0D64  085E               	movf	sqrt@root+2,w
  5082  0D65  00C9               	movwf	?_sqrt+2
  5083  0D66  085D               	movf	sqrt@root+1,w
  5084  0D67  00C8               	movwf	?_sqrt+1
  5085  0D68  085C               	movf	sqrt@root,w
  5086  0D69  00C7               	movwf	?_sqrt
  5087  0D6A                     i1l765:
  5088  0D6A  0008               	return
  5089  0D6B                     __end_of_sqrt:
  5090                           
  5091                           	psect	text20
  5092  063D                     __ptext20:	
  5093 ;; *************** function ___xxtofl *****************
  5094 ;; Defined at:
  5095 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
  5096 ;; Parameters:    Size  Location     Type
  5097 ;;  sign            1    wreg     unsigned char 
  5098 ;;  val             4   25[BANK0 ] long 
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;  sign            1   33[BANK0 ] unsigned char 
  5101 ;;  arg             4   35[BANK0 ] unsigned long 
  5102 ;;  exp             1   34[BANK0 ] unsigned char 
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  4   25[BANK0 ] unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, btemp+1
  5107 ;; Tracked objects:
  5108 ;;		On entry : 0/0
  5109 ;;		On exit  : 0/0
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5112 ;;      Params:         0       4       0       0       0
  5113 ;;      Locals:         0       6       0       0       0
  5114 ;;      Temps:          0       4       0       0       0
  5115 ;;      Totals:         0      14       0       0       0
  5116 ;;Total ram usage:       14 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_GBS_Stepper_Exe
  5122 ;;		_GBS_Stepper_Planner
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function ___xxtofl
  5128  063D                     ___xxtofl:
  5129                           
  5130                           ;incstack = 0
  5131                           ; Regs used in ___xxtofl: [wreg+status,2+status,0+btemp+1]
  5132                           ;___xxtofl@sign stored from wreg
  5133  063D  1283               	bcf	3,5	;RP0=0, select bank0
  5134  063E  1303               	bcf	3,6	;RP1=0, select bank0
  5135  063F  00C1               	movwf	___xxtofl@sign
  5136  0640                     i1l2049:
  5137  0640  0841               	movf	___xxtofl@sign,w
  5138  0641  1903               	btfsc	3,2
  5139  0642  2E44               	goto	u223_21
  5140  0643  2E45               	goto	u223_20
  5141  0644                     u223_21:
  5142  0644  2E59               	goto	i1l2055
  5143  0645                     u223_20:
  5144  0645                     i1l2051:
  5145  0645  1FBC               	btfss	___xxtofl@val+3,7
  5146  0646  2E48               	goto	u224_21
  5147  0647  2E49               	goto	u224_20
  5148  0648                     u224_21:
  5149  0648  2E59               	goto	i1l2055
  5150  0649                     u224_20:
  5151  0649                     i1l2053:
  5152  0649  0939               	comf	___xxtofl@val,w
  5153  064A  00C3               	movwf	___xxtofl@arg
  5154  064B  093A               	comf	___xxtofl@val+1,w
  5155  064C  00C4               	movwf	___xxtofl@arg+1
  5156  064D  093B               	comf	___xxtofl@val+2,w
  5157  064E  00C5               	movwf	___xxtofl@arg+2
  5158  064F  093C               	comf	___xxtofl@val+3,w
  5159  0650  00C6               	movwf	___xxtofl@arg+3
  5160  0651  0AC3               	incf	___xxtofl@arg,f
  5161  0652  1903               	skipnz
  5162  0653  0AC4               	incf	___xxtofl@arg+1,f
  5163  0654  1903               	skipnz
  5164  0655  0AC5               	incf	___xxtofl@arg+2,f
  5165  0656  1903               	skipnz
  5166  0657  0AC6               	incf	___xxtofl@arg+3,f
  5167  0658  2E61               	goto	i1l798
  5168  0659                     i1l2055:
  5169  0659  083C               	movf	___xxtofl@val+3,w
  5170  065A  00C6               	movwf	___xxtofl@arg+3
  5171  065B  083B               	movf	___xxtofl@val+2,w
  5172  065C  00C5               	movwf	___xxtofl@arg+2
  5173  065D  083A               	movf	___xxtofl@val+1,w
  5174  065E  00C4               	movwf	___xxtofl@arg+1
  5175  065F  0839               	movf	___xxtofl@val,w
  5176  0660  00C3               	movwf	___xxtofl@arg
  5177  0661                     i1l798:
  5178  0661  083C               	movf	___xxtofl@val+3,w
  5179  0662  043B               	iorwf	___xxtofl@val+2,w
  5180  0663  043A               	iorwf	___xxtofl@val+1,w
  5181  0664  0439               	iorwf	___xxtofl@val,w
  5182  0665  1D03               	skipz
  5183  0666  2E68               	goto	u225_21
  5184  0667  2E69               	goto	u225_20
  5185  0668                     u225_21:
  5186  0668  2E72               	goto	i1l2061
  5187  0669                     u225_20:
  5188  0669                     i1l2057:
  5189  0669  3000               	movlw	0
  5190  066A  00BC               	movwf	?___xxtofl+3
  5191  066B  3000               	movlw	0
  5192  066C  00BB               	movwf	?___xxtofl+2
  5193  066D  3000               	movlw	0
  5194  066E  00BA               	movwf	?___xxtofl+1
  5195  066F  3000               	movlw	0
  5196  0670  00B9               	movwf	?___xxtofl
  5197  0671  2EF8               	goto	i1l800
  5198  0672                     i1l2061:
  5199  0672  3096               	movlw	150
  5200  0673  00FF               	movwf	btemp+1
  5201  0674  087F               	movf	btemp+1,w
  5202  0675  00C2               	movwf	___xxtofl@exp
  5203  0676  2E84               	goto	i1l2067
  5204  0677                     i1l2063:
  5205  0677  3001               	movlw	1
  5206  0678  00FF               	movwf	btemp+1
  5207  0679  087F               	movf	btemp+1,w
  5208  067A  07C2               	addwf	___xxtofl@exp,f
  5209  067B                     i1l2065:
  5210  067B  3001               	movlw	1
  5211  067C                     u226_25:
  5212  067C  1003               	clrc
  5213  067D  0CC6               	rrf	___xxtofl@arg+3,f
  5214  067E  0CC5               	rrf	___xxtofl@arg+2,f
  5215  067F  0CC4               	rrf	___xxtofl@arg+1,f
  5216  0680  0CC3               	rrf	___xxtofl@arg,f
  5217  0681  3EFF               	addlw	-1
  5218  0682  1D03               	skipz
  5219  0683  2E7C               	goto	u226_25
  5220  0684                     i1l2067:
  5221  0684  30FE               	movlw	254
  5222  0685  0546               	andwf	___xxtofl@arg+3,w
  5223  0686  1D03               	btfss	3,2
  5224  0687  2E89               	goto	u227_21
  5225  0688  2E8A               	goto	u227_20
  5226  0689                     u227_21:
  5227  0689  2E77               	goto	i1l2063
  5228  068A                     u227_20:
  5229  068A  2EA6               	goto	i1l2075
  5230  068B                     i1l2069:
  5231  068B  3001               	movlw	1
  5232  068C  00FF               	movwf	btemp+1
  5233  068D  087F               	movf	btemp+1,w
  5234  068E  07C2               	addwf	___xxtofl@exp,f
  5235  068F                     i1l2071:
  5236  068F  3001               	movlw	1
  5237  0690  07C3               	addwf	___xxtofl@arg,f
  5238  0691  3000               	movlw	0
  5239  0692  1803               	skipnc
  5240  0693  3001               	movlw	1
  5241  0694  07C4               	addwf	___xxtofl@arg+1,f
  5242  0695  3000               	movlw	0
  5243  0696  1803               	skipnc
  5244  0697  3001               	movlw	1
  5245  0698  07C5               	addwf	___xxtofl@arg+2,f
  5246  0699  3000               	movlw	0
  5247  069A  1803               	skipnc
  5248  069B  3001               	movlw	1
  5249  069C  07C6               	addwf	___xxtofl@arg+3,f
  5250  069D                     i1l2073:
  5251  069D  3001               	movlw	1
  5252  069E                     u228_25:
  5253  069E  1003               	clrc
  5254  069F  0CC6               	rrf	___xxtofl@arg+3,f
  5255  06A0  0CC5               	rrf	___xxtofl@arg+2,f
  5256  06A1  0CC4               	rrf	___xxtofl@arg+1,f
  5257  06A2  0CC3               	rrf	___xxtofl@arg,f
  5258  06A3  3EFF               	addlw	-1
  5259  06A4  1D03               	skipz
  5260  06A5  2E9E               	goto	u228_25
  5261  06A6                     i1l2075:
  5262  06A6  30FF               	movlw	255
  5263  06A7  0546               	andwf	___xxtofl@arg+3,w
  5264  06A8  1D03               	btfss	3,2
  5265  06A9  2EAB               	goto	u229_21
  5266  06AA  2EAC               	goto	u229_20
  5267  06AB                     u229_21:
  5268  06AB  2E8B               	goto	i1l2069
  5269  06AC                     u229_20:
  5270  06AC  2EB8               	goto	i1l2079
  5271  06AD                     i1l2077:
  5272  06AD  3001               	movlw	1
  5273  06AE  02C2               	subwf	___xxtofl@exp,f
  5274  06AF  3001               	movlw	1
  5275  06B0  00BD               	movwf	??___xxtofl
  5276  06B1                     u230_25:
  5277  06B1  1003               	clrc
  5278  06B2  0DC3               	rlf	___xxtofl@arg,f
  5279  06B3  0DC4               	rlf	___xxtofl@arg+1,f
  5280  06B4  0DC5               	rlf	___xxtofl@arg+2,f
  5281  06B5  0DC6               	rlf	___xxtofl@arg+3,f
  5282  06B6  0BBD               	decfsz	??___xxtofl,f
  5283  06B7  2EB1               	goto	u230_25
  5284  06B8                     i1l2079:
  5285  06B8  1BC5               	btfsc	___xxtofl@arg+2,7
  5286  06B9  2EBB               	goto	u231_21
  5287  06BA  2EBC               	goto	u231_20
  5288  06BB                     u231_21:
  5289  06BB  2EC2               	goto	i1l811
  5290  06BC                     u231_20:
  5291  06BC                     i1l2081:
  5292  06BC  3002               	movlw	2
  5293  06BD  0242               	subwf	___xxtofl@exp,w
  5294  06BE  1803               	skipnc
  5295  06BF  2EC1               	goto	u232_21
  5296  06C0  2EC2               	goto	u232_20
  5297  06C1                     u232_21:
  5298  06C1  2EAD               	goto	i1l2077
  5299  06C2                     u232_20:
  5300  06C2                     i1l811:
  5301  06C2  1842               	btfsc	___xxtofl@exp,0
  5302  06C3  2EC5               	goto	u233_21
  5303  06C4  2EC6               	goto	u233_20
  5304  06C5                     u233_21:
  5305  06C5  2ECE               	goto	i1l812
  5306  06C6                     u233_20:
  5307  06C6                     i1l2083:
  5308  06C6  30FF               	movlw	255
  5309  06C7  05C3               	andwf	___xxtofl@arg,f
  5310  06C8  30FF               	movlw	255
  5311  06C9  05C4               	andwf	___xxtofl@arg+1,f
  5312  06CA  307F               	movlw	127
  5313  06CB  05C5               	andwf	___xxtofl@arg+2,f
  5314  06CC  30FF               	movlw	255
  5315  06CD  05C6               	andwf	___xxtofl@arg+3,f
  5316  06CE                     i1l812:
  5317  06CE  1003               	clrc
  5318  06CF  0CC2               	rrf	___xxtofl@exp,f
  5319  06D0                     i1l2085:
  5320  06D0  0842               	movf	___xxtofl@exp,w
  5321  06D1  00BD               	movwf	??___xxtofl
  5322  06D2  01BE               	clrf	??___xxtofl+1
  5323  06D3  01BF               	clrf	??___xxtofl+2
  5324  06D4  01C0               	clrf	??___xxtofl+3
  5325  06D5  3018               	movlw	24
  5326  06D6                     u234_25:
  5327  06D6  1003               	clrc
  5328  06D7  0DBD               	rlf	??___xxtofl,f
  5329  06D8  0DBE               	rlf	??___xxtofl+1,f
  5330  06D9  0DBF               	rlf	??___xxtofl+2,f
  5331  06DA  0DC0               	rlf	??___xxtofl+3,f
  5332  06DB                     u234_20:
  5333  06DB  3EFF               	addlw	-1
  5334  06DC  1D03               	skipz
  5335  06DD  2ED6               	goto	u234_25
  5336  06DE  083D               	movf	??___xxtofl,w
  5337  06DF  04C3               	iorwf	___xxtofl@arg,f
  5338  06E0  083E               	movf	??___xxtofl+1,w
  5339  06E1  04C4               	iorwf	___xxtofl@arg+1,f
  5340  06E2  083F               	movf	??___xxtofl+2,w
  5341  06E3  04C5               	iorwf	___xxtofl@arg+2,f
  5342  06E4  0840               	movf	??___xxtofl+3,w
  5343  06E5  04C6               	iorwf	___xxtofl@arg+3,f
  5344  06E6                     i1l2087:
  5345  06E6  0841               	movf	___xxtofl@sign,w
  5346  06E7  1903               	btfsc	3,2
  5347  06E8  2EEA               	goto	u235_21
  5348  06E9  2EEB               	goto	u235_20
  5349  06EA                     u235_21:
  5350  06EA  2EF0               	goto	i1l2093
  5351  06EB                     u235_20:
  5352  06EB                     i1l2089:
  5353  06EB  1FBC               	btfss	___xxtofl@val+3,7
  5354  06EC  2EEE               	goto	u236_21
  5355  06ED  2EEF               	goto	u236_20
  5356  06EE                     u236_21:
  5357  06EE  2EF0               	goto	i1l2093
  5358  06EF                     u236_20:
  5359  06EF                     i1l2091:
  5360  06EF  17C6               	bsf	___xxtofl@arg+3,7
  5361  06F0                     i1l2093:
  5362  06F0  0846               	movf	___xxtofl@arg+3,w
  5363  06F1  00BC               	movwf	?___xxtofl+3
  5364  06F2  0845               	movf	___xxtofl@arg+2,w
  5365  06F3  00BB               	movwf	?___xxtofl+2
  5366  06F4  0844               	movf	___xxtofl@arg+1,w
  5367  06F5  00BA               	movwf	?___xxtofl+1
  5368  06F6  0843               	movf	___xxtofl@arg,w
  5369  06F7  00B9               	movwf	?___xxtofl
  5370  06F8                     i1l800:
  5371  06F8  0008               	return
  5372  06F9                     __end_of___xxtofl:
  5373                           
  5374                           	psect	text21
  5375  0A05                     __ptext21:	
  5376 ;; *************** function ___lmul *****************
  5377 ;; Defined at:
  5378 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
  5379 ;; Parameters:    Size  Location     Type
  5380 ;;  multiplier      4   13[BANK0 ] unsigned long 
  5381 ;;  multiplicand    4   17[BANK0 ] unsigned long 
  5382 ;; Auto vars:     Size  Location     Type
  5383 ;;  product         4   21[BANK0 ] unsigned long 
  5384 ;; Return value:  Size  Location     Type
  5385 ;;                  4   13[BANK0 ] unsigned long 
  5386 ;; Registers used:
  5387 ;;		wreg, status,2, status,0
  5388 ;; Tracked objects:
  5389 ;;		On entry : 0/0
  5390 ;;		On exit  : 0/0
  5391 ;;		Unchanged: 0/0
  5392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5393 ;;      Params:         0       8       0       0       0
  5394 ;;      Locals:         0       4       0       0       0
  5395 ;;      Temps:          1       0       0       0       0
  5396 ;;      Totals:         1      12       0       0       0
  5397 ;;Total ram usage:       13 bytes
  5398 ;; Hardware stack levels used:    1
  5399 ;; This function calls:
  5400 ;;		Nothing
  5401 ;; This function is called by:
  5402 ;;		_GBS_Stepper_Exe
  5403 ;;		_GBS_Stepper_Planner
  5404 ;; This function uses a non-reentrant model
  5405 ;;
  5406                           
  5407                           
  5408                           ;psect for function ___lmul
  5409  0A05                     ___lmul:
  5410  0A05                     i1l1773:	
  5411                           ;incstack = 0
  5412                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5413                           
  5414  0A05  3000               	movlw	0
  5415  0A06  1283               	bcf	3,5	;RP0=0, select bank0
  5416  0A07  1303               	bcf	3,6	;RP1=0, select bank0
  5417  0A08  00B8               	movwf	___lmul@product+3
  5418  0A09  3000               	movlw	0
  5419  0A0A  00B7               	movwf	___lmul@product+2
  5420  0A0B  3000               	movlw	0
  5421  0A0C  00B6               	movwf	___lmul@product+1
  5422  0A0D  3000               	movlw	0
  5423  0A0E  00B5               	movwf	___lmul@product
  5424  0A0F                     i1l1775:
  5425  0A0F  1C2D               	btfss	___lmul@multiplier,0
  5426  0A10  2A12               	goto	u160_21
  5427  0A11  2A13               	goto	u160_20
  5428  0A12                     u160_21:
  5429  0A12  2A2A               	goto	i1l1779
  5430  0A13                     u160_20:
  5431  0A13                     i1l1777:
  5432  0A13  0831               	movf	___lmul@multiplicand,w
  5433  0A14  07B5               	addwf	___lmul@product,f
  5434  0A15  0832               	movf	___lmul@multiplicand+1,w
  5435  0A16  1103               	clrz
  5436  0A17  1803               	skipnc
  5437  0A18  3E01               	addlw	1
  5438  0A19  1903               	skipnz
  5439  0A1A  2A1C               	goto	u161_21
  5440  0A1B  07B6               	addwf	___lmul@product+1,f
  5441  0A1C                     u161_21:
  5442  0A1C  0833               	movf	___lmul@multiplicand+2,w
  5443  0A1D  1103               	clrz
  5444  0A1E  1803               	skipnc
  5445  0A1F  3E01               	addlw	1
  5446  0A20  1903               	skipnz
  5447  0A21  2A23               	goto	u161_22
  5448  0A22  07B7               	addwf	___lmul@product+2,f
  5449  0A23                     u161_22:
  5450  0A23  0834               	movf	___lmul@multiplicand+3,w
  5451  0A24  1103               	clrz
  5452  0A25  1803               	skipnc
  5453  0A26  3E01               	addlw	1
  5454  0A27  1903               	skipnz
  5455  0A28  2A2A               	goto	u161_23
  5456  0A29  07B8               	addwf	___lmul@product+3,f
  5457  0A2A                     u161_23:
  5458  0A2A                     i1l1779:
  5459  0A2A  3001               	movlw	1
  5460  0A2B  00FA               	movwf	??___lmul
  5461  0A2C                     u162_25:
  5462  0A2C  1003               	clrc
  5463  0A2D  0DB1               	rlf	___lmul@multiplicand,f
  5464  0A2E  0DB2               	rlf	___lmul@multiplicand+1,f
  5465  0A2F  0DB3               	rlf	___lmul@multiplicand+2,f
  5466  0A30  0DB4               	rlf	___lmul@multiplicand+3,f
  5467  0A31  0BFA               	decfsz	??___lmul,f
  5468  0A32  2A2C               	goto	u162_25
  5469  0A33                     i1l1781:
  5470  0A33  3001               	movlw	1
  5471  0A34                     u163_25:
  5472  0A34  1003               	clrc
  5473  0A35  0CB0               	rrf	___lmul@multiplier+3,f
  5474  0A36  0CAF               	rrf	___lmul@multiplier+2,f
  5475  0A37  0CAE               	rrf	___lmul@multiplier+1,f
  5476  0A38  0CAD               	rrf	___lmul@multiplier,f
  5477  0A39  3EFF               	addlw	-1
  5478  0A3A  1D03               	skipz
  5479  0A3B  2A34               	goto	u163_25
  5480  0A3C  0830               	movf	___lmul@multiplier+3,w
  5481  0A3D  042F               	iorwf	___lmul@multiplier+2,w
  5482  0A3E  042E               	iorwf	___lmul@multiplier+1,w
  5483  0A3F  042D               	iorwf	___lmul@multiplier,w
  5484  0A40  1D03               	skipz
  5485  0A41  2A43               	goto	u164_21
  5486  0A42  2A44               	goto	u164_20
  5487  0A43                     u164_21:
  5488  0A43  2A0F               	goto	i1l1775
  5489  0A44                     u164_20:
  5490  0A44                     i1l1783:
  5491  0A44  0838               	movf	___lmul@product+3,w
  5492  0A45  00B0               	movwf	?___lmul+3
  5493  0A46  0837               	movf	___lmul@product+2,w
  5494  0A47  00AF               	movwf	?___lmul+2
  5495  0A48  0836               	movf	___lmul@product+1,w
  5496  0A49  00AE               	movwf	?___lmul+1
  5497  0A4A  0835               	movf	___lmul@product,w
  5498  0A4B  00AD               	movwf	?___lmul
  5499  0A4C                     i1l359:
  5500  0A4C  0008               	return
  5501  0A4D                     __end_of___lmul:
  5502                           
  5503                           	psect	text22
  5504  0796                     __ptext22:	
  5505 ;; *************** function ___lldiv *****************
  5506 ;; Defined at:
  5507 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
  5508 ;; Parameters:    Size  Location     Type
  5509 ;;  divisor         4    0[BANK0 ] unsigned long 
  5510 ;;  dividend        4    4[BANK0 ] unsigned long 
  5511 ;; Auto vars:     Size  Location     Type
  5512 ;;  quotient        4    8[BANK0 ] unsigned long 
  5513 ;;  counter         1   12[BANK0 ] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;                  4    0[BANK0 ] unsigned long 
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, btemp+1
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5523 ;;      Params:         0       8       0       0       0
  5524 ;;      Locals:         0       5       0       0       0
  5525 ;;      Temps:          1       0       0       0       0
  5526 ;;      Totals:         1      13       0       0       0
  5527 ;;Total ram usage:       14 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; This function calls:
  5530 ;;		Nothing
  5531 ;; This function is called by:
  5532 ;;		_GBS_Stepper_Exe
  5533 ;; This function uses a non-reentrant model
  5534 ;;
  5535                           
  5536                           
  5537                           ;psect for function ___lldiv
  5538  0796                     ___lldiv:
  5539  0796                     i1l1803:	
  5540                           ;incstack = 0
  5541                           ; Regs used in ___lldiv: [wreg+status,2+status,0+btemp+1]
  5542                           
  5543  0796  3000               	movlw	0
  5544  0797  1283               	bcf	3,5	;RP0=0, select bank0
  5545  0798  1303               	bcf	3,6	;RP1=0, select bank0
  5546  0799  00AB               	movwf	___lldiv@quotient+3
  5547  079A  3000               	movlw	0
  5548  079B  00AA               	movwf	___lldiv@quotient+2
  5549  079C  3000               	movlw	0
  5550  079D  00A9               	movwf	___lldiv@quotient+1
  5551  079E  3000               	movlw	0
  5552  079F  00A8               	movwf	___lldiv@quotient
  5553  07A0  0823               	movf	___lldiv@divisor+3,w
  5554  07A1  0422               	iorwf	___lldiv@divisor+2,w
  5555  07A2  0421               	iorwf	___lldiv@divisor+1,w
  5556  07A3  0420               	iorwf	___lldiv@divisor,w
  5557  07A4  1903               	skipnz
  5558  07A5  2FA7               	goto	u167_21
  5559  07A6  2FA8               	goto	u167_20
  5560  07A7                     u167_21:
  5561  07A7  2FF5               	goto	i1l1825
  5562  07A8                     u167_20:
  5563  07A8                     i1l1805:
  5564  07A8  01AC               	clrf	___lldiv@counter
  5565  07A9  0AAC               	incf	___lldiv@counter,f
  5566  07AA  2FB8               	goto	i1l1811
  5567  07AB                     i1l1807:
  5568  07AB  3001               	movlw	1
  5569  07AC  00F9               	movwf	??___lldiv
  5570  07AD                     u168_25:
  5571  07AD  1003               	clrc
  5572  07AE  0DA0               	rlf	___lldiv@divisor,f
  5573  07AF  0DA1               	rlf	___lldiv@divisor+1,f
  5574  07B0  0DA2               	rlf	___lldiv@divisor+2,f
  5575  07B1  0DA3               	rlf	___lldiv@divisor+3,f
  5576  07B2  0BF9               	decfsz	??___lldiv,f
  5577  07B3  2FAD               	goto	u168_25
  5578  07B4                     i1l1809:
  5579  07B4  3001               	movlw	1
  5580  07B5  00FF               	movwf	btemp+1
  5581  07B6  087F               	movf	btemp+1,w
  5582  07B7  07AC               	addwf	___lldiv@counter,f
  5583  07B8                     i1l1811:
  5584  07B8  1FA3               	btfss	___lldiv@divisor+3,7
  5585  07B9  2FBB               	goto	u169_21
  5586  07BA  2FBC               	goto	u169_20
  5587  07BB                     u169_21:
  5588  07BB  2FAB               	goto	i1l1807
  5589  07BC                     u169_20:
  5590  07BC                     i1l1813:
  5591  07BC  3001               	movlw	1
  5592  07BD  00F9               	movwf	??___lldiv
  5593  07BE                     u170_25:
  5594  07BE  1003               	clrc
  5595  07BF  0DA8               	rlf	___lldiv@quotient,f
  5596  07C0  0DA9               	rlf	___lldiv@quotient+1,f
  5597  07C1  0DAA               	rlf	___lldiv@quotient+2,f
  5598  07C2  0DAB               	rlf	___lldiv@quotient+3,f
  5599  07C3  0BF9               	decfsz	??___lldiv,f
  5600  07C4  2FBE               	goto	u170_25
  5601  07C5                     i1l1815:
  5602  07C5  0823               	movf	___lldiv@divisor+3,w
  5603  07C6  0227               	subwf	___lldiv@dividend+3,w
  5604  07C7  1D03               	skipz
  5605  07C8  2FD3               	goto	u171_25
  5606  07C9  0822               	movf	___lldiv@divisor+2,w
  5607  07CA  0226               	subwf	___lldiv@dividend+2,w
  5608  07CB  1D03               	skipz
  5609  07CC  2FD3               	goto	u171_25
  5610  07CD  0821               	movf	___lldiv@divisor+1,w
  5611  07CE  0225               	subwf	___lldiv@dividend+1,w
  5612  07CF  1D03               	skipz
  5613  07D0  2FD3               	goto	u171_25
  5614  07D1  0820               	movf	___lldiv@divisor,w
  5615  07D2  0224               	subwf	___lldiv@dividend,w
  5616  07D3                     u171_25:
  5617  07D3  1C03               	skipc
  5618  07D4  2FD6               	goto	u171_21
  5619  07D5  2FD7               	goto	u171_20
  5620  07D6                     u171_21:
  5621  07D6  2FE6               	goto	i1l1821
  5622  07D7                     u171_20:
  5623  07D7                     i1l1817:
  5624  07D7  0820               	movf	___lldiv@divisor,w
  5625  07D8  02A4               	subwf	___lldiv@dividend,f
  5626  07D9  0821               	movf	___lldiv@divisor+1,w
  5627  07DA  1C03               	skipc
  5628  07DB  0F21               	incfsz	___lldiv@divisor+1,w
  5629  07DC  02A5               	subwf	___lldiv@dividend+1,f
  5630  07DD  0822               	movf	___lldiv@divisor+2,w
  5631  07DE  1C03               	skipc
  5632  07DF  0F22               	incfsz	___lldiv@divisor+2,w
  5633  07E0  02A6               	subwf	___lldiv@dividend+2,f
  5634  07E1  0823               	movf	___lldiv@divisor+3,w
  5635  07E2  1C03               	skipc
  5636  07E3  0F23               	incfsz	___lldiv@divisor+3,w
  5637  07E4  02A7               	subwf	___lldiv@dividend+3,f
  5638  07E5                     i1l1819:
  5639  07E5  1428               	bsf	___lldiv@quotient,0
  5640  07E6                     i1l1821:
  5641  07E6  3001               	movlw	1
  5642  07E7                     u172_25:
  5643  07E7  1003               	clrc
  5644  07E8  0CA3               	rrf	___lldiv@divisor+3,f
  5645  07E9  0CA2               	rrf	___lldiv@divisor+2,f
  5646  07EA  0CA1               	rrf	___lldiv@divisor+1,f
  5647  07EB  0CA0               	rrf	___lldiv@divisor,f
  5648  07EC  3EFF               	addlw	-1
  5649  07ED  1D03               	skipz
  5650  07EE  2FE7               	goto	u172_25
  5651  07EF                     i1l1823:
  5652  07EF  3001               	movlw	1
  5653  07F0  02AC               	subwf	___lldiv@counter,f
  5654  07F1  1D03               	btfss	3,2
  5655  07F2  2FF4               	goto	u173_21
  5656  07F3  2FF5               	goto	u173_20
  5657  07F4                     u173_21:
  5658  07F4  2FBC               	goto	i1l1813
  5659  07F5                     u173_20:
  5660  07F5                     i1l1825:
  5661  07F5  082B               	movf	___lldiv@quotient+3,w
  5662  07F6  00A3               	movwf	?___lldiv+3
  5663  07F7  082A               	movf	___lldiv@quotient+2,w
  5664  07F8  00A2               	movwf	?___lldiv+2
  5665  07F9  0829               	movf	___lldiv@quotient+1,w
  5666  07FA  00A1               	movwf	?___lldiv+1
  5667  07FB  0828               	movf	___lldiv@quotient,w
  5668  07FC  00A0               	movwf	?___lldiv
  5669  07FD                     i1l381:
  5670  07FD  0008               	return
  5671  07FE                     __end_of___lldiv:
  5672                           
  5673                           	psect	text23
  5674  0AF8                     __ptext23:	
  5675 ;; *************** function ___fltol *****************
  5676 ;; Defined at:
  5677 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;  f1              4   18[BANK1 ] unsigned long 
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  exp1            1   12[COMMON] unsigned char 
  5682 ;;  sign1           1   11[COMMON] unsigned char 
  5683 ;; Return value:  Size  Location     Type
  5684 ;;                  4   18[BANK1 ] long 
  5685 ;; Registers used:
  5686 ;;		wreg, status,2, status,0, btemp+1
  5687 ;; Tracked objects:
  5688 ;;		On entry : 0/0
  5689 ;;		On exit  : 0/0
  5690 ;;		Unchanged: 0/0
  5691 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5692 ;;      Params:         0       0       4       0       0
  5693 ;;      Locals:         2       0       0       0       0
  5694 ;;      Temps:          0       4       0       0       0
  5695 ;;      Totals:         2       4       4       0       0
  5696 ;;Total ram usage:       10 bytes
  5697 ;; Hardware stack levels used:    1
  5698 ;; This function calls:
  5699 ;;		Nothing
  5700 ;; This function is called by:
  5701 ;;		_GBS_Stepper_Exe
  5702 ;;		_GBS_Stepper_Planner
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function ___fltol
  5708  0AF8                     ___fltol:
  5709  0AF8                     i1l1867:	
  5710                           ;incstack = 0
  5711                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  5712                           
  5713  0AF8  1003               	clrc
  5714  0AF9  1683               	bsf	3,5	;RP0=1, select bank1
  5715  0AFA  1303               	bcf	3,6	;RP1=0, select bank1
  5716  0AFB  0D34               	rlf	(___fltol@f1+2)^(0+128),w
  5717  0AFC  0D35               	rlf	(___fltol@f1+3)^(0+128),w
  5718  0AFD  00FF               	movwf	btemp+1
  5719  0AFE  087F               	movf	btemp+1,w
  5720  0AFF  00FC               	movwf	___fltol@exp1
  5721  0B00  087C               	movf	___fltol@exp1,w
  5722  0B01  1D03               	btfss	3,2
  5723  0B02  2B04               	goto	u183_21
  5724  0B03  2B05               	goto	u183_20
  5725  0B04                     u183_21:
  5726  0B04  2B0E               	goto	i1l1873
  5727  0B05                     u183_20:
  5728  0B05                     i1l1869:
  5729  0B05  3000               	movlw	0
  5730  0B06  00B5               	movwf	(?___fltol+3)^(0+128)
  5731  0B07  3000               	movlw	0
  5732  0B08  00B4               	movwf	(?___fltol+2)^(0+128)
  5733  0B09  3000               	movlw	0
  5734  0B0A  00B3               	movwf	(?___fltol+1)^(0+128)
  5735  0B0B  3000               	movlw	0
  5736  0B0C  00B2               	movwf	?___fltol^(0+128)
  5737  0B0D  2B8A               	goto	i1l531
  5738  0B0E                     i1l1873:
  5739  0B0E  0832               	movf	___fltol@f1^(0+128),w
  5740  0B0F  1283               	bcf	3,5	;RP0=0, select bank0
  5741  0B10  1303               	bcf	3,6	;RP1=0, select bank0
  5742  0B11  00EC               	movwf	??___fltol
  5743  0B12  1683               	bsf	3,5	;RP0=1, select bank1
  5744  0B13  1303               	bcf	3,6	;RP1=0, select bank1
  5745  0B14  0833               	movf	(___fltol@f1+1)^(0+128),w
  5746  0B15  1283               	bcf	3,5	;RP0=0, select bank0
  5747  0B16  1303               	bcf	3,6	;RP1=0, select bank0
  5748  0B17  00ED               	movwf	??___fltol+1
  5749  0B18  1683               	bsf	3,5	;RP0=1, select bank1
  5750  0B19  1303               	bcf	3,6	;RP1=0, select bank1
  5751  0B1A  0834               	movf	(___fltol@f1+2)^(0+128),w
  5752  0B1B  1283               	bcf	3,5	;RP0=0, select bank0
  5753  0B1C  1303               	bcf	3,6	;RP1=0, select bank0
  5754  0B1D  00EE               	movwf	??___fltol+2
  5755  0B1E  1683               	bsf	3,5	;RP0=1, select bank1
  5756  0B1F  1303               	bcf	3,6	;RP1=0, select bank1
  5757  0B20  0835               	movf	(___fltol@f1+3)^(0+128),w
  5758  0B21  1283               	bcf	3,5	;RP0=0, select bank0
  5759  0B22  1303               	bcf	3,6	;RP1=0, select bank0
  5760  0B23  00EF               	movwf	??___fltol+3
  5761  0B24  301F               	movlw	31
  5762  0B25                     u184_25:
  5763  0B25  1003               	clrc
  5764  0B26  0CEF               	rrf	??___fltol+3,f
  5765  0B27  0CEE               	rrf	??___fltol+2,f
  5766  0B28  0CED               	rrf	??___fltol+1,f
  5767  0B29  0CEC               	rrf	??___fltol,f
  5768  0B2A                     u184_20:
  5769  0B2A  3EFF               	addlw	-1
  5770  0B2B  1D03               	skipz
  5771  0B2C  2B25               	goto	u184_25
  5772  0B2D  086C               	movf	??___fltol,w
  5773  0B2E  00FF               	movwf	btemp+1
  5774  0B2F  087F               	movf	btemp+1,w
  5775  0B30  00FB               	movwf	___fltol@sign1
  5776  0B31                     i1l1875:
  5777  0B31  1683               	bsf	3,5	;RP0=1, select bank1
  5778  0B32  1303               	bcf	3,6	;RP1=0, select bank1
  5779  0B33  17B4               	bsf	(___fltol@f1^(0+128)+2),7
  5780  0B34                     i1l1877:
  5781  0B34  30FF               	movlw	255
  5782  0B35  05B2               	andwf	___fltol@f1^(0+128),f
  5783  0B36  30FF               	movlw	255
  5784  0B37  05B3               	andwf	(___fltol@f1+1)^(0+128),f
  5785  0B38  30FF               	movlw	255
  5786  0B39  05B4               	andwf	(___fltol@f1+2)^(0+128),f
  5787  0B3A  3000               	movlw	0
  5788  0B3B  05B5               	andwf	(___fltol@f1+3)^(0+128),f
  5789  0B3C                     i1l1879:
  5790  0B3C  3096               	movlw	150
  5791  0B3D  02FC               	subwf	___fltol@exp1,f
  5792  0B3E                     i1l1881:
  5793  0B3E  1FFC               	btfss	___fltol@exp1,7
  5794  0B3F  2B41               	goto	u185_21
  5795  0B40  2B42               	goto	u185_20
  5796  0B41                     u185_21:
  5797  0B41  2B5C               	goto	i1l1893
  5798  0B42                     u185_20:
  5799  0B42                     i1l1883:
  5800  0B42  087C               	movf	___fltol@exp1,w
  5801  0B43  3A80               	xorlw	128
  5802  0B44  3E97               	addlw	151
  5803  0B45  1803               	skipnc
  5804  0B46  2B48               	goto	u186_21
  5805  0B47  2B49               	goto	u186_20
  5806  0B48                     u186_21:
  5807  0B48  2B4A               	goto	i1l1889
  5808  0B49                     u186_20:
  5809  0B49  2B05               	goto	i1l1869
  5810  0B4A                     i1l1889:
  5811  0B4A  3001               	movlw	1
  5812  0B4B                     u187_25:
  5813  0B4B  1003               	clrc
  5814  0B4C  0CB5               	rrf	(___fltol@f1+3)^(0+128),f
  5815  0B4D  0CB4               	rrf	(___fltol@f1+2)^(0+128),f
  5816  0B4E  0CB3               	rrf	(___fltol@f1+1)^(0+128),f
  5817  0B4F  0CB2               	rrf	___fltol@f1^(0+128),f
  5818  0B50  3EFF               	addlw	-1
  5819  0B51  1D03               	skipz
  5820  0B52  2B4B               	goto	u187_25
  5821  0B53                     i1l1891:
  5822  0B53  3001               	movlw	1
  5823  0B54  00FF               	movwf	btemp+1
  5824  0B55  087F               	movf	btemp+1,w
  5825  0B56  07FC               	addwf	___fltol@exp1,f
  5826  0B57  1D03               	btfss	3,2
  5827  0B58  2B5A               	goto	u188_21
  5828  0B59  2B5B               	goto	u188_20
  5829  0B5A                     u188_21:
  5830  0B5A  2B4A               	goto	i1l1889
  5831  0B5B                     u188_20:
  5832  0B5B  2B78               	goto	i1l1901
  5833  0B5C                     i1l1893:
  5834  0B5C  3020               	movlw	32
  5835  0B5D  027C               	subwf	___fltol@exp1,w
  5836  0B5E  1C03               	skipc
  5837  0B5F  2B61               	goto	u189_21
  5838  0B60  2B62               	goto	u189_20
  5839  0B61                     u189_21:
  5840  0B61  2B73               	goto	i1l538
  5841  0B62                     u189_20:
  5842  0B62  2B05               	goto	i1l1869
  5843  0B63                     i1l1899:
  5844  0B63  3001               	movlw	1
  5845  0B64  1283               	bcf	3,5	;RP0=0, select bank0
  5846  0B65  00EC               	movwf	??___fltol
  5847  0B66                     u190_25:
  5848  0B66  1003               	clrc
  5849  0B67  1683               	bsf	3,5	;RP0=1, select bank1
  5850  0B68  1303               	bcf	3,6	;RP1=0, select bank1
  5851  0B69  0DB2               	rlf	___fltol@f1^(0+128),f
  5852  0B6A  0DB3               	rlf	(___fltol@f1+1)^(0+128),f
  5853  0B6B  0DB4               	rlf	(___fltol@f1+2)^(0+128),f
  5854  0B6C  0DB5               	rlf	(___fltol@f1+3)^(0+128),f
  5855  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  5856  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  5857  0B6F  0BEC               	decfsz	??___fltol,f
  5858  0B70  2B66               	goto	u190_25
  5859  0B71  3001               	movlw	1
  5860  0B72  02FC               	subwf	___fltol@exp1,f
  5861  0B73                     i1l538:
  5862  0B73  087C               	movf	___fltol@exp1,w
  5863  0B74  1D03               	btfss	3,2
  5864  0B75  2B77               	goto	u191_21
  5865  0B76  2B78               	goto	u191_20
  5866  0B77                     u191_21:
  5867  0B77  2B63               	goto	i1l1899
  5868  0B78                     u191_20:
  5869  0B78                     i1l1901:
  5870  0B78  087B               	movf	___fltol@sign1,w
  5871  0B79  1903               	btfsc	3,2
  5872  0B7A  2B7C               	goto	u192_21
  5873  0B7B  2B7D               	goto	u192_20
  5874  0B7C                     u192_21:
  5875  0B7C  2B8A               	goto	i1l541
  5876  0B7D                     u192_20:
  5877  0B7D                     i1l1903:
  5878  0B7D  1683               	bsf	3,5	;RP0=1, select bank1
  5879  0B7E  1303               	bcf	3,6	;RP1=0, select bank1
  5880  0B7F  09B2               	comf	___fltol@f1^(0+128),f
  5881  0B80  09B3               	comf	(___fltol@f1+1)^(0+128),f
  5882  0B81  09B4               	comf	(___fltol@f1+2)^(0+128),f
  5883  0B82  09B5               	comf	(___fltol@f1+3)^(0+128),f
  5884  0B83  0AB2               	incf	___fltol@f1^(0+128),f
  5885  0B84  1903               	skipnz
  5886  0B85  0AB3               	incf	(___fltol@f1+1)^(0+128),f
  5887  0B86  1903               	skipnz
  5888  0B87  0AB4               	incf	(___fltol@f1+2)^(0+128),f
  5889  0B88  1903               	skipnz
  5890  0B89  0AB5               	incf	(___fltol@f1+3)^(0+128),f
  5891  0B8A                     i1l541:
  5892  0B8A                     i1l531:
  5893  0B8A  0008               	return
  5894  0B8B                     __end_of___fltol:
  5895                           
  5896                           	psect	text24
  5897  0D6B                     __ptext24:	
  5898 ;; *************** function ___fldiv *****************
  5899 ;; Defined at:
  5900 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
  5901 ;; Parameters:    Size  Location     Type
  5902 ;;  a               4   68[BANK0 ] long 
  5903 ;;  b               4   72[BANK0 ] long 
  5904 ;; Auto vars:     Size  Location     Type
  5905 ;;  grs             4   12[BANK1 ] unsigned long 
  5906 ;;  rem             4    5[BANK1 ] unsigned long 
  5907 ;;  new_exp         2   10[BANK1 ] int 
  5908 ;;  aexp            1   17[BANK1 ] unsigned char 
  5909 ;;  bexp            1   16[BANK1 ] unsigned char 
  5910 ;;  sign            1    9[BANK1 ] unsigned char 
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  4   68[BANK0 ] unsigned char 
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0, btemp+1
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5920 ;;      Params:         0       8       0       0       0
  5921 ;;      Locals:         0       0      13       0       0
  5922 ;;      Temps:          0       0       5       0       0
  5923 ;;      Totals:         0       8      18       0       0
  5924 ;;Total ram usage:       26 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; This function calls:
  5927 ;;		Nothing
  5928 ;; This function is called by:
  5929 ;;		_GBS_Stepper_Exe
  5930 ;;		_GBS_Stepper_Planner
  5931 ;; This function uses a non-reentrant model
  5932 ;;
  5933                           
  5934                           
  5935                           ;psect for function ___fldiv
  5936  0D6B                     ___fldiv:
  5937  0D6B                     i1l1905:	
  5938                           ;incstack = 0
  5939                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  5940                           
  5941  0D6B  1283               	bcf	3,5	;RP0=0, select bank0
  5942  0D6C  1303               	bcf	3,6	;RP1=0, select bank0
  5943  0D6D  086B               	movf	___fldiv@b+3,w
  5944  0D6E  3980               	andlw	128
  5945  0D6F  00FF               	movwf	btemp+1
  5946  0D70  087F               	movf	btemp+1,w
  5947  0D71  1683               	bsf	3,5	;RP0=1, select bank1
  5948  0D72  1303               	bcf	3,6	;RP1=0, select bank1
  5949  0D73  00A9               	movwf	___fldiv@sign^(0+128)
  5950  0D74                     i1l1907:
  5951  0D74  1283               	bcf	3,5	;RP0=0, select bank0
  5952  0D75  1303               	bcf	3,6	;RP1=0, select bank0
  5953  0D76  086B               	movf	___fldiv@b+3,w
  5954  0D77  1683               	bsf	3,5	;RP0=1, select bank1
  5955  0D78  1303               	bcf	3,6	;RP1=0, select bank1
  5956  0D79  00A0               	movwf	??___fldiv^(0+128)
  5957  0D7A  0720               	addwf	??___fldiv^(0+128),w
  5958  0D7B  00FF               	movwf	btemp+1
  5959  0D7C  087F               	movf	btemp+1,w
  5960  0D7D  00B0               	movwf	___fldiv@bexp^(0+128)
  5961  0D7E                     i1l1909:
  5962  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  5963  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  5964  0D80  1FEA               	btfss	___fldiv@b+2,7
  5965  0D81  2D83               	goto	u193_21
  5966  0D82  2D84               	goto	u193_20
  5967  0D83                     u193_21:
  5968  0D83  2D87               	goto	i1l1913
  5969  0D84                     u193_20:
  5970  0D84                     i1l1911:
  5971  0D84  1683               	bsf	3,5	;RP0=1, select bank1
  5972  0D85  1303               	bcf	3,6	;RP1=0, select bank1
  5973  0D86  1430               	bsf	___fldiv@bexp^(0+128),0
  5974  0D87                     i1l1913:
  5975  0D87  1683               	bsf	3,5	;RP0=1, select bank1
  5976  0D88  1303               	bcf	3,6	;RP1=0, select bank1
  5977  0D89  0830               	movf	___fldiv@bexp^(0+128),w
  5978  0D8A  1903               	btfsc	3,2
  5979  0D8B  2D8D               	goto	u194_21
  5980  0D8C  2D8E               	goto	u194_20
  5981  0D8D                     u194_21:
  5982  0D8D  2DA1               	goto	i1l1923
  5983  0D8E                     u194_20:
  5984  0D8E                     i1l1915:
  5985  0D8E  0A30               	incf	___fldiv@bexp^(0+128),w
  5986  0D8F  1D03               	btfss	3,2
  5987  0D90  2D92               	goto	u195_21
  5988  0D91  2D93               	goto	u195_20
  5989  0D92                     u195_21:
  5990  0D92  2D9D               	goto	i1l1919
  5991  0D93                     u195_20:
  5992  0D93                     i1l1917:
  5993  0D93  3000               	movlw	0
  5994  0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5995  0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5996  0D96  00EB               	movwf	___fldiv@b+3
  5997  0D97  3000               	movlw	0
  5998  0D98  00EA               	movwf	___fldiv@b+2
  5999  0D99  3000               	movlw	0
  6000  0D9A  00E9               	movwf	___fldiv@b+1
  6001  0D9B  3000               	movlw	0
  6002  0D9C  00E8               	movwf	___fldiv@b
  6003  0D9D                     i1l1919:
  6004  0D9D  1283               	bcf	3,5	;RP0=0, select bank0
  6005  0D9E  17EA               	bsf	___fldiv@b+2,7
  6006  0D9F                     i1l1921:
  6007  0D9F  01EB               	clrf	___fldiv@b+3
  6008  0DA0  2DAB               	goto	i1l1925
  6009  0DA1                     i1l1923:
  6010  0DA1  3000               	movlw	0
  6011  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  6012  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  6013  0DA4  00EB               	movwf	___fldiv@b+3
  6014  0DA5  3000               	movlw	0
  6015  0DA6  00EA               	movwf	___fldiv@b+2
  6016  0DA7  3000               	movlw	0
  6017  0DA8  00E9               	movwf	___fldiv@b+1
  6018  0DA9  3000               	movlw	0
  6019  0DAA  00E8               	movwf	___fldiv@b
  6020  0DAB                     i1l1925:
  6021  0DAB  0867               	movf	___fldiv@a+3,w
  6022  0DAC  3980               	andlw	128
  6023  0DAD  00FF               	movwf	btemp+1
  6024  0DAE  087F               	movf	btemp+1,w
  6025  0DAF  1683               	bsf	3,5	;RP0=1, select bank1
  6026  0DB0  1303               	bcf	3,6	;RP1=0, select bank1
  6027  0DB1  06A9               	xorwf	___fldiv@sign^(0+128),f
  6028  0DB2                     i1l1927:
  6029  0DB2  1283               	bcf	3,5	;RP0=0, select bank0
  6030  0DB3  1303               	bcf	3,6	;RP1=0, select bank0
  6031  0DB4  0867               	movf	___fldiv@a+3,w
  6032  0DB5  1683               	bsf	3,5	;RP0=1, select bank1
  6033  0DB6  1303               	bcf	3,6	;RP1=0, select bank1
  6034  0DB7  00A0               	movwf	??___fldiv^(0+128)
  6035  0DB8  0720               	addwf	??___fldiv^(0+128),w
  6036  0DB9  00FF               	movwf	btemp+1
  6037  0DBA  087F               	movf	btemp+1,w
  6038  0DBB  00B1               	movwf	___fldiv@aexp^(0+128)
  6039  0DBC                     i1l1929:
  6040  0DBC  1283               	bcf	3,5	;RP0=0, select bank0
  6041  0DBD  1303               	bcf	3,6	;RP1=0, select bank0
  6042  0DBE  1FE6               	btfss	___fldiv@a+2,7
  6043  0DBF  2DC1               	goto	u196_21
  6044  0DC0  2DC2               	goto	u196_20
  6045  0DC1                     u196_21:
  6046  0DC1  2DC5               	goto	i1l1933
  6047  0DC2                     u196_20:
  6048  0DC2                     i1l1931:
  6049  0DC2  1683               	bsf	3,5	;RP0=1, select bank1
  6050  0DC3  1303               	bcf	3,6	;RP1=0, select bank1
  6051  0DC4  1431               	bsf	___fldiv@aexp^(0+128),0
  6052  0DC5                     i1l1933:
  6053  0DC5  1683               	bsf	3,5	;RP0=1, select bank1
  6054  0DC6  1303               	bcf	3,6	;RP1=0, select bank1
  6055  0DC7  0831               	movf	___fldiv@aexp^(0+128),w
  6056  0DC8  1903               	btfsc	3,2
  6057  0DC9  2DCB               	goto	u197_21
  6058  0DCA  2DCC               	goto	u197_20
  6059  0DCB                     u197_21:
  6060  0DCB  2DDF               	goto	i1l1943
  6061  0DCC                     u197_20:
  6062  0DCC                     i1l1935:
  6063  0DCC  0A31               	incf	___fldiv@aexp^(0+128),w
  6064  0DCD  1D03               	btfss	3,2
  6065  0DCE  2DD0               	goto	u198_21
  6066  0DCF  2DD1               	goto	u198_20
  6067  0DD0                     u198_21:
  6068  0DD0  2DDB               	goto	i1l1939
  6069  0DD1                     u198_20:
  6070  0DD1                     i1l1937:
  6071  0DD1  3000               	movlw	0
  6072  0DD2  1283               	bcf	3,5	;RP0=0, select bank0
  6073  0DD3  1303               	bcf	3,6	;RP1=0, select bank0
  6074  0DD4  00E7               	movwf	___fldiv@a+3
  6075  0DD5  3000               	movlw	0
  6076  0DD6  00E6               	movwf	___fldiv@a+2
  6077  0DD7  3000               	movlw	0
  6078  0DD8  00E5               	movwf	___fldiv@a+1
  6079  0DD9  3000               	movlw	0
  6080  0DDA  00E4               	movwf	___fldiv@a
  6081  0DDB                     i1l1939:
  6082  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  6083  0DDC  17E6               	bsf	___fldiv@a+2,7
  6084  0DDD                     i1l1941:
  6085  0DDD  01E7               	clrf	___fldiv@a+3
  6086  0DDE  2DE9               	goto	i1l694
  6087  0DDF                     i1l1943:
  6088  0DDF  3000               	movlw	0
  6089  0DE0  1283               	bcf	3,5	;RP0=0, select bank0
  6090  0DE1  1303               	bcf	3,6	;RP1=0, select bank0
  6091  0DE2  00E7               	movwf	___fldiv@a+3
  6092  0DE3  3000               	movlw	0
  6093  0DE4  00E6               	movwf	___fldiv@a+2
  6094  0DE5  3000               	movlw	0
  6095  0DE6  00E5               	movwf	___fldiv@a+1
  6096  0DE7  3000               	movlw	0
  6097  0DE8  00E4               	movwf	___fldiv@a
  6098  0DE9                     i1l694:
  6099  0DE9  0867               	movf	___fldiv@a+3,w
  6100  0DEA  0466               	iorwf	___fldiv@a+2,w
  6101  0DEB  0465               	iorwf	___fldiv@a+1,w
  6102  0DEC  0464               	iorwf	___fldiv@a,w
  6103  0DED  1D03               	skipz
  6104  0DEE  2DF0               	goto	u199_21
  6105  0DEF  2DF1               	goto	u199_20
  6106  0DF0                     u199_21:
  6107  0DF0  2E0E               	goto	i1l1953
  6108  0DF1                     u199_20:
  6109  0DF1                     i1l1945:
  6110  0DF1  3000               	movlw	0
  6111  0DF2  00EB               	movwf	___fldiv@b+3
  6112  0DF3  3000               	movlw	0
  6113  0DF4  00EA               	movwf	___fldiv@b+2
  6114  0DF5  3000               	movlw	0
  6115  0DF6  00E9               	movwf	___fldiv@b+1
  6116  0DF7  3000               	movlw	0
  6117  0DF8  00E8               	movwf	___fldiv@b
  6118  0DF9  3080               	movlw	128
  6119  0DFA  04EA               	iorwf	___fldiv@b+2,f
  6120  0DFB  307F               	movlw	127
  6121  0DFC  04EB               	iorwf	___fldiv@b+3,f
  6122  0DFD                     i1l1947:
  6123  0DFD  1683               	bsf	3,5	;RP0=1, select bank1
  6124  0DFE  1303               	bcf	3,6	;RP1=0, select bank1
  6125  0DFF  0829               	movf	___fldiv@sign^(0+128),w
  6126  0E00  00FF               	movwf	btemp+1
  6127  0E01  087F               	movf	btemp+1,w
  6128  0E02  1283               	bcf	3,5	;RP0=0, select bank0
  6129  0E03  1303               	bcf	3,6	;RP1=0, select bank0
  6130  0E04  04EB               	iorwf	___fldiv@b+3,f
  6131  0E05                     i1l1949:
  6132  0E05  086B               	movf	___fldiv@b+3,w
  6133  0E06  00E7               	movwf	?___fldiv+3
  6134  0E07  086A               	movf	___fldiv@b+2,w
  6135  0E08  00E6               	movwf	?___fldiv+2
  6136  0E09  0869               	movf	___fldiv@b+1,w
  6137  0E0A  00E5               	movwf	?___fldiv+1
  6138  0E0B  0868               	movf	___fldiv@b,w
  6139  0E0C  00E4               	movwf	?___fldiv
  6140  0E0D  2FFF               	goto	i1l696
  6141  0E0E                     i1l1953:
  6142  0E0E  1683               	bsf	3,5	;RP0=1, select bank1
  6143  0E0F  1303               	bcf	3,6	;RP1=0, select bank1
  6144  0E10  0830               	movf	___fldiv@bexp^(0+128),w
  6145  0E11  1D03               	btfss	3,2
  6146  0E12  2E14               	goto	u200_21
  6147  0E13  2E15               	goto	u200_20
  6148  0E14                     u200_21:
  6149  0E14  2E20               	goto	i1l1959
  6150  0E15                     u200_20:
  6151  0E15                     i1l1955:
  6152  0E15  3000               	movlw	0
  6153  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  6154  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  6155  0E18  00E7               	movwf	?___fldiv+3
  6156  0E19  3000               	movlw	0
  6157  0E1A  00E6               	movwf	?___fldiv+2
  6158  0E1B  3000               	movlw	0
  6159  0E1C  00E5               	movwf	?___fldiv+1
  6160  0E1D  3000               	movlw	0
  6161  0E1E  00E4               	movwf	?___fldiv
  6162  0E1F  2FFF               	goto	i1l696
  6163  0E20                     i1l1959:
  6164  0E20  0830               	movf	___fldiv@bexp^(0+128),w
  6165  0E21  00A0               	movwf	??___fldiv^(0+128)
  6166  0E22  01A1               	clrf	(??___fldiv^(0+128)+1)
  6167  0E23  0821               	movf	(??___fldiv+1)^(0+128),w
  6168  0E24  00A3               	movwf	((??___fldiv+2)^(0+128)+1)
  6169  0E25  0831               	movf	___fldiv@aexp^(0+128),w
  6170  0E26  0220               	subwf	??___fldiv^(0+128),w
  6171  0E27  00A2               	movwf	(??___fldiv+2)^(0+128)
  6172  0E28  1C03               	skipc
  6173  0E29  03A3               	decf	((??___fldiv+2)^(0+128)+1),f
  6174  0E2A  0822               	movf	(??___fldiv+2)^(0+128),w
  6175  0E2B  3E7F               	addlw	127
  6176  0E2C  00AA               	movwf	___fldiv@new_exp^(0+128)
  6177  0E2D  0823               	movf	(??___fldiv+3)^(0+128),w
  6178  0E2E  1803               	skipnc
  6179  0E2F  3E01               	addlw	1
  6180  0E30  3E00               	addlw	0
  6181  0E31  00AB               	movwf	(___fldiv@new_exp+1)^(0+128)
  6182  0E32                     i1l1961:
  6183  0E32  1283               	bcf	3,5	;RP0=0, select bank0
  6184  0E33  1303               	bcf	3,6	;RP1=0, select bank0
  6185  0E34  086B               	movf	___fldiv@b+3,w
  6186  0E35  1683               	bsf	3,5	;RP0=1, select bank1
  6187  0E36  1303               	bcf	3,6	;RP1=0, select bank1
  6188  0E37  00A8               	movwf	(___fldiv@rem+3)^(0+128)
  6189  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  6190  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  6191  0E3A  086A               	movf	___fldiv@b+2,w
  6192  0E3B  1683               	bsf	3,5	;RP0=1, select bank1
  6193  0E3C  1303               	bcf	3,6	;RP1=0, select bank1
  6194  0E3D  00A7               	movwf	(___fldiv@rem+2)^(0+128)
  6195  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  6196  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  6197  0E40  0869               	movf	___fldiv@b+1,w
  6198  0E41  1683               	bsf	3,5	;RP0=1, select bank1
  6199  0E42  1303               	bcf	3,6	;RP1=0, select bank1
  6200  0E43  00A6               	movwf	(___fldiv@rem+1)^(0+128)
  6201  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  6202  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  6203  0E46  0868               	movf	___fldiv@b,w
  6204  0E47  1683               	bsf	3,5	;RP0=1, select bank1
  6205  0E48  1303               	bcf	3,6	;RP1=0, select bank1
  6206  0E49  00A5               	movwf	___fldiv@rem^(0+128)
  6207  0E4A                     i1l1963:
  6208  0E4A  3000               	movlw	0
  6209  0E4B  1283               	bcf	3,5	;RP0=0, select bank0
  6210  0E4C  1303               	bcf	3,6	;RP1=0, select bank0
  6211  0E4D  00EB               	movwf	___fldiv@b+3
  6212  0E4E  3000               	movlw	0
  6213  0E4F  00EA               	movwf	___fldiv@b+2
  6214  0E50  3000               	movlw	0
  6215  0E51  00E9               	movwf	___fldiv@b+1
  6216  0E52  3000               	movlw	0
  6217  0E53  00E8               	movwf	___fldiv@b
  6218  0E54                     i1l1965:
  6219  0E54  3000               	movlw	0
  6220  0E55  1683               	bsf	3,5	;RP0=1, select bank1
  6221  0E56  1303               	bcf	3,6	;RP1=0, select bank1
  6222  0E57  00AF               	movwf	(___fldiv@grs+3)^(0+128)
  6223  0E58  3000               	movlw	0
  6224  0E59  00AE               	movwf	(___fldiv@grs+2)^(0+128)
  6225  0E5A  3000               	movlw	0
  6226  0E5B  00AD               	movwf	(___fldiv@grs+1)^(0+128)
  6227  0E5C  3000               	movlw	0
  6228  0E5D  00AC               	movwf	___fldiv@grs^(0+128)
  6229  0E5E                     i1l1967:
  6230  0E5E  01B1               	clrf	___fldiv@aexp^(0+128)
  6231  0E5F  2EDC               	goto	i1l1987
  6232  0E60                     i1l1969:
  6233  0E60  0831               	movf	___fldiv@aexp^(0+128),w
  6234  0E61  1903               	btfsc	3,2
  6235  0E62  2E64               	goto	u201_21
  6236  0E63  2E65               	goto	u201_20
  6237  0E64                     u201_21:
  6238  0E64  2E8D               	goto	i1l1979
  6239  0E65                     u201_20:
  6240  0E65                     i1l1971:
  6241  0E65  3001               	movlw	1
  6242  0E66  00A0               	movwf	??___fldiv^(0+128)
  6243  0E67                     u202_25:
  6244  0E67  1003               	clrc
  6245  0E68  0DA5               	rlf	___fldiv@rem^(0+128),f
  6246  0E69  0DA6               	rlf	(___fldiv@rem+1)^(0+128),f
  6247  0E6A  0DA7               	rlf	(___fldiv@rem+2)^(0+128),f
  6248  0E6B  0DA8               	rlf	(___fldiv@rem+3)^(0+128),f
  6249  0E6C  0BA0               	decfsz	??___fldiv^(0+128),f
  6250  0E6D  2E67               	goto	u202_25
  6251  0E6E  3001               	movlw	1
  6252  0E6F  00A0               	movwf	??___fldiv^(0+128)
  6253  0E70                     u203_25:
  6254  0E70  1003               	clrc
  6255  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  6256  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  6257  0E73  0DE8               	rlf	___fldiv@b,f
  6258  0E74  0DE9               	rlf	___fldiv@b+1,f
  6259  0E75  0DEA               	rlf	___fldiv@b+2,f
  6260  0E76  0DEB               	rlf	___fldiv@b+3,f
  6261  0E77  1683               	bsf	3,5	;RP0=1, select bank1
  6262  0E78  1303               	bcf	3,6	;RP1=0, select bank1
  6263  0E79  0BA0               	decfsz	??___fldiv^(0+128),f
  6264  0E7A  2E70               	goto	u203_25
  6265  0E7B                     i1l1973:
  6266  0E7B  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  6267  0E7C  2E7E               	goto	u204_21
  6268  0E7D  2E7F               	goto	u204_20
  6269  0E7E                     u204_21:
  6270  0E7E  2E82               	goto	i1l1977
  6271  0E7F                     u204_20:
  6272  0E7F                     i1l1975:
  6273  0E7F  1283               	bcf	3,5	;RP0=0, select bank0
  6274  0E80  1303               	bcf	3,6	;RP1=0, select bank0
  6275  0E81  1468               	bsf	___fldiv@b,0
  6276  0E82                     i1l1977:
  6277  0E82  3001               	movlw	1
  6278  0E83  1683               	bsf	3,5	;RP0=1, select bank1
  6279  0E84  1303               	bcf	3,6	;RP1=0, select bank1
  6280  0E85  00A0               	movwf	??___fldiv^(0+128)
  6281  0E86                     u205_25:
  6282  0E86  1003               	clrc
  6283  0E87  0DAC               	rlf	___fldiv@grs^(0+128),f
  6284  0E88  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  6285  0E89  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  6286  0E8A  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  6287  0E8B  0BA0               	decfsz	??___fldiv^(0+128),f
  6288  0E8C  2E86               	goto	u205_25
  6289  0E8D                     i1l1979:
  6290  0E8D  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0E8E  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0E8F  0867               	movf	___fldiv@a+3,w
  6293  0E90  1683               	bsf	3,5	;RP0=1, select bank1
  6294  0E91  1303               	bcf	3,6	;RP1=0, select bank1
  6295  0E92  0228               	subwf	(___fldiv@rem+3)^(0+128),w
  6296  0E93  1D03               	skipz
  6297  0E94  2EAB               	goto	u206_25
  6298  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  6299  0E96  1303               	bcf	3,6	;RP1=0, select bank0
  6300  0E97  0866               	movf	___fldiv@a+2,w
  6301  0E98  1683               	bsf	3,5	;RP0=1, select bank1
  6302  0E99  1303               	bcf	3,6	;RP1=0, select bank1
  6303  0E9A  0227               	subwf	(___fldiv@rem+2)^(0+128),w
  6304  0E9B  1D03               	skipz
  6305  0E9C  2EAB               	goto	u206_25
  6306  0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  6307  0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  6308  0E9F  0865               	movf	___fldiv@a+1,w
  6309  0EA0  1683               	bsf	3,5	;RP0=1, select bank1
  6310  0EA1  1303               	bcf	3,6	;RP1=0, select bank1
  6311  0EA2  0226               	subwf	(___fldiv@rem+1)^(0+128),w
  6312  0EA3  1D03               	skipz
  6313  0EA4  2EAB               	goto	u206_25
  6314  0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  6315  0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  6316  0EA7  0864               	movf	___fldiv@a,w
  6317  0EA8  1683               	bsf	3,5	;RP0=1, select bank1
  6318  0EA9  1303               	bcf	3,6	;RP1=0, select bank1
  6319  0EAA  0225               	subwf	___fldiv@rem^(0+128),w
  6320  0EAB                     u206_25:
  6321  0EAB  1C03               	skipc
  6322  0EAC  2EAE               	goto	u206_21
  6323  0EAD  2EAF               	goto	u206_20
  6324  0EAE                     u206_21:
  6325  0EAE  2ED8               	goto	i1l1985
  6326  0EAF                     u206_20:
  6327  0EAF                     i1l1981:
  6328  0EAF  172F               	bsf	(___fldiv@grs^(0+128)+3),6
  6329  0EB0                     i1l1983:
  6330  0EB0  1283               	bcf	3,5	;RP0=0, select bank0
  6331  0EB1  1303               	bcf	3,6	;RP1=0, select bank0
  6332  0EB2  0864               	movf	___fldiv@a,w
  6333  0EB3  1683               	bsf	3,5	;RP0=1, select bank1
  6334  0EB4  1303               	bcf	3,6	;RP1=0, select bank1
  6335  0EB5  02A5               	subwf	___fldiv@rem^(0+128),f
  6336  0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0EB8  0865               	movf	___fldiv@a+1,w
  6339  0EB9  1C03               	skipc
  6340  0EBA  0F65               	incfsz	___fldiv@a+1,w
  6341  0EBB  2EBD               	goto	u207_25
  6342  0EBC  2EC0               	goto	u207_26
  6343  0EBD                     u207_25:
  6344  0EBD  1683               	bsf	3,5	;RP0=1, select bank1
  6345  0EBE  1303               	bcf	3,6	;RP1=0, select bank1
  6346  0EBF  02A6               	subwf	(___fldiv@rem+1)^(0+128),f
  6347  0EC0                     u207_26:
  6348  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  6349  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  6350  0EC2  0866               	movf	___fldiv@a+2,w
  6351  0EC3  1C03               	skipc
  6352  0EC4  0F66               	incfsz	___fldiv@a+2,w
  6353  0EC5  2EC7               	goto	u207_27
  6354  0EC6  2ECA               	goto	u207_28
  6355  0EC7                     u207_27:
  6356  0EC7  1683               	bsf	3,5	;RP0=1, select bank1
  6357  0EC8  1303               	bcf	3,6	;RP1=0, select bank1
  6358  0EC9  02A7               	subwf	(___fldiv@rem+2)^(0+128),f
  6359  0ECA                     u207_28:
  6360  0ECA  1283               	bcf	3,5	;RP0=0, select bank0
  6361  0ECB  1303               	bcf	3,6	;RP1=0, select bank0
  6362  0ECC  0867               	movf	___fldiv@a+3,w
  6363  0ECD  1C03               	skipc
  6364  0ECE  0F67               	incfsz	___fldiv@a+3,w
  6365  0ECF  2ED1               	goto	u207_29
  6366  0ED0  2ED4               	goto	u207_20
  6367  0ED1                     u207_29:
  6368  0ED1  1683               	bsf	3,5	;RP0=1, select bank1
  6369  0ED2  1303               	bcf	3,6	;RP1=0, select bank1
  6370  0ED3  02A8               	subwf	(___fldiv@rem+3)^(0+128),f
  6371  0ED4                     u207_20:
  6372  0ED4  1283               	bcf	3,5	;RP0=0, select bank0
  6373  0ED5  1303               	bcf	3,6	;RP1=0, select bank0
  6374  0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  6375  0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  6376  0ED8                     i1l1985:
  6377  0ED8  3001               	movlw	1
  6378  0ED9  00FF               	movwf	btemp+1
  6379  0EDA  087F               	movf	btemp+1,w
  6380  0EDB  07B1               	addwf	___fldiv@aexp^(0+128),f
  6381  0EDC                     i1l1987:
  6382  0EDC  301A               	movlw	26
  6383  0EDD  0231               	subwf	___fldiv@aexp^(0+128),w
  6384  0EDE  1C03               	skipc
  6385  0EDF  2EE1               	goto	u208_21
  6386  0EE0  2EE2               	goto	u208_20
  6387  0EE1                     u208_21:
  6388  0EE1  2E60               	goto	i1l1969
  6389  0EE2                     u208_20:
  6390  0EE2                     i1l1989:
  6391  0EE2  0828               	movf	(___fldiv@rem+3)^(0+128),w
  6392  0EE3  0427               	iorwf	(___fldiv@rem+2)^(0+128),w
  6393  0EE4  0426               	iorwf	(___fldiv@rem+1)^(0+128),w
  6394  0EE5  0425               	iorwf	___fldiv@rem^(0+128),w
  6395  0EE6  1903               	skipnz
  6396  0EE7  2EE9               	goto	u209_21
  6397  0EE8  2EEA               	goto	u209_20
  6398  0EE9                     u209_21:
  6399  0EE9  2F13               	goto	i1l2003
  6400  0EEA                     u209_20:
  6401  0EEA                     i1l1991:
  6402  0EEA  142C               	bsf	___fldiv@grs^(0+128),0
  6403  0EEB  2F13               	goto	i1l2003
  6404  0EEC                     i1l1993:
  6405  0EEC  3001               	movlw	1
  6406  0EED  1683               	bsf	3,5	;RP0=1, select bank1
  6407  0EEE  1303               	bcf	3,6	;RP1=0, select bank1
  6408  0EEF  00A0               	movwf	??___fldiv^(0+128)
  6409  0EF0                     u210_25:
  6410  0EF0  1003               	clrc
  6411  0EF1  1283               	bcf	3,5	;RP0=0, select bank0
  6412  0EF2  1303               	bcf	3,6	;RP1=0, select bank0
  6413  0EF3  0DE8               	rlf	___fldiv@b,f
  6414  0EF4  0DE9               	rlf	___fldiv@b+1,f
  6415  0EF5  0DEA               	rlf	___fldiv@b+2,f
  6416  0EF6  0DEB               	rlf	___fldiv@b+3,f
  6417  0EF7  1683               	bsf	3,5	;RP0=1, select bank1
  6418  0EF8  1303               	bcf	3,6	;RP1=0, select bank1
  6419  0EF9  0BA0               	decfsz	??___fldiv^(0+128),f
  6420  0EFA  2EF0               	goto	u210_25
  6421  0EFB                     i1l1995:
  6422  0EFB  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  6423  0EFC  2EFE               	goto	u211_21
  6424  0EFD  2EFF               	goto	u211_20
  6425  0EFE                     u211_21:
  6426  0EFE  2F02               	goto	i1l1999
  6427  0EFF                     u211_20:
  6428  0EFF                     i1l1997:
  6429  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  6430  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  6431  0F01  1468               	bsf	___fldiv@b,0
  6432  0F02                     i1l1999:
  6433  0F02  3001               	movlw	1
  6434  0F03  1683               	bsf	3,5	;RP0=1, select bank1
  6435  0F04  1303               	bcf	3,6	;RP1=0, select bank1
  6436  0F05  00A0               	movwf	??___fldiv^(0+128)
  6437  0F06                     u212_25:
  6438  0F06  1003               	clrc
  6439  0F07  0DAC               	rlf	___fldiv@grs^(0+128),f
  6440  0F08  0DAD               	rlf	(___fldiv@grs+1)^(0+128),f
  6441  0F09  0DAE               	rlf	(___fldiv@grs+2)^(0+128),f
  6442  0F0A  0DAF               	rlf	(___fldiv@grs+3)^(0+128),f
  6443  0F0B  0BA0               	decfsz	??___fldiv^(0+128),f
  6444  0F0C  2F06               	goto	u212_25
  6445  0F0D                     i1l2001:
  6446  0F0D  30FF               	movlw	255
  6447  0F0E  07AA               	addwf	___fldiv@new_exp^(0+128),f
  6448  0F0F  1803               	skipnc
  6449  0F10  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
  6450  0F11  30FF               	movlw	255
  6451  0F12  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  6452  0F13                     i1l2003:
  6453  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  6454  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  6455  0F15  1FEA               	btfss	___fldiv@b+2,7
  6456  0F16  2F18               	goto	u213_21
  6457  0F17  2F19               	goto	u213_20
  6458  0F18                     u213_21:
  6459  0F18  2EEC               	goto	i1l1993
  6460  0F19                     u213_20:
  6461  0F19                     i1l2005:
  6462  0F19  1683               	bsf	3,5	;RP0=1, select bank1
  6463  0F1A  1303               	bcf	3,6	;RP1=0, select bank1
  6464  0F1B  01B1               	clrf	___fldiv@aexp^(0+128)
  6465  0F1C                     i1l2007:
  6466  0F1C  1FAF               	btfss	(___fldiv@grs+3)^(0+128),7
  6467  0F1D  2F1F               	goto	u214_21
  6468  0F1E  2F20               	goto	u214_20
  6469  0F1F                     u214_21:
  6470  0F1F  2F40               	goto	i1l2015
  6471  0F20                     u214_20:
  6472  0F20                     i1l2009:
  6473  0F20  30FF               	movlw	255
  6474  0F21  052C               	andwf	___fldiv@grs^(0+128),w
  6475  0F22  00A0               	movwf	??___fldiv^(0+128)
  6476  0F23  30FF               	movlw	255
  6477  0F24  052D               	andwf	(___fldiv@grs+1)^(0+128),w
  6478  0F25  00A1               	movwf	(??___fldiv^(0+128)+1)
  6479  0F26  30FF               	movlw	255
  6480  0F27  052E               	andwf	(___fldiv@grs+2)^(0+128),w
  6481  0F28  00A2               	movwf	(??___fldiv^(0+128)+2)
  6482  0F29  307F               	movlw	127
  6483  0F2A  052F               	andwf	(___fldiv@grs+3)^(0+128),w
  6484  0F2B  00A3               	movwf	(??___fldiv^(0+128)+3)
  6485  0F2C  0823               	movf	(??___fldiv+3)^(0+128),w
  6486  0F2D  0422               	iorwf	(??___fldiv+2)^(0+128),w
  6487  0F2E  0421               	iorwf	(??___fldiv+1)^(0+128),w
  6488  0F2F  0420               	iorwf	??___fldiv^(0+128),w
  6489  0F30  1903               	skipnz
  6490  0F31  2F33               	goto	u215_21
  6491  0F32  2F34               	goto	u215_20
  6492  0F33                     u215_21:
  6493  0F33  2F39               	goto	i1l710
  6494  0F34                     u215_20:
  6495  0F34                     i1l2011:
  6496  0F34  1683               	bsf	3,5	;RP0=1, select bank1
  6497  0F35  1303               	bcf	3,6	;RP1=0, select bank1
  6498  0F36  01B1               	clrf	___fldiv@aexp^(0+128)
  6499  0F37  0AB1               	incf	___fldiv@aexp^(0+128),f
  6500  0F38  2F40               	goto	i1l2015
  6501  0F39                     i1l710:
  6502  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  6503  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  6504  0F3B  1C68               	btfss	___fldiv@b,0
  6505  0F3C  2F3E               	goto	u216_21
  6506  0F3D  2F3F               	goto	u216_20
  6507  0F3E                     u216_21:
  6508  0F3E  2F40               	goto	i1l2015
  6509  0F3F                     u216_20:
  6510  0F3F  2F34               	goto	i1l2011
  6511  0F40                     i1l2015:
  6512  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  6513  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  6514  0F42  0831               	movf	___fldiv@aexp^(0+128),w
  6515  0F43  1903               	btfsc	3,2
  6516  0F44  2F46               	goto	u217_21
  6517  0F45  2F47               	goto	u217_20
  6518  0F46                     u217_21:
  6519  0F46  2F98               	goto	i1l2025
  6520  0F47                     u217_20:
  6521  0F47                     i1l2017:
  6522  0F47  3001               	movlw	1
  6523  0F48  1283               	bcf	3,5	;RP0=0, select bank0
  6524  0F49  1303               	bcf	3,6	;RP1=0, select bank0
  6525  0F4A  07E8               	addwf	___fldiv@b,f
  6526  0F4B  3000               	movlw	0
  6527  0F4C  1803               	skipnc
  6528  0F4D  3001               	movlw	1
  6529  0F4E  07E9               	addwf	___fldiv@b+1,f
  6530  0F4F  3000               	movlw	0
  6531  0F50  1803               	skipnc
  6532  0F51  3001               	movlw	1
  6533  0F52  07EA               	addwf	___fldiv@b+2,f
  6534  0F53  3000               	movlw	0
  6535  0F54  1803               	skipnc
  6536  0F55  3001               	movlw	1
  6537  0F56  07EB               	addwf	___fldiv@b+3,f
  6538  0F57                     i1l2019:
  6539  0F57  1C6B               	btfss	___fldiv@b+3,0
  6540  0F58  2F5A               	goto	u218_21
  6541  0F59  2F5B               	goto	u218_20
  6542  0F5A                     u218_21:
  6543  0F5A  2F98               	goto	i1l2025
  6544  0F5B                     u218_20:
  6545  0F5B                     i1l2021:
  6546  0F5B  0868               	movf	___fldiv@b,w
  6547  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  6548  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  6549  0F5E  00A0               	movwf	??___fldiv^(0+128)
  6550  0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  6551  0F60  1303               	bcf	3,6	;RP1=0, select bank0
  6552  0F61  0869               	movf	___fldiv@b+1,w
  6553  0F62  1683               	bsf	3,5	;RP0=1, select bank1
  6554  0F63  1303               	bcf	3,6	;RP1=0, select bank1
  6555  0F64  00A1               	movwf	(??___fldiv^(0+128)+1)
  6556  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  6557  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  6558  0F67  086A               	movf	___fldiv@b+2,w
  6559  0F68  1683               	bsf	3,5	;RP0=1, select bank1
  6560  0F69  1303               	bcf	3,6	;RP1=0, select bank1
  6561  0F6A  00A2               	movwf	(??___fldiv^(0+128)+2)
  6562  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  6563  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  6564  0F6D  086B               	movf	___fldiv@b+3,w
  6565  0F6E  1683               	bsf	3,5	;RP0=1, select bank1
  6566  0F6F  1303               	bcf	3,6	;RP1=0, select bank1
  6567  0F70  00A3               	movwf	(??___fldiv^(0+128)+3)
  6568  0F71  3001               	movlw	1
  6569  0F72  00A4               	movwf	(??___fldiv+4)^(0+128)
  6570  0F73                     u219_25:
  6571  0F73  0D23               	rlf	(??___fldiv^(0+128)+3),w
  6572  0F74  0CA3               	rrf	(??___fldiv^(0+128)+3),f
  6573  0F75  0CA2               	rrf	(??___fldiv^(0+128)+2),f
  6574  0F76  0CA1               	rrf	(??___fldiv^(0+128)+1),f
  6575  0F77  0CA0               	rrf	??___fldiv^(0+128),f
  6576  0F78                     u219_20:
  6577  0F78  0BA4               	decfsz	(??___fldiv+4)^(0+128),f
  6578  0F79  2F73               	goto	u219_25
  6579  0F7A  0823               	movf	(??___fldiv+3)^(0+128),w
  6580  0F7B  1283               	bcf	3,5	;RP0=0, select bank0
  6581  0F7C  1303               	bcf	3,6	;RP1=0, select bank0
  6582  0F7D  00EB               	movwf	___fldiv@b+3
  6583  0F7E  1683               	bsf	3,5	;RP0=1, select bank1
  6584  0F7F  1303               	bcf	3,6	;RP1=0, select bank1
  6585  0F80  0822               	movf	(??___fldiv+2)^(0+128),w
  6586  0F81  1283               	bcf	3,5	;RP0=0, select bank0
  6587  0F82  1303               	bcf	3,6	;RP1=0, select bank0
  6588  0F83  00EA               	movwf	___fldiv@b+2
  6589  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  6590  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  6591  0F86  0821               	movf	(??___fldiv+1)^(0+128),w
  6592  0F87  1283               	bcf	3,5	;RP0=0, select bank0
  6593  0F88  1303               	bcf	3,6	;RP1=0, select bank0
  6594  0F89  00E9               	movwf	___fldiv@b+1
  6595  0F8A  1683               	bsf	3,5	;RP0=1, select bank1
  6596  0F8B  1303               	bcf	3,6	;RP1=0, select bank1
  6597  0F8C  0820               	movf	??___fldiv^(0+128),w
  6598  0F8D  1283               	bcf	3,5	;RP0=0, select bank0
  6599  0F8E  1303               	bcf	3,6	;RP1=0, select bank0
  6600  0F8F  00E8               	movwf	___fldiv@b
  6601  0F90                     i1l2023:
  6602  0F90  3001               	movlw	1
  6603  0F91  1683               	bsf	3,5	;RP0=1, select bank1
  6604  0F92  1303               	bcf	3,6	;RP1=0, select bank1
  6605  0F93  07AA               	addwf	___fldiv@new_exp^(0+128),f
  6606  0F94  1803               	skipnc
  6607  0F95  0AAB               	incf	(___fldiv@new_exp+1)^(0+128),f
  6608  0F96  3000               	movlw	0
  6609  0F97  07AB               	addwf	(___fldiv@new_exp+1)^(0+128),f
  6610  0F98                     i1l2025:
  6611  0F98  1683               	bsf	3,5	;RP0=1, select bank1
  6612  0F99  1303               	bcf	3,6	;RP1=0, select bank1
  6613  0F9A  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
  6614  0F9B  3A80               	xorlw	128
  6615  0F9C  00FF               	movwf	btemp+1
  6616  0F9D  3080               	movlw	128
  6617  0F9E  027F               	subwf	btemp+1,w
  6618  0F9F  1D03               	skipz
  6619  0FA0  2FA3               	goto	u220_25
  6620  0FA1  30FF               	movlw	255
  6621  0FA2  022A               	subwf	___fldiv@new_exp^(0+128),w
  6622  0FA3                     u220_25:
  6623  0FA3  1C03               	skipc
  6624  0FA4  2FA6               	goto	u220_21
  6625  0FA5  2FA7               	goto	u220_20
  6626  0FA6                     u220_21:
  6627  0FA6  2FB7               	goto	i1l2029
  6628  0FA7                     u220_20:
  6629  0FA7                     i1l2027:
  6630  0FA7  30FF               	movlw	255
  6631  0FA8  1683               	bsf	3,5	;RP0=1, select bank1
  6632  0FA9  1303               	bcf	3,6	;RP1=0, select bank1
  6633  0FAA  00AA               	movwf	___fldiv@new_exp^(0+128)
  6634  0FAB  3000               	movlw	0
  6635  0FAC  00AB               	movwf	(___fldiv@new_exp^(0+128)+1)
  6636  0FAD  3000               	movlw	0
  6637  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  6638  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  6639  0FB0  00EB               	movwf	___fldiv@b+3
  6640  0FB1  3000               	movlw	0
  6641  0FB2  00EA               	movwf	___fldiv@b+2
  6642  0FB3  3000               	movlw	0
  6643  0FB4  00E9               	movwf	___fldiv@b+1
  6644  0FB5  3000               	movlw	0
  6645  0FB6  00E8               	movwf	___fldiv@b
  6646  0FB7                     i1l2029:
  6647  0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  6648  0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  6649  0FB9  082B               	movf	(___fldiv@new_exp+1)^(0+128),w
  6650  0FBA  3A80               	xorlw	128
  6651  0FBB  00FF               	movwf	btemp+1
  6652  0FBC  3080               	movlw	128
  6653  0FBD  027F               	subwf	btemp+1,w
  6654  0FBE  1D03               	skipz
  6655  0FBF  2FC2               	goto	u221_25
  6656  0FC0  3001               	movlw	1
  6657  0FC1  022A               	subwf	___fldiv@new_exp^(0+128),w
  6658  0FC2                     u221_25:
  6659  0FC2  1803               	skipnc
  6660  0FC3  2FC5               	goto	u221_21
  6661  0FC4  2FC6               	goto	u221_20
  6662  0FC5                     u221_21:
  6663  0FC5  2FD7               	goto	i1l2037
  6664  0FC6                     u221_20:
  6665  0FC6                     i1l2031:
  6666  0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  6667  0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  6668  0FC8  01AA               	clrf	___fldiv@new_exp^(0+128)
  6669  0FC9  01AB               	clrf	(___fldiv@new_exp+1)^(0+128)
  6670  0FCA                     i1l2033:
  6671  0FCA  3000               	movlw	0
  6672  0FCB  1283               	bcf	3,5	;RP0=0, select bank0
  6673  0FCC  1303               	bcf	3,6	;RP1=0, select bank0
  6674  0FCD  00EB               	movwf	___fldiv@b+3
  6675  0FCE  3000               	movlw	0
  6676  0FCF  00EA               	movwf	___fldiv@b+2
  6677  0FD0  3000               	movlw	0
  6678  0FD1  00E9               	movwf	___fldiv@b+1
  6679  0FD2  3000               	movlw	0
  6680  0FD3  00E8               	movwf	___fldiv@b
  6681  0FD4                     i1l2035:
  6682  0FD4  1683               	bsf	3,5	;RP0=1, select bank1
  6683  0FD5  1303               	bcf	3,6	;RP1=0, select bank1
  6684  0FD6  01A9               	clrf	___fldiv@sign^(0+128)
  6685  0FD7                     i1l2037:
  6686  0FD7  1683               	bsf	3,5	;RP0=1, select bank1
  6687  0FD8  1303               	bcf	3,6	;RP1=0, select bank1
  6688  0FD9  082A               	movf	___fldiv@new_exp^(0+128),w
  6689  0FDA  00FF               	movwf	btemp+1
  6690  0FDB  087F               	movf	btemp+1,w
  6691  0FDC  00B0               	movwf	___fldiv@bexp^(0+128)
  6692  0FDD                     i1l2039:
  6693  0FDD  1C30               	btfss	___fldiv@bexp^(0+128),0
  6694  0FDE  2FE0               	goto	u222_21
  6695  0FDF  2FE1               	goto	u222_20
  6696  0FE0                     u222_21:
  6697  0FE0  2FE5               	goto	i1l2043
  6698  0FE1                     u222_20:
  6699  0FE1                     i1l2041:
  6700  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  6701  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  6702  0FE3  17EA               	bsf	___fldiv@b+2,7
  6703  0FE4  2FEB               	goto	i1l718
  6704  0FE5                     i1l2043:
  6705  0FE5  307F               	movlw	127
  6706  0FE6  00FF               	movwf	btemp+1
  6707  0FE7  087F               	movf	btemp+1,w
  6708  0FE8  1283               	bcf	3,5	;RP0=0, select bank0
  6709  0FE9  1303               	bcf	3,6	;RP1=0, select bank0
  6710  0FEA  05EA               	andwf	___fldiv@b+2,f
  6711  0FEB                     i1l718:
  6712  0FEB  1683               	bsf	3,5	;RP0=1, select bank1
  6713  0FEC  1303               	bcf	3,6	;RP1=0, select bank1
  6714  0FED  0830               	movf	___fldiv@bexp^(0+128),w
  6715  0FEE  00A0               	movwf	??___fldiv^(0+128)
  6716  0FEF  1003               	clrc
  6717  0FF0  0C20               	rrf	??___fldiv^(0+128),w
  6718  0FF1  00FF               	movwf	btemp+1
  6719  0FF2  087F               	movf	btemp+1,w
  6720  0FF3  1283               	bcf	3,5	;RP0=0, select bank0
  6721  0FF4  1303               	bcf	3,6	;RP1=0, select bank0
  6722  0FF5  00EB               	movwf	___fldiv@b+3
  6723  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  6724  0FF7  1303               	bcf	3,6	;RP1=0, select bank1
  6725  0FF8  0829               	movf	___fldiv@sign^(0+128),w
  6726  0FF9  00FF               	movwf	btemp+1
  6727  0FFA  087F               	movf	btemp+1,w
  6728  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  6729  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  6730  0FFD  04EB               	iorwf	___fldiv@b+3,f
  6731  0FFE  2E05               	goto	i1l1949
  6732  0FFF                     i1l696:
  6733  0FFF  0008               	return
  6734  1000                     __end_of___fldiv:
  6735                           
  6736                           	psect	text25
  6737  087A                     __ptext25:	
  6738 ;; *************** function ___bmul *****************
  6739 ;; Defined at:
  6740 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  multiplier      1    wreg     unsigned char 
  6743 ;;  multiplicand    1    6[COMMON] unsigned char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  multiplier      1    8[COMMON] unsigned char 
  6746 ;;  product         1    7[COMMON] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      unsigned char 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0, btemp+1
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6756 ;;      Params:         1       0       0       0       0
  6757 ;;      Locals:         2       0       0       0       0
  6758 ;;      Temps:          0       0       0       0       0
  6759 ;;      Totals:         3       0       0       0       0
  6760 ;;Total ram usage:        3 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; This function calls:
  6763 ;;		Nothing
  6764 ;; This function is called by:
  6765 ;;		_GBS_Stepper_Exe
  6766 ;;		_GBS_Stepper_Buffer_Init
  6767 ;;		_GBS_Stepper_Planner
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           
  6772                           ;psect for function ___bmul
  6773  087A                     ___bmul:
  6774                           
  6775                           ;incstack = 0
  6776                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  6777                           ;___bmul@multiplier stored from wreg
  6778  087A  00F8               	movwf	___bmul@multiplier
  6779  087B                     i1l1787:
  6780  087B  01F7               	clrf	___bmul@product
  6781  087C                     i1l1789:
  6782  087C  1C78               	btfss	___bmul@multiplier,0
  6783  087D  287F               	goto	u165_21
  6784  087E  2880               	goto	u165_20
  6785  087F                     u165_21:
  6786  087F  2884               	goto	i1l1793
  6787  0880                     u165_20:
  6788  0880                     i1l1791:
  6789  0880  0876               	movf	___bmul@multiplicand,w
  6790  0881  00FF               	movwf	btemp+1
  6791  0882  087F               	movf	btemp+1,w
  6792  0883  07F7               	addwf	___bmul@product,f
  6793  0884                     i1l1793:
  6794  0884  1003               	clrc
  6795  0885  0DF6               	rlf	___bmul@multiplicand,f
  6796  0886                     i1l1795:
  6797  0886  1003               	clrc
  6798  0887  0CF8               	rrf	___bmul@multiplier,f
  6799  0888                     i1l1797:
  6800  0888  0878               	movf	___bmul@multiplier,w
  6801  0889  1D03               	btfss	3,2
  6802  088A  288C               	goto	u166_21
  6803  088B  288D               	goto	u166_20
  6804  088C                     u166_21:
  6805  088C  287C               	goto	i1l1789
  6806  088D                     u166_20:
  6807  088D                     i1l1799:
  6808  088D  0877               	movf	___bmul@product,w
  6809  088E                     i1l371:
  6810  088E  0008               	return
  6811  088F                     __end_of___bmul:
  6812                           
  6813                           	psect	text26
  6814  0A9F                     __ptext26:	
  6815 ;; *************** function ___awmod *****************
  6816 ;; Defined at:
  6817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  divisor         2    0[COMMON] int 
  6820 ;;  dividend        2    2[COMMON] int 
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  sign            1    5[COMMON] unsigned char 
  6823 ;;  counter         1    4[COMMON] unsigned char 
  6824 ;; Return value:  Size  Location     Type
  6825 ;;                  2    0[COMMON] int 
  6826 ;; Registers used:
  6827 ;;		wreg, status,2, status,0, btemp+1
  6828 ;; Tracked objects:
  6829 ;;		On entry : 0/0
  6830 ;;		On exit  : 0/0
  6831 ;;		Unchanged: 0/0
  6832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6833 ;;      Params:         4       0       0       0       0
  6834 ;;      Locals:         2       0       0       0       0
  6835 ;;      Temps:          0       0       0       0       0
  6836 ;;      Totals:         6       0       0       0       0
  6837 ;;Total ram usage:        6 bytes
  6838 ;; Hardware stack levels used:    1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_GBS_Stepper_Exe
  6843 ;;		_GBS_Stepper_Planner
  6844 ;; This function uses a non-reentrant model
  6845 ;;
  6846                           
  6847                           
  6848                           ;psect for function ___awmod
  6849  0A9F                     ___awmod:
  6850  0A9F                     i1l1829:	
  6851                           ;incstack = 0
  6852                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
  6853                           
  6854  0A9F  01F5               	clrf	___awmod@sign
  6855  0AA0                     i1l1831:
  6856  0AA0  1FF3               	btfss	___awmod@dividend+1,7
  6857  0AA1  2AA3               	goto	u174_21
  6858  0AA2  2AA4               	goto	u174_20
  6859  0AA3                     u174_21:
  6860  0AA3  2AAB               	goto	i1l1837
  6861  0AA4                     u174_20:
  6862  0AA4                     i1l1833:
  6863  0AA4  09F2               	comf	___awmod@dividend,f
  6864  0AA5  09F3               	comf	___awmod@dividend+1,f
  6865  0AA6  0AF2               	incf	___awmod@dividend,f
  6866  0AA7  1903               	skipnz
  6867  0AA8  0AF3               	incf	___awmod@dividend+1,f
  6868  0AA9                     i1l1835:
  6869  0AA9  01F5               	clrf	___awmod@sign
  6870  0AAA  0AF5               	incf	___awmod@sign,f
  6871  0AAB                     i1l1837:
  6872  0AAB  1FF1               	btfss	___awmod@divisor+1,7
  6873  0AAC  2AAE               	goto	u175_21
  6874  0AAD  2AAF               	goto	u175_20
  6875  0AAE                     u175_21:
  6876  0AAE  2AB4               	goto	i1l1841
  6877  0AAF                     u175_20:
  6878  0AAF                     i1l1839:
  6879  0AAF  09F0               	comf	___awmod@divisor,f
  6880  0AB0  09F1               	comf	___awmod@divisor+1,f
  6881  0AB1  0AF0               	incf	___awmod@divisor,f
  6882  0AB2  1903               	skipnz
  6883  0AB3  0AF1               	incf	___awmod@divisor+1,f
  6884  0AB4                     i1l1841:
  6885  0AB4  0870               	movf	___awmod@divisor,w
  6886  0AB5  0471               	iorwf	___awmod@divisor+1,w
  6887  0AB6  1903               	btfsc	3,2
  6888  0AB7  2AB9               	goto	u176_21
  6889  0AB8  2ABA               	goto	u176_20
  6890  0AB9                     u176_21:
  6891  0AB9  2AE9               	goto	i1l1859
  6892  0ABA                     u176_20:
  6893  0ABA                     i1l1843:
  6894  0ABA  01F4               	clrf	___awmod@counter
  6895  0ABB  0AF4               	incf	___awmod@counter,f
  6896  0ABC  2AC8               	goto	i1l1849
  6897  0ABD                     i1l1845:
  6898  0ABD  3001               	movlw	1
  6899  0ABE                     u177_25:
  6900  0ABE  1003               	clrc
  6901  0ABF  0DF0               	rlf	___awmod@divisor,f
  6902  0AC0  0DF1               	rlf	___awmod@divisor+1,f
  6903  0AC1  3EFF               	addlw	-1
  6904  0AC2  1D03               	skipz
  6905  0AC3  2ABE               	goto	u177_25
  6906  0AC4                     i1l1847:
  6907  0AC4  3001               	movlw	1
  6908  0AC5  00FF               	movwf	btemp+1
  6909  0AC6  087F               	movf	btemp+1,w
  6910  0AC7  07F4               	addwf	___awmod@counter,f
  6911  0AC8                     i1l1849:
  6912  0AC8  1FF1               	btfss	___awmod@divisor+1,7
  6913  0AC9  2ACB               	goto	u178_21
  6914  0ACA  2ACC               	goto	u178_20
  6915  0ACB                     u178_21:
  6916  0ACB  2ABD               	goto	i1l1845
  6917  0ACC                     u178_20:
  6918  0ACC                     i1l1851:
  6919  0ACC  0871               	movf	___awmod@divisor+1,w
  6920  0ACD  0273               	subwf	___awmod@dividend+1,w
  6921  0ACE  1D03               	skipz
  6922  0ACF  2AD2               	goto	u179_25
  6923  0AD0  0870               	movf	___awmod@divisor,w
  6924  0AD1  0272               	subwf	___awmod@dividend,w
  6925  0AD2                     u179_25:
  6926  0AD2  1C03               	skipc
  6927  0AD3  2AD5               	goto	u179_21
  6928  0AD4  2AD6               	goto	u179_20
  6929  0AD5                     u179_21:
  6930  0AD5  2ADC               	goto	i1l1855
  6931  0AD6                     u179_20:
  6932  0AD6                     i1l1853:
  6933  0AD6  0870               	movf	___awmod@divisor,w
  6934  0AD7  02F2               	subwf	___awmod@dividend,f
  6935  0AD8  0871               	movf	___awmod@divisor+1,w
  6936  0AD9  1C03               	skipc
  6937  0ADA  03F3               	decf	___awmod@dividend+1,f
  6938  0ADB  02F3               	subwf	___awmod@dividend+1,f
  6939  0ADC                     i1l1855:
  6940  0ADC  3001               	movlw	1
  6941  0ADD                     u180_25:
  6942  0ADD  1003               	clrc
  6943  0ADE  0CF1               	rrf	___awmod@divisor+1,f
  6944  0ADF  0CF0               	rrf	___awmod@divisor,f
  6945  0AE0  3EFF               	addlw	-1
  6946  0AE1  1D03               	skipz
  6947  0AE2  2ADD               	goto	u180_25
  6948  0AE3                     i1l1857:
  6949  0AE3  3001               	movlw	1
  6950  0AE4  02F4               	subwf	___awmod@counter,f
  6951  0AE5  1D03               	btfss	3,2
  6952  0AE6  2AE8               	goto	u181_21
  6953  0AE7  2AE9               	goto	u181_20
  6954  0AE8                     u181_21:
  6955  0AE8  2ACC               	goto	i1l1851
  6956  0AE9                     u181_20:
  6957  0AE9                     i1l1859:
  6958  0AE9  0875               	movf	___awmod@sign,w
  6959  0AEA  1903               	btfsc	3,2
  6960  0AEB  2AED               	goto	u182_21
  6961  0AEC  2AEE               	goto	u182_20
  6962  0AED                     u182_21:
  6963  0AED  2AF3               	goto	i1l1863
  6964  0AEE                     u182_20:
  6965  0AEE                     i1l1861:
  6966  0AEE  09F2               	comf	___awmod@dividend,f
  6967  0AEF  09F3               	comf	___awmod@dividend+1,f
  6968  0AF0  0AF2               	incf	___awmod@dividend,f
  6969  0AF1  1903               	skipnz
  6970  0AF2  0AF3               	incf	___awmod@dividend+1,f
  6971  0AF3                     i1l1863:
  6972  0AF3  0873               	movf	___awmod@dividend+1,w
  6973  0AF4  00F1               	movwf	?___awmod+1
  6974  0AF5  0872               	movf	___awmod@dividend,w
  6975  0AF6  00F0               	movwf	?___awmod
  6976  0AF7                     i1l511:
  6977  0AF7  0008               	return
  6978  0AF8                     __end_of___awmod:
  6979  007E                     btemp	set	126	;btemp
  6980  007E                     wtemp0	set	126
  6981                           
  6982                           	psect	config
  6983                           
  6984                           ;Config register CONFIG1 @ 0x2007
  6985                           ;	Oscillator Selection bits
  6986                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  6987                           ;	Watchdog Timer Enable bit
  6988                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6989                           ;	Power-up Timer Enable bit
  6990                           ;	PWRTE = OFF, PWRT disabled
  6991                           ;	RE3/MCLR pin function select bit
  6992                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  6993                           ;	Code Protection bit
  6994                           ;	CP = OFF, Program memory code protection is disabled
  6995                           ;	Data Code Protection bit
  6996                           ;	CPD = OFF, Data memory code protection is disabled
  6997                           ;	Brown Out Reset Selection bits
  6998                           ;	BOREN = OFF, BOR disabled
  6999                           ;	Internal External Switchover bit
  7000                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  7001                           ;	Fail-Safe Clock Monitor Enabled bit
  7002                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  7003                           ;	Low Voltage Programming Enable bit
  7004                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  7005                           ;	In-Circuit Debugger Mode bit
  7006                           ;	DEBUG = 0x1, unprogrammed default
  7007  2007                     	org	8199
  7008  2007  20F2               	dw	8434
  7009                           
  7010                           ;Config register CONFIG2 @ 0x2008
  7011                           ;	Brown-out Reset Selection bit
  7012                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  7013                           ;	Flash Program Memory Self Write Enable bits
  7014                           ;	WRT = OFF, Write protection off
  7015  2008                     	org	8200
  7016  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         132
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     80      80
    BANK1            80     71      73
    BANK3            96     21      71
    BANK2            96      0      80

Pointer List with Targets:

    GBS_USART_Receive@buffer	PTR struct . size(1) Largest target is 19
		 -> usartReceiveBuffer(BANK3[19]), 

    GBS_USART_Send@buffer	PTR struct . size(1) Largest target is 19
		 -> usartSendBuffer(BANK3[19]), 

    GBS_USART_Buffer_Read@buffer	PTR struct . size(1) Largest target is 19
		 -> usartSendBuffer(BANK3[19]), 

    GBS_USART_Buffer_Write@buffer	PTR struct . size(1) Largest target is 19
		 -> usartReceiveBuffer(BANK3[19]), usartSendBuffer(BANK3[19]), 

    GBS_Stepper_Exe@sBufferX	PTR struct . size(1) Largest target is 80
		 -> sBufferA(BANK2[80]), 

    GBS_Stepper_Exe@stepperX	PTR struct . size(1) Largest target is 12
		 -> stepperA(BANK3[12]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _USART_TX_ISR->i1_GBS_USART_Send
    i1_GBS_USART_Send->i1_GBS_USART_Buffer_Read
    _USART_RX_ISR->_GBS_USART_Receive
    _GBS_USART_Receive->i1_GBS_USART_Buffer_Write
    _GBS_Stepper_Exe->___fltol
    _sqrt->___lmul
    ___xxtofl->___lmul
    ___lmul->___lldiv
    ___lldiv->___bmul
    ___fltol->___lmul
    ___fldiv->___lmul
    ___bmul->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    _GBS_Stepper_Exe->___fltol
    _sqrt->___xxtofl
    ___xxtofl->___lmul
    ___lmul->___lldiv
    ___fltol->___fldiv
    ___fldiv->_sqrt

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _T2I_ISR->_GBS_Stepper_Exe
    _GBS_Stepper_Exe->___fltol
    ___fltol->___fldiv

Critical Paths under _main in BANK3

    _main->_GBS_USART_Init
    _GBS_USART_Send->_GBS_USART_Buffer_Read
    _GBS_USART_Init->___aldiv
    _GBS_Interrupt_Init->_GBS_T2I_Config

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1369
                 _GBS_Interrupt_Init
             _GBS_USART_Buffer_Write
                     _GBS_USART_Init
                     _GBS_USART_Send
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Send                                       1     1      0     276
                                              3 BANK3      1     1      0
              _GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Buffer_Read                                3     3      0     188
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Init                                       6     4      2     725
                                             15 BANK3      6     4      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     604
                                              0 BANK3     15     7      8
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Buffer_Write                               3     2      1     346
                                              0 BANK3      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GBS_Interrupt_Init                                   0     0      0      22
               _GBS_Interrupt_Enable
                     _GBS_T2I_Config
 ---------------------------------------------------------------------------------
 (2) _GBS_T2I_Config                                       1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (2) _GBS_Interrupt_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0   14634
                                             67 BANK1      4     4      0
                            _T2I_ISR
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_TX_ISR                                         0     0      0     177
                   i1_GBS_USART_Send
 ---------------------------------------------------------------------------------
 (5) i1_GBS_USART_Send                                     1     1      0     177
                                              3 COMMON     1     1      0
            i1_GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Read                              3     3      0     155
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         0     0      0     235
                  _GBS_USART_Receive
 ---------------------------------------------------------------------------------
 (5) _GBS_USART_Receive                                    1     1      0     235
                                              3 COMMON     1     1      0
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Write                             3     2      1     180
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (4) _T2I_ISR                                              0     0      0   14222
                    _GBS_Stepper_Exe
                 _GBS_Stepper_Update
 ---------------------------------------------------------------------------------
 (5) _GBS_Stepper_Update                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _GBS_Stepper_Exe                                     45    44      1   14222
                                             22 BANK1     45    44      1
                            ___awmod
                             ___bmul
                            ___fldiv
                            ___fltol
                            ___lldiv
                             ___lmul
                           ___xxtofl
                               _sqrt
 ---------------------------------------------------------------------------------
 (6) _sqrt                                                29    25      4     957
                                             39 BANK0     29    25      4
                             ___bmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     474
                                             25 BANK0     14    10      4
                             ___bmul (ARG)
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              13     5      8    4196
                                             10 COMMON     1     1      0
                                             13 BANK0     12     4      8
                             ___bmul (ARG)
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             14     6      8    1074
                                              9 COMMON     1     1      0
                                              0 BANK0     13     5      8
                             ___bmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     989
                                             11 COMMON     2     2      0
                                             76 BANK0      4     4      0
                                             18 BANK1      4     0      4
                             ___bmul (ARG)
                            ___fldiv (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    2945
                                             68 BANK0      8     0      8
                                              0 BANK1     18    18      0
                             ___bmul (ARG)
                             ___lmul (ARG)
                           ___xxtofl (ARG)
                               _sqrt (ARG)
 ---------------------------------------------------------------------------------
 (6) ___bmul                                               3     2      1     820
                                              6 COMMON     3     2      1
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     752
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GBS_Interrupt_Init
     _GBS_Interrupt_Enable
     _GBS_T2I_Config
   _GBS_USART_Buffer_Write
   _GBS_USART_Init
     ___aldiv
   _GBS_USART_Send
     _GBS_USART_Buffer_Read

 _ISR (ROOT)
   _T2I_ISR
     _GBS_Stepper_Exe
       ___awmod
       ___bmul
         ___awmod (ARG)
       ___fldiv
         ___bmul (ARG)
           ___awmod (ARG)
         ___lmul (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lldiv (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
         _sqrt (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lmul (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
               ___lldiv (ARG)
                 ___bmul (ARG)
                   ___awmod (ARG)
       ___fltol
         ___bmul (ARG)
           ___awmod (ARG)
         ___fldiv (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lmul (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
               ___lldiv (ARG)
                 ___bmul (ARG)
                   ___awmod (ARG)
           _sqrt (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lmul (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
               ___lldiv (ARG)
                 ___bmul (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
               ___lmul (ARG)
                 ___bmul (ARG)
                   ___awmod (ARG)
                 ___lldiv (ARG)
                   ___bmul (ARG)
                     ___awmod (ARG)
         ___lmul (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lldiv (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
         _sqrt (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lmul (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
               ___lldiv (ARG)
                 ___bmul (ARG)
                   ___awmod (ARG)
       ___lldiv
         ___bmul (ARG)
           ___awmod (ARG)
       ___lmul
         ___bmul (ARG)
           ___awmod (ARG)
         ___lldiv (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
       ___xxtofl
         ___bmul (ARG)
           ___awmod (ARG)
         ___lmul (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lldiv (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
       _sqrt
         ___bmul (ARG)
           ___awmod (ARG)
         ___lmul (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lldiv (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
         ___xxtofl (ARG)
           ___bmul (ARG)
             ___awmod (ARG)
           ___lmul (ARG)
             ___bmul (ARG)
               ___awmod (ARG)
             ___lldiv (ARG)
               ___bmul (ARG)
                 ___awmod (ARG)
     _GBS_Stepper_Update
   _USART_RX_ISR
     _GBS_USART_Receive
       i1_GBS_USART_Buffer_Write
   _USART_TX_ISR
     i1_GBS_USART_Send
       i1_GBS_USART_Buffer_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0     13D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     47      49       7       91.2%
BITBANK3            60      0       0       8        0.0%
BANK3               60     15      47       9       74.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0      50      11       83.3%
DATA                 0      0     13D      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 03 08:54:30 2020

                     ___fldiv@aexp 00B1                       ___fldiv@bexp 00B0  
                     ___fldiv@sign 00A9                     ___bmul@product 0077  
             GBS_USART_Send@buffer 01C5                                 l74 084A  
                               l77 082F                                 l95 0868  
                               fsr 0004                                l410 070D  
                              l234 0A9E                                l242 09A0  
                              l420 0795                                l238 09CD  
                              l246 08F5                                l249 08FB  
        __end_of_GBS_USART_Receive 0859                                _PR2 0092  
                              _ISR 09CE                                _PSA 040B  
                              fsr0 0004                                indf 0000  
                     ___awmod@sign 0075                    __end_of_T2I_ISR 08A8  
                             ?_ISR 0070                       ___fltol@exp1 007C  
                             l2113 085C                               l2115 085F  
                             l2211 0711                               l2117 082D  
                             l2221 0733                               l2213 071C  
                             l2205 06F9                               l2231 075F  
                             l2223 073C                               l2215 0720  
                             l2207 06FC                               l2303 08FC  
                             l2241 0782                               l2233 076D  
                             l2225 0740                               l2217 0728  
                             l2209 0700                               l2305 0901  
                             l2243 078D                               l2235 076E  
                             l2227 0744                               l2219 0730  
                             l2307 090C                               l2253 083F  
                             l2237 0777                               l2229 074D  
                             l2261 0A98                               l2309 0918  
                             l2255 0845                               l2271 09BD  
                             l2239 077D                               l2263 0A99  
                             l2273 09C6                               l2265 0A9A  
                             l2257 0A4D                               l2193 0979  
                             l2267 0A9B                               l2259 0A5D  
                             l2195 0982                               l2275 08E2  
                             l2269 09A4                               l2197 099A  
                             l2277 08E5                               l2199 099F  
                             l2279 08EC                               _T0CS 040D  
                             u2520 0982                               u2521 0981  
                             u2610 077D                               u2530 0700  
                             u2611 077C                               u2531 06FF  
                             u2620 0782                               u2540 0711  
                             u2621 0781                               u2605 076F  
                             u2541 0710                               u2550 0730  
                             u2551 072F                               u2650 09C6  
                             u2570 0744                               u2651 09C5  
                             u2571 0743                               u2660 08EC  
                             u2565 0735                               u2661 08EB  
                             u2590 075F                               u2670 08FB  
                             u2591 075E                               u2671 08FA  
                             u2585 0746                               u2595 075B  
                             _TMR0 0001                               _TMR1 000E  
                             _TMR2 0011                               _main 08FC  
                             btemp 007E                               _sqrt 0B8B  
                             start 0016                    ___fldiv@new_exp 00AA  
                ___bmul@multiplier 0078                              ??_ISR 00E3  
                    ___fltol@sign1 007B                    __end_of___aldiv 0796  
                            ?_main 0070                    __end_of___fldiv 1000  
                  __end_of___awmod 0AF8                    __end_of___fltol 0B8B  
                            _ANSEL 0188                    __end_of___lldiv 07FE  
                            ?_sqrt 0047                              i1l103 09F4  
                            i1l202 063C                              i1l211 08A7  
                            i1l207 08DE                              i1l242 094A  
                            i1l252 0858                              i1l238 0975  
                            i1l246 08BC                              i1l511 0AF7  
                            i1l256 0879                              i1l249 08C2  
                            i1l371 088E                              i1l531 0B8A  
                            i1l259 0836                              i1l541 0B8A  
                            i1l381 07FD                              i1l710 0F39  
                            i1l359 0A4C                              i1l199 0620  
                            i1l800 06F8                              i1l538 0B73  
                            i1l811 06C2                              i1l812 06CE  
                            i1l718 0FEB                              i1l772 0C9E  
                            i1l765 0D6A                              i1l694 0DE9  
                            i1l696 0FFF                              i1l798 0661  
                            _RCREG 001A                              _SPBRG 0099  
                            _TXREG 0019                ___lmul@multiplicand 0031  
                            _errno 00E7                              pclath 000A  
                            sqrt@a 0047                              sqrt@i 0050  
                            sqrt@p 0055                              status 0003  
                            wtemp0 007E                    __initialization 0019  
                     __end_of_main 0922                       __end_of_sqrt 0D6B  
         __end_ofi1_GBS_USART_Send 08C3                             ??_main 01D7  
          i1_GBS_USART_Buffer_Read 0922                             ??_sqrt 004B  
       __size_of_GBS_USART_Receive 000E                          ??_T2I_ISR 007D  
 __end_ofi1_GBS_USART_Buffer_Write 0976        GBS_USART_Buffer_Read@buffer 01C4  
                           _CCPR1L 0015                             _ANSELH 0189  
      GBS_USART_Buffer_Read@result 01C3                             i1l2001 0F0D  
                           i1l2011 0F34                             i1l2003 0F13  
                           i1l2021 0F5B                             i1l2005 0F19  
                           i1l2101 096E                             i1l2031 0FC6  
                           i1l2023 0F90                             i1l2015 0F40  
                           i1l2007 0F1C                             i1l2103 0923  
                           i1l2041 0FE1                             i1l2033 0FCA  
                           i1l2017 0F47                             i1l2025 0F98  
                           i1l2009 0F20                             i1l2121 003E  
                           i1l2105 092C                             i1l2043 0FE5  
                           i1l2035 0FD4                             i1l2027 0FA7  
                           i1l2019 0F57                             i1l2051 0645  
                           i1l2131 013C                             i1l2123 0059  
                           i1l2203 084C                             i1l2107 0944  
                           i1l2037 0FD7                             i1l2029 0FB7  
                           i1l2061 0672                             i1l2053 0649  
                           i1l2133 0172                             i1l2141 028B  
                           i1l2125 006F                             i1l2109 0949  
                           i1l2039 0FDD                             i1l2071 068F  
                           i1l2063 0677                             i1l2055 0659  
                           i1l2151 03CD                             i1l2143 02A6  
                           i1l2135 0179                             i1l2127 0086  
                           i1l2119 0035                             i1l2311 09CE  
                           u200_20 0E15                             u200_21 0E14  
                           i1l2081 06BC                             i1l2073 069D  
                           i1l2065 067B                             i1l2057 0669  
                           i1l2049 0640                             i1l2161 05D1  
                           i1l2153 0413                             i1l2145 02AB  
                           i1l2137 0283                             i1l2129 0111  
                           i1l2321 09E5                             i1l2313 09D4  
                           i1l2091 06EF                             i1l2083 06C6  
                           i1l2075 06A6                             i1l2067 0684  
                           i1l2163 05F8                             i1l2155 0459  
                           i1l2147 0341                             i1l2139 0288  
                           i1l2251 08B3                             i1l2323 09E8  
                           i1l2315 09D9                             i1l2093 06F0  
                           i1l2085 06D0                             i1l2077 06AD  
                           i1l2069 068B                             i1l1701 0BCB  
                           i1l2157 0499                             i1l2149 0387  
                           i1l2325 09EC                             i1l2317 09DC  
                           i1l2087 06E6                             i1l2079 06B8  
                           i1l1711 0BF6                             i1l2159 04DF  
                           i1l2191 08CE                             i1l2247 08A9  
                           i1l2327 09F1                             i1l2319 09E0  
                           u201_20 0E65                             u201_21 0E64  
                           i1l2089 06EB                             i1l1721 0C18  
                           i1l1713 0BFC                             i1l1705 0BD4  
                           i1l2281 088F                             i1l2097 094C  
                           i1l2249 08AC                             i1l1811 07B8  
                           i1l1803 0796                             i1l1731 0C3E  
                           i1l1723 0C1F                             i1l1707 0BD9  
                           i1l2187 08C3                             i1l2283 0896  
                           i1l2099 0965                             i1l2291 0870  
                           i1l1901 0B78                             i1l1821 07E6  
                           i1l1813 07BC                             i1l1805 07A8  
                           i1l1741 0C8E                             i1l1733 0C43  
                           i1l1725 0C25                             i1l1717 0C0D  
                           i1l2189 08CA                             i1l2285 08A2  
                           i1l2293 0876                             i1l1831 0AA0  
                           i1l1911 0D84                             i1l1903 0B7D  
                           i1l1823 07EF                             i1l1815 07C5  
                           i1l1807 07AB                             i1l1751 0CEF  
                           i1l1743 0CC0                             i1l1735 0C4C  
                           i1l1727 0C2E                             i1l1719 0C13  
                           i1l2287 0830                             i1l1841 0AB4  
                           i1l1833 0AA4                             i1l1921 0D9F  
                           i1l1913 0D87                             i1l1905 0D6B  
                           i1l1817 07D7                             i1l1809 07B4  
                           i1l1825 07F5                             i1l1761 0D4E  
                           i1l1753 0D1F                             i1l1737 0C4E  
                           i1l1745 0CC4                             i1l1729 0C36  
                           i1l1681 0B92                             i1l2289 0869  
                           i1l1851 0ACC                             i1l1843 0ABA  
                           i1l1835 0AA9                             i1l1931 0DC2  
                           i1l1915 0D8E                             i1l1923 0DA1  
                           i1l1907 0D74                             i1l1819 07E5  
                           i1l1763 0D52                             i1l1755 0D23  
                           i1l1747 0CCA                             i1l1739 0C68  
                           i1l1691 0BB6                             i1l1683 0B98  
                           i1l1861 0AEE                             i1l1853 0AD6  
                           i1l1845 0ABD                             i1l1837 0AAB  
                           i1l1829 0A9F                             u210_25 0EF0  
                           u202_25 0E67                             i1l1941 0DDD  
                           i1l1933 0DC5                             i1l1925 0DAB  
                           i1l1917 0D93                             i1l1909 0D7E  
                           i1l1781 0A33                             i1l1773 0A05  
                           i1l1765 0D56                             i1l1757 0D3C  
                           i1l1749 0CE3                             i1l1693 0BB7  
                           i1l1685 0B9C                             i1l1863 0AF3  
                           i1l1855 0ADC                             i1l1847 0AC4  
                           i1l1839 0AAF                             i1l1791 0880  
                           i1l1935 0DCC                             i1l1943 0DDF  
                           i1l1927 0DB2                             i1l1919 0D9D  
                           i1l1783 0A44                             i1l1775 0A0F  
                           i1l1767 0D57                             i1l1759 0D42  
                           i1l1695 0BBD                             i1l1687 0B9D  
                           i1l1679 0B8B                             u211_20 0EFF  
                           i1l1857 0AE3                             i1l1849 0AC8  
                           i1l1793 0884                             u211_21 0EFE  
                           i1l1961 0E32                             i1l1945 0DF1  
                           i1l1953 0E0E                             i1l1937 0DD1  
                           i1l1929 0DBC                             i1l1881 0B3E  
                           i1l1873 0B0E                             i1l1777 0A13  
                           i1l1769 0D62                             i1l1689 0BB0  
                           i1l1859 0AE9                             i1l1795 0886  
                           i1l1787 087B                             i1l1971 0E65  
                           i1l1963 0E4A                             i1l1955 0E15  
                           i1l1947 0DFD                             i1l1939 0DDB  
                           i1l1891 0B53                             i1l1883 0B42  
                           i1l1875 0B31                             i1l1867 0AF8  
                           i1l1779 0A2A                             i1l1699 0BC5  
                           i1l1797 0888                             i1l1789 087C  
                           i1l1981 0EAF                             i1l1973 0E7B  
                           u203_25 0E70                             i1l1965 0E54  
                           i1l1949 0E05                             i1l1893 0B5C  
                           i1l1877 0B34                             i1l1869 0B05  
                           i1l1799 088D                             i1l1991 0EEA  
                           i1l1983 0EB0                             i1l1975 0E7F  
                           i1l1967 0E5E                             i1l1959 0E20  
                           i1l1879 0B3C                             u220_20 0FA7  
                           u204_20 0E7F                             u140_20 0B9C  
                           u220_21 0FA6                             i1l1993 0EEC  
                           i1l1985 0ED8                             i1l1977 0E82  
                           u204_21 0E7E                             i1l1969 0E60  
                           i1l1889 0B4A                             u140_21 0B9B  
                           i1l1995 0EFB                             i1l1979 0E8D  
                           i1l1987 0EDC                             i1l1899 0B63  
                           u220_25 0FA3                             u212_25 0F06  
                           i1l1997 0EFF                             i1l1989 0EE2  
                           i1l1999 0F02                             u221_20 0FC6  
                           u213_20 0F19                             u141_20 0BB6  
                           u221_21 0FC5                             u213_21 0F18  
                           u141_21 0BB5                             u221_25 0FC2  
                           u205_25 0E86                             u222_20 0FE1  
                           u214_20 0F20                             u206_20 0EAF  
                           u142_20 0BBD                             u222_21 0FE0  
                           u214_21 0F1F                             u206_21 0EAE  
                           u150_21 0C7F                             u142_21 0BBC  
                           u150_22 0C86                             u150_23 0C8D  
                           u206_25 0EAB                             u230_25 06B1  
                           u215_20 0F34                             u207_20 0ED4  
                           u231_20 06BC                             u223_20 0645  
                           u151_20 0CAC                             u143_20 0BCB  
                           u215_21 0F33                             u231_21 06BB  
                           u223_21 0644                             u143_21 0BCA  
                           u207_25 0EBD                             u151_25 0CA7  
                           u207_26 0EC0                             u207_27 0EC7  
                           u216_20 0F3F                             u208_20 0EE2  
                           u207_28 0ECA                             u160_20 0A13  
                           u232_20 06C2                             u224_20 0649  
                           u144_20 0BD9                             u240_20 006F  
                           u216_21 0F3E                             u208_21 0EE1  
                           u207_29 0ED1                             u160_21 0A12  
                           u232_21 06C1                             u224_21 0648  
                           u144_21 0BD8                             u240_21 006E  
                           u152_25 0CB9                             u217_20 0F47  
                           u209_20 0EEA                             u233_20 06C6  
                           u225_20 0669                             u153_20 0CCA  
                           u145_20 0BFC                             u241_20 00EC  
                           u217_21 0F46                             u209_21 0EE9  
                           u161_21 0A1C                             u233_21 06C5  
                           u225_21 0668                             u153_21 0CC9  
                           u145_21 0BFB                             u241_21 00ED  
                           u161_22 0A23                             u241_22 00F2  
                           u161_23 0A2A                             u241_23 00F3  
                           u218_20 0F5B                             u234_20 06DB  
                           u154_20 0CD8                             u250_20 05B7  
                           u242_20 00FE                             u218_21 0F5A  
                           u250_21 05B8                             u242_21 00FF  
                           u250_22 05BD                             u242_22 0104  
                           u250_23 05BE                             u242_23 0105  
                           u170_25 07BE                             u162_25 0A2C  
                           u234_25 06D6                             u226_25 067C  
                           u154_25 0CD3                             u146_25 0C1A  
                           u219_20 0F78                             u171_20 07D7  
                           u235_20 06EB                             u227_20 068A  
                           u155_20 0CFD                             u147_20 0C43  
                           u243_20 0111                             u251_20 08CA  
                           u171_21 07D6                             u235_21 06EA  
                           u227_21 0689                             u147_21 0C42  
                           u243_21 0110                             u251_21 08C9  
                           u219_25 0F73                             u171_25 07D3  
                           u163_25 0A34                             u155_25 0CF8  
                           u164_20 0A44                             u236_20 06EF  
                           u244_20 013C                             u164_21 0A43  
                           u236_21 06EE                             u156_21 0D11  
                           u244_21 013B                             u156_22 0D18  
                           u156_23 0D1F                             u180_25 0ADD  
                           u172_25 07E7                             u228_25 069E  
                           u148_25 0C45                             u181_20 0AE9  
                           u165_20 0880                             u173_20 07F5  
                           u229_20 06AC                             u157_20 0D23  
                           u149_20 0C68                             u245_20 0179  
                           u237_20 096E                             u181_21 0AE8  
                           u165_21 087F                             u173_21 07F4  
                           u229_21 06AB                             u157_21 0D22  
                           u149_21 0C67                             u245_21 0178  
                           u237_21 096D                             u149_25 0C64  
                           u182_20 0AEE                             u174_20 0AA4  
                           u166_20 088D                             u158_20 0D31  
                           u246_20 01AB                             u238_20 092C  
                           u182_21 0AED                             u174_21 0AA3  
                           u166_21 088C                             u238_21 092B  
                           u190_25 0B66                             u158_25 0D2C  
                           u246_25 01A6                             u175_20 0AAF  
                           u191_20 0B78                             u183_20 0B05  
                           u167_20 07A8                             u159_20 0D56  
                           u247_20 0206                             u239_20 003E  
                           u263_20 08B3                             u175_21 0AAE  
                           u191_21 0B77                             u183_21 0B04  
                           u167_21 07A7                             u159_21 0D55  
                           u247_21 0209                             u239_21 003D  
                           u263_21 08B2                             u247_22 0210  
                           u247_23 0213                             u176_20 0ABA  
                           u192_20 0B7D                             u184_20 0B2A  
                           u248_20 02A6                             u264_20 08C2  
                           u272_20 09D4                             u176_21 0AB9  
                           u192_21 0B7C                             u248_21 02A5  
                           u264_21 08C1                             u272_21 09D3  
                           u184_25 0B25                             u168_25 07AD  
                           u193_20 0D84                             u185_20 0B42  
                           u169_20 07BC                             u249_20 059B  
                           u273_20 09E0                             u193_21 0D83  
                           u185_21 0B41                             u169_21 07BB  
                           u249_21 059E                             u273_21 09DF  
                           u249_22 05A5                             u249_23 05A8  
                           u177_25 0ABE                             u178_20 0ACC  
                           u194_20 0D8E                             u186_20 0B49  
                           u274_20 09EC                             u178_21 0ACB  
                           u194_21 0D8D                             u186_21 0B48  
                           u274_21 09EB                             u179_20 0AD6  
                           u195_20 0D93                             u179_21 0AD5  
                           u195_21 0D92                             u179_25 0AD2  
                           u187_25 0B4B                             u196_20 0DC2  
                           u188_20 0B5B                             u268_20 0896  
                           u196_21 0DC1                             u188_21 0B5A  
                           u268_21 0895                             u197_20 0DCC  
                           u189_20 0B62                             u269_20 0870  
                           u197_21 0DCB                             u189_21 0B61  
                           u269_21 086F                             u198_20 0DD1  
                           u198_21 0DD0                             u199_20 0DF1  
                           u199_21 0DF0                             _TMR2ON 0092  
                 __end_of___xxtofl 06F9                             ___bmul 087A  
                           ___lmul 0A05                          ??___aldiv 01CA  
                        ??___fldiv 00A0                          ??___awmod 0074  
                        ??___fltol 006C                          ??___lldiv 0079  
                  ___awmod@divisor 0070                    ___awmod@counter 0074  
                           saved_w 007E       __end_of_GBS_Interrupt_Enable 0830  
                     ___xxtofl@arg 0043                       ___xxtofl@exp 0042  
                     ___xxtofl@val 0039            __end_of__initialization 002E  
                       ___fltol@f1 00B2                ___bmul@multiplicand 0076  
                   __pcstackCOMMON 0070     i1GBS_USART_Buffer_Write@buffer 0072  
        ??i1_GBS_USART_Buffer_Read 0070                     _OPTION_REGbits 0081  
            _GBS_USART_Buffer_Read 0976                 _usartReceiveBuffer 01A3  
          __size_of_GBS_T2I_Config 0010         __end_of_GBS_Interrupt_Init 084B  
                       __pbssBANK1 00E7                         __pbssBANK2 0110  
                       __pbssBANK3 0190           i1_GBS_USART_Buffer_Write 094B  
      __size_of_GBS_Stepper_Update 001C                         __pmaintext 08FC  
                          ?___bmul 0076                            ?___lmul 002D  
                       __pintentry 0004           __size_of_GBS_Stepper_Exe 060B  
                   ___lmul@product 0035                            _T2CKPS1 0091  
                          _T2I_ISR 088F                          ?___xxtofl 0039  
         ??_GBS_USART_Buffer_Write 01C3                            ___aldiv 06F9  
                  __size_of___bmul 0015                            ___fldiv 0D6B  
             _GBS_Interrupt_Enable 082D                    __size_of___lmul 0048  
                          ___awmod 0A9F                            ___fltol 0AF8  
                          ___lldiv 0796                            __ptext1 08DF  
                          __ptext2 0976                            __ptext3 0A4D  
                          __ptext4 06F9                            __ptext5 09A1  
                          __ptext6 083F                            __ptext7 0859  
                          __ptext8 082D                            __ptext9 09CE  
                ?i1_GBS_USART_Send 0070            __size_of_GBS_USART_Init 0052  
           ?_GBS_USART_Buffer_Read 0070                       __size_of_ISR 0037  
          __size_of_GBS_USART_Send 001D                          _T1CONbits 0010  
                        _T2CONbits 0012                         ??___xxtofl 003D  
               ??i1_GBS_USART_Send 0073                   ___awmod@dividend 0072  
                 ___aldiv@dividend 01C6                            clrloop0 0838  
             end_of_initialization 002E        GBS_USART_Buffer_Write@value 01C2  
                  ___lldiv@divisor 0020                    ___lldiv@counter 002C  
                        _RCSTAbits 0018                   ___aldiv@quotient 01CD  
            ?_GBS_Interrupt_Enable 0070                            sqrt@grs 0056  
                          sqrt@exp 005A       GBS_USART_Buffer_Write@buffer 01C4  
                ??_GBS_Stepper_Exe 00B7                      ___xxtofl@sign 0041  
  __size_of_GBS_USART_Buffer_Write 002D                          _TRISAbits 0085  
                        _TRISBbits 0086                          _TRISCbits 0087  
                        _TRISDbits 0088                          _TRISEbits 0089  
                   _GBS_T2I_Config 0859                        ___fldiv@grs 00AC  
                      ___fldiv@rem 00A5                      ?_USART_RX_ISR 0070  
                    ?_USART_TX_ISR 0070                        _CCP1CONbits 0017  
                        _TXSTAbits 0098                     __end_of___bmul 088F  
                   __end_of___lmul 0A4D                        _BAUDCTLbits 0187  
       ??i1_GBS_USART_Buffer_Write 0071      i1GBS_USART_Buffer_Read@buffer 0072  
           __end_of_GBS_T2I_Config 0869                start_initialization 0019  
                      __end_of_ISR 0A05      i1GBS_USART_Buffer_Read@result 0071  
                   ??_USART_RX_ISR 0074                     ??_USART_TX_ISR 0074  
           _GBS_USART_Buffer_Write 09A1             ??_GBS_Interrupt_Enable 01C2  
               _GBS_Interrupt_Init 083F                           ??___bmul 0077  
                         ??___lmul 007A                ?_GBS_Interrupt_Init 0070  
                   _GBS_USART_Init 0A4D                     _GBS_USART_Send 08DF  
                         ?_T2I_ISR 0070                          ___fldiv@a 0064  
                        ___fldiv@b 0068                    ?_GBS_T2I_Config 0070  
                        ___latbits 0002                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0                      __pcstackBANK3 01C2  
                __size_of___xxtofl 00BC         __end_of_GBS_Stepper_Update 08DF  
             ??_GBS_Interrupt_Init 01C3           ?i1_GBS_USART_Buffer_Read 0070  
                         ?___aldiv 01C2                           ?___fldiv 0064  
                         ?___awmod 0070                    _usartSendBuffer 0190  
                         ?___fltol 00B2                           ?___lldiv 0020  
           __end_of_GBS_USART_Init 0A9F            ??_GBS_USART_Buffer_Read 01C2  
           __end_of_GBS_USART_Send 08FC               _GBS_Stepper_Exe$1640 00C6  
             _GBS_Stepper_Exe$1641 00CA               _GBS_Stepper_Exe$1642 00CE  
             _GBS_Stepper_Exe$1643 00D2               _GBS_Stepper_Exe$1644 00D6  
             _GBS_Stepper_Exe$1645 00DA               _GBS_Stepper_Exe$1646 00DE  
           GBS_USART_Init@baudRate 01D1                 GBS_T2I_Config@mode 01C2  
                  ___aldiv@divisor 01C2          __size_ofi1_GBS_USART_Send 001B  
                interrupt_function 0004                    ___aldiv@counter 01CB  
                         _IOCBbits 0096                          clear_ram0 0837  
                         _PIE1bits 008C                           _PIR1bits 000C  
                  _GBS_Stepper_Exe 0032               __end_of_USART_RX_ISR 0837  
             __end_of_USART_TX_ISR 087A                    ?_GBS_USART_Init 01D1  
                  ?_GBS_USART_Send 0070                   __size_of_T2I_ISR 0019  
                ___lmul@multiplier 002D    __end_ofi1_GBS_USART_Buffer_Read 094B  
                 __size_of___aldiv 009D                   __size_of___fldiv 0295  
                 __size_of___awmod 0059                   __size_of___fltol 0093  
                 __size_of___lldiv 0068                _GBS_USART_Init$1647 01D3  
                         ___xxtofl 063D                           _sBufferA 0110  
                         __ptext10 0869                           __ptext11 08A8  
                         __ptext20 063D                           __ptext12 0922  
                         __ptext21 0A05                           __ptext13 0830  
                         __ptext22 0796                           __ptext14 084B  
                         __ptext23 0AF8                           __ptext15 094B  
                         __ptext24 0D6B                           __ptext16 088F  
                         __ptext25 087A                           __ptext17 08C3  
                         __ptext26 0A9F                           __ptext18 0032  
                         __ptext19 0B8B      i1GBS_USART_Buffer_Write@value 0070  
          ?_GBS_USART_Buffer_Write 01C2                      __size_of_main 0026  
                    __size_of_sqrt 01E0            __end_of_GBS_Stepper_Exe 063D  
                         _stepperA 01B6                   ??_GBS_T2I_Config 01C2  
                       _INTCONbits 000B                          sqrt@tfrac 0051  
   __end_of_GBS_USART_Buffer_Write 09CE                           intlevel1 0000  
          GBS_Stepper_Exe@sBufferX 00B6                   i1_GBS_USART_Send 08A8  
                 ___lldiv@dividend 0024  __size_ofi1_GBS_USART_Buffer_Write 002B  
        ?i1_GBS_USART_Buffer_Write 0070              __size_of_USART_RX_ISR 0007  
            __size_of_USART_TX_ISR 0011                 _GBS_Stepper_Update 08C3  
           i1GBS_USART_Send@buffer 0073      __size_of_GBS_Interrupt_Enable 0003  
          GBS_USART_Receive@buffer 0073     __size_of_GBS_USART_Buffer_Read 002B  
                         sqrt@frac 0060                ?_GBS_Stepper_Update 0070  
    __end_of_GBS_USART_Buffer_Read 09A1                           sqrt@sign 004F  
                         sqrt@root 005C   __size_ofi1_GBS_USART_Buffer_Read 0029  
                 ___lldiv@quotient 0028            GBS_Stepper_Exe@stepperX 00E2  
                _GBS_USART_Receive 084B                       ___aldiv@sign 01CC  
               ?_GBS_USART_Receive 0070                       _USART_RX_ISR 0830  
                     _USART_TX_ISR 0869               ??_GBS_Stepper_Update 0070  
      __size_of_GBS_Interrupt_Init 000C                ??_GBS_USART_Receive 0073  
                 ?_GBS_Stepper_Exe 00B6                   ??_GBS_USART_Init 01D3  
                 ??_GBS_USART_Send 01C5  
