Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/production\gbs8.X.production.sym \
  --cmf=dist/default/production\gbs8.X.production.cmf -z -Q16F887 \
  -oC:\Users\ssge\AppData\Local\Temp\s1g18.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/gbs8.X.production.map -E1 -ver=XC8 Compiler \
  --acfsm=1493 -ASTACK=0110h-016Fh -pstack=STACK -ACODE=00h-07FFhx4 \
  -ASTRCODE=00h-01FFFh -ASTRING=00h-0FFhx32 -ACONST=00h-0FFhx32 \
  -AENTRY=00h-0FFhx32 -ACOMMON=070h-07Fh -ABANK0=020h-06Fh \
  -ABANK1=0A0h-0EFh -ABANK2=0110h-016Fh -ABANK3=0190h-01EFh \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\ssge\AppData\Local\Temp\s1g18.o \
  dist/default/production\gbs8.X.production.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ssge\AppData\Local\Temp\s1g18.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        3        0       0
                config                             2007     2007        2        0       4
dist/default/production\gbs8.X.production.o
                cinit                                15       15       1A        8       0
                intentry                              4        4        E        8       0
                config                             2007     2007        2        0       4
                text14                              2E2      2E2       2B        8       0
                text13                              383      383        D      69E       0
                text12                              17D      17D       6B        8       0
                text11                              3A1      3A1        1      69E       0
                text10                              30D      30D       23        8       0
                text9                               39E      39E        3      69E       0
                text8                               398      398        6      69E       0
                text7                               2B7      2B7       2B        8       0
                text6                               36B      36B       18      69E       0
                text5                               28A      28A       2D        8       0
                text4                               23B      23B       4F        8       0
                text3                                2F       2F       B1        8       0
                text2                                E0       E0       9D        8       0
                text1                               1E8      1E8       53        8       0
                maintext                            34F      34F       1C      69E       0
                cstackBANK0                          52       52       15       20       1
                cstackCOMMON                         70       70        9       70       1
                clrtext                             390      390        8      69E       0
                bssBANK1                             A0       A0       50       A0       1
                bssBANK0                             20       20       32       20       1
                bssCOMMON                            79       79        5       70       1
                strings                             330      330       1F      660       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                                15       15       1A         0
                intentry                              4        4        E         0
                reset_vec                             0        0        3         0
                text14                              2E2      2E2       2B         0
                text13                              383      383        D         0
                text12                              17D      17D       6B         0
                text11                              3A1      3A1        1         0
                text10                              30D      30D       23         0
                text9                               39E      39E        3         0
                text8                               398      398        6         0
                text7                               2B7      2B7       2B         0
                text6                               36B      36B       18         0
                text5                               28A      28A       2D         0
                text4                               23B      23B       4F         0
                text3                                2F       2F       B1         0
                text2                                E0       E0       9D         0
                text1                               1E8      1E8       53         0
                maintext                            34F      34F       1C         0
                clrtext                             390      390        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                             330      330       1F         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         70       70        9         1
                bssCOMMON                            79       79        5         1

        CLASS   BANK0          
                cstackBANK0                          52       52       15         1
                bssBANK0                             20       20       32         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       50         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000003  000003         0       0  CODE        2
                intentry                       000004  00032C  000330         8       0  CODE        2
                bssBANK0                       000020  000047  000067        20       1  BANK0       1
                cstackCOMMON                   000070  00000E  00007E        70       1  COMMON      1
                bssBANK1                       0000A0  000050  0000F0        A0       1  BANK1       1
                strings                        000330  00001F  00034F       660       0  STRING      2
                maintext                       00034F  000053  0003A2       69E       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0067-006F              9           1
        BANK2            0110-016F             60           1
        BANK3            0190-01EF             60           1
        CODE             0003-0003              1           2
                         03A2-1FFF            800
        CONST            0003-0003              1           2
                         03A2-1FFF            100
        EEDATA           2100-21FF            100           2
        ENTRY            0003-0003              1           2
                         03A2-1FFF            100
        IDLOC            2000-2003              4           2
        RAM              0067-006F              9           1
                         0110-016F             60
                         0190-01EF             60
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0003-0003              1           2
                         03A2-1FFF           1C5E
        STRING           0003-0003              1           2
                         03A2-1FFF            100

                                  Symbol Table

?___aldiv                          cstackBANK0  0052
GBS_USART_Buffer_Read@buffer       cstackBANK0  0054
GBS_USART_Buffer_Read@result       cstackBANK0  0053
GBS_USART_Buffer_Write@buffer      cstackBANK0  0054
GBS_USART_Buffer_Write@value       cstackBANK0  0052
GBS_USART_Init@baudRate            cstackBANK0  0061
GBS_USART_Write_Char@c             cstackBANK0  0059
GBS_USART_Write_Char@i             cstackBANK0  0058
GBS_USART_Write_Char@size          cstackBANK0  0055
_ANSEL                             (abs)        0188
_ANSELH                            (abs)        0189
_BAUDCTLbits                       (abs)        0187
_CCP1CONbits                       (abs)        0017
_CCPR1L                            (abs)        0015
_GBS_Interrupt_Enable              text9        039E
_GBS_Interrupt_Init                text8        0398
_GBS_Message_Update                text3        002F
_GBS_USART_Buffer_Read             text7        02B7
_GBS_USART_Buffer_Write            text5        028A
_GBS_USART_Init                    text1        01E8
_GBS_USART_Init$1753               cstackBANK0  0063
_GBS_USART_Receive                 text13       0383
_GBS_USART_Send                    text6        036B
_GBS_USART_Write_Char              text4        023B
_INTCONbits                        (abs)        000B
_IOCBbits                          (abs)        0096
_ISR                               text10       030D
_OPTION_REGbits                    (abs)        0081
_PIE1bits                          (abs)        008C
_PIR1bits                          (abs)        000C
_PR2                               (abs)        0092
_PSA                               (abs)        040B
_RCREG                             (abs)        001A
_RCSTAbits                         (abs)        0018
_SPBRG                             (abs)        0099
_T0CS                              (abs)        040D
_T1CONbits                         (abs)        0010
_T2CKPS1                           (abs)        0091
_T2CONbits                         (abs)        0012
_TMR0                              (abs)        0001
_TMR1                              (abs)        000E
_TMR2                              (abs)        0011
_TMR2ON                            (abs)        0092
_TRISAbits                         (abs)        0085
_TRISBbits                         (abs)        0086
_TRISCbits                         (abs)        0087
_TRISDbits                         (abs)        0088
_TRISEbits                         (abs)        0089
_TXREG                             (abs)        0019
_TXSTAbits                         (abs)        0098
_USART_RX_ISR                      text12       017D
_USART_TX_ISR                      text11       03A1
__Habs1                            abs1         0000
__Hbank0                           bank0        0000
__Hbank1                           bank1        0000
__Hbank2                           bank2        0000
__Hbank3                           bank3        0000
__HbssBANK0                        bssBANK0     0000
__HbssBANK1                        bssBANK1     0000
__HbssCOMMON                       bssCOMMON    0000
__Hcinit                           cinit        002F
__Hclrtext                         clrtext      0000
__Hcode                            code         0000
__Hcommon                          common       0000
__Hconfig                          config       2009
__HcstackBANK0                     cstackBANK0  0000
__HcstackCOMMON                    cstackCOMMON 0000
__Heeprom_data                     eeprom_data  0000
__Hend_init                        end_init     0015
__Hfunctab                         functab      0000
__Hinit                            init         0012
__Hintentry                        intentry     0012
__Hmaintext                        maintext     0000
__Hpowerup                         powerup      0000
__Hram                             ram          0000
__Hreset_vec                       reset_vec    0003
__Hsfr0                            sfr0         0000
__Hsfr1                            sfr1         0000
__Hsfr2                            sfr2         0000
__Hsfr3                            sfr3         0000
__Hspace_0                         (abs)        03A2
__Hspace_1                         (abs)        00F0
__Hspace_2                         (abs)        0000
__Hspace_3                         (abs)        0000
__Hspace_4                         (abs)        4010
__Hstack                           stack        0000
__Hstrings                         strings      0000
__Htext                            text         0000
__Labs1                            abs1         0000
__Lbank0                           bank0        0000
__Lbank1                           bank1        0000
__Lbank2                           bank2        0000
__Lbank3                           bank3        0000
__LbssBANK0                        bssBANK0     0000
__LbssBANK1                        bssBANK1     0000
__LbssCOMMON                       bssCOMMON    0000
__Lcinit                           cinit        0015
__Lclrtext                         clrtext      0000
__Lcode                            code         0000
__Lcommon                          common       0000
__Lconfig                          config       0000
__LcstackBANK0                     cstackBANK0  0000
__LcstackCOMMON                    cstackCOMMON 0000
__Leeprom_data                     eeprom_data  0000
__Lend_init                        end_init     0012
__Lfunctab                         functab      0000
__Linit                            init         0012
__Lintentry                        intentry     0004
__Lmaintext                        maintext     0000
__Lpowerup                         powerup      0000
__Lram                             ram          0000
__Lreset_vec                       reset_vec    0000
__Lsfr0                            sfr0         0000
__Lsfr1                            sfr1         0000
__Lsfr2                            sfr2         0000
__Lsfr3                            sfr3         0000
__Lspace_0                         (abs)        0000
__Lspace_1                         (abs)        0000
__Lspace_2                         (abs)        0000
__Lspace_3                         (abs)        0000
__Lspace_4                         (abs)        0000
__Lstack                           stack        0000
__Lstrings                         strings      0000
__Ltext                            text         0000
__S0                               (abs)        03A2
__S1                               (abs)        00F0
__S2                               (abs)        0000
__S3                               (abs)        0000
___aldiv                           text2        00E0
___aldiv@counter                   cstackBANK0  005B
___aldiv@dividend                  cstackBANK0  0056
___aldiv@divisor                   cstackBANK0  0052
___aldiv@quotient                  cstackBANK0  005D
___aldiv@sign                      cstackBANK0  005C
___int_sp                          stack        0000
___latbits                         (abs)        0002
___sp                              stack        0000
___stackhi                         (abs)        0000
___stacklo                         (abs)        0000
__end_of_GBS_Interrupt_Enable      text9        03A1
__end_of_GBS_Interrupt_Init        text8        039E
__end_of_GBS_Message_Update        text3        00E0
__end_of_GBS_USART_Buffer_Read     text7        02E2
__end_of_GBS_USART_Buffer_Write    text5        02B7
__end_of_GBS_USART_Init            text1        023B
__end_of_GBS_USART_Receive         text13       0390
__end_of_GBS_USART_Send            text6        0383
__end_of_GBS_USART_Write_Char      text4        028A
__end_of_ISR                       text10       0330
__end_of_USART_RX_ISR              text12       01E8
__end_of_USART_TX_ISR              text11       03A2
__end_of___aldiv                   text2        017D
__end_of__initialization           cinit        002B
__end_of__stringtab                strings      0336
__end_of_main                      maintext     036B
__end_ofi1_GBS_USART_Buffer_Write  text14       030D
__initialization                   cinit        0015
__pbssBANK0                        bssBANK0     0020
__pbssBANK1                        bssBANK1     00A0
__pbssCOMMON                       bssCOMMON    0079
__pcstackBANK0                     cstackBANK0  0052
__pcstackCOMMON                    cstackCOMMON 0070
__pintentry                        intentry     0004
__pmaintext                        maintext     034F
__pstrings                         strings      0330
__ptext1                           text1        01E8
__ptext10                          text10       030D
__ptext11                          text11       03A1
__ptext12                          text12       017D
__ptext13                          text13       0383
__ptext14                          text14       02E2
__ptext2                           text2        00E0
__ptext3                           text3        002F
__ptext4                           text4        023B
__ptext5                           text5        028A
__ptext6                           text6        036B
__ptext7                           text7        02B7
__ptext8                           text8        0398
__ptext9                           text9        039E
__size_of_GBS_Interrupt_Enable     (abs)        0000
__size_of_GBS_Interrupt_Init       (abs)        0000
__size_of_GBS_Message_Update       (abs)        0000
__size_of_GBS_USART_Buffer_Read    (abs)        0000
__size_of_GBS_USART_Buffer_Write   (abs)        0000
__size_of_GBS_USART_Init           (abs)        0000
__size_of_GBS_USART_Receive        (abs)        0000
__size_of_GBS_USART_Send           (abs)        0000
__size_of_GBS_USART_Write_Char     (abs)        0000
__size_of_ISR                      (abs)        0000
__size_of_USART_RX_ISR             (abs)        0000
__size_of_USART_TX_ISR             (abs)        0000
__size_of___aldiv                  (abs)        0000
__size_of_main                     (abs)        0000
__size_ofi1_GBS_USART_Buffer_Write (abs)        0000
__stringbase                       strings      0335
__stringtab                        strings      0330
_ctrlBits                          bssCOMMON    007B
_errno                             bssCOMMON    0079
_main                              maintext     034F
_sBufferA                          bssBANK1     00A0
_stepperA                          bssBANK0     0046
_uFlag                             bssCOMMON    007D
_usartReceiveBuffer                bssBANK0     0033
_usartSendBuffer                   bssBANK0     0020
btemp                              (abs)        007E
clear_ram0                         clrtext      0390
end_of_initialization              cinit        002B
i1GBS_USART_Buffer_Write@buffer    cstackCOMMON 0072
i1GBS_USART_Buffer_Write@value     cstackCOMMON 0070
i1_GBS_USART_Buffer_Write          text14       02E2
interrupt_function                 intentry     0004
intlevel0                          functab      0000
intlevel1                          functab      0000
intlevel2                          functab      0000
intlevel3                          functab      0000
intlevel4                          functab      0000
intlevel5                          functab      0000
reset_vec                          reset_vec    0000
saved_w                            (abs)        007E
start                              init         0012
start_initialization               cinit        0015
wtemp0                             (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 14 in file "../test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   24[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    7
 This function calls:
		_GBS_Interrupt_Init
		_GBS_Message_Update
		_GBS_USART_Init
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _GBS_USART_Init *****************
 Defined at:
		line 7 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  baudRate        2   15[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       4       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       6       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] long 
  dividend        4    4[BANK0 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   11[BANK0 ] long 
  sign            1   10[BANK0 ] unsigned char 
  counter         1    9[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0      15       0       0       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Init
 This function uses a non-reentrant model


 *************** function _GBS_Message_Update *****************
 Defined at:
		line 151 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    6
 This function calls:
		_GBS_USART_Send
		_GBS_USART_Write_Char
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_USART_Write_Char *****************
 Defined at:
		line 138 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  c               1    wreg     PTR unsigned char 
		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(5), 
		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(10), 
  size            1    3[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  c               1    7[BANK0 ] PTR unsigned char 
		 -> STR_8(10), STR_7(5), STR_6(5), STR_5(5), 
		 -> STR_4(5), STR_3(5), STR_2(5), STR_1(10), 
  i               1    6[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_USART_Buffer_Write
 This function is called by:
		_GBS_Message_Update
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Write *****************
 Defined at:
		line 42 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    0[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[BANK0 ] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Write_Char
 This function uses a non-reentrant model


 *************** function _GBS_USART_Send *****************
 Defined at:
		line 61 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_USART_Buffer_Read
 This function is called by:
		_GBS_Message_Update
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Read *****************
 Defined at:
		line 49 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    2[BANK0 ] PTR struct .
		 -> usartSendBuffer(19), 
  result          1    1[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Send
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Init *****************
 Defined at:
		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_Interrupt_Enable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Enable *****************
 Defined at:
		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_Interrupt_Init
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          4       0       0       0       0
      Totals:         4       0       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USART_RX_ISR
		_USART_TX_ISR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USART_TX_ISR *****************
 Defined at:
		line 76 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _USART_RX_ISR *****************
 Defined at:
		line 81 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_GBS_USART_Receive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _GBS_USART_Receive *****************
 Defined at:
		line 71 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Write
 This function is called by:
		_USART_RX_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Buffer_Write *****************
 Defined at:
		line 42 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Receive
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	00E0	0000	158

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c estimated size: 158

../test.c
		_main          		CODE           	034F	0000	29

../test.c estimated size: 29

shared
		__stringtab    		STRING         	0330	0000	7
		__initialization		CODE           	0015	0000	23
		i1_GBS_USART_Buffer_Write		CODE           	02E2	0000	44

shared estimated size: 74

../gbs8/bsp/scr/gbs8_interrupt.c
		_ISR           		CODE           	030D	0000	36
		_GBS_Interrupt_Enable		CODE           	039E	0000	4
		_GBS_Interrupt_Init		CODE           	0398	0000	7

../gbs8/bsp/scr/gbs8_interrupt.c estimated size: 47

../gbs8/bsp/scr/gbs8_usart.c
		_GBS_USART_Receive		CODE           	0383	0000	14
		_GBS_USART_Send		CODE           	036B	0000	25
		_GBS_USART_Init		CODE           	01E8	0000	84
		_USART_RX_ISR  		CODE           	017D	0000	108
		_GBS_USART_Buffer_Write		CODE           	028A	0000	46
		_GBS_Message_Update		CODE           	002F	0000	178
		_USART_TX_ISR  		CODE           	03A1	0000	2
		_GBS_USART_Buffer_Read		CODE           	02B7	0000	44
		_GBS_USART_Write_Char		CODE           	023B	0000	80

../gbs8/bsp/scr/gbs8_usart.c estimated size: 581

