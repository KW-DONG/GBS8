Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/debug\gbs8.X.debug.sym \
  --cmf=dist/default/debug\gbs8.X.debug.cmf -z -Q16F887 \
  -oC:\Users\ssge\AppData\Local\Temp\sgd4.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/gbs8.X.debug.map -E1 -ver=XC8 Compiler --acfsm=1493 \
  -ASTACK=0160h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx3,01800h-01EFFh,01FFFh-01FFFh \
  -ASTRCODE=00h-01EFFh,01FFFh-01FFFh -ASTRING=00h-0FFhx31,01FFFh-01FFFh \
  -ACONST=00h-0FFhx31,01FFFh-01FFFh -AENTRY=00h-0FFhx31,01FFFh-01FFFh \
  -ACOMMON=071h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01E4h \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01E4h \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\ssge\AppData\Local\Temp\sgd4.o dist/default/debug\gbs8.X.debug.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ssge\AppData\Local\Temp\sgd4.o
                end_init                             16       16        3        8       0
                reset_vec                             0        0        4        0       0
                config                             2007     2007        2        0       4
dist/default/debug\gbs8.X.debug.o
                cinit                               7E7      7E7       19      FCE       0
                intentry                              4        4       12        8       0
                config                             2007     2007        2        0       4
                text26                              A9F      A9F       59     153E       0
                text25                              87A      87A       15     10F4       0
                text24                              D6B      D6B      295     1AD6       0
                text23                              AF8      AF8       93     15F0       0
                text22                               1B       1B       68       36       0
                text21                              A05      A05       48     140A       0
                text20                              120      120       BC      240       0
                text19                              B8B      B8B      1E0     1716       0
                text18                              1DC      1DC      60B      3B8       0
                text17                              8C3      8C3       1C     1186       0
                text16                              88F      88F       19     111E       0
                text15                              94B      94B       2B     1296       0
                text14                              84B      84B        E     1096       0
                text13                              830      830        7     1060       0
                text12                              922      922       29     1244       0
                text11                              8A8      8A8       1B     1150       0
                text10                              869      869       11     10D2       0
                text9                               9CE      9CE       37     139C       0
                text8                               82D      82D        3     105A       0
                text7                               859      859       10     10B2       0
                text6                               83F      83F        C     107E       0
                text5                               9A1      9A1       2D     1342       0
                text4                                83       83       9D      106       0
                text3                               A4D      A4D       52     149A       0
                text2                               976      976       2B     12EC       0
                text1                               8DF      8DF       1D     11BE       0
                maintext                            8FC      8FC       26     11F8       0
                cstackBANK0                          20       20       50       20       1
                cstackCOMMON                         71       71        D       71       1
                cstackBANK1                          A0       A0       47       A0       1
                cstackBANK3                         1C2      1C2       15      190       1
                clrtext                             837      837        8     106E       0
                bssBANK2                            110      110       50      110       1
                bssBANK3                            190      190       32      190       1
                bssBANK1                             E7       E7        2       A0       1

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             16       16        3         0
                cinit                               7E7      7E7       19         0
                intentry                              4        4       12         0
                reset_vec                             0        0        4         0
                text26                              A9F      A9F       59         0
                text25                              87A      87A       15         0
                text24                              D6B      D6B      295         0
                text23                              AF8      AF8       93         0
                text22                               1B       1B       68         0
                text21                              A05      A05       48         0
                text20                              120      120       BC         0
                text19                              B8B      B8B      1E0         0
                text18                              1DC      1DC      60B         0
                text17                              8C3      8C3       1C         0
                text16                              88F      88F       19         0
                text15                              94B      94B       2B         0
                text14                              84B      84B        E         0
                text13                              830      830        7         0
                text12                              922      922       29         0
                text11                              8A8      8A8       1B         0
                text10                              869      869       11         0
                text9                               9CE      9CE       37         0
                text8                               82D      82D        3         0
                text7                               859      859       10         0
                text6                               83F      83F        C         0
                text5                               9A1      9A1       2D         0
                text4                                83       83       9D         0
                text3                               A4D      A4D       52         0
                text2                               976      976       2B         0
                text1                               8DF      8DF       1D         0
                maintext                            8FC      8FC       26         0
                clrtext                             837      837        8         0

        CLASS   STRCODE        

        CLASS   STRING         

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         71       71        D         1

        CLASS   BANK0          
                cstackBANK0                          20       20       50         1

        CLASS   BANK1          
                cstackBANK1                          A0       A0       47         1
                bssBANK1                             E7       E7        2         1

        CLASS   BANK2          
                bssBANK2                            110      110       50         1

        CLASS   BANK3          
                cstackBANK3                         1C2      1C2       15         1
                bssBANK3                            190      190       32         1

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000004  000004         0       0  CODE        2
                intentry                       000004  000015  000019         8       0  CODE        2
                cstackBANK0                    000020  000050  000070        20       1  BANK0       1
                text22                         00001B  000068  000083        36       0  CODE        2
                cstackCOMMON                   000071  00000D  00007E        71       1  COMMON      1
                cstackBANK1                    0000A0  000049  0000E9        A0       1  BANK1       1
                text4                          000083  00009D  000120       106       0  CODE        2
                bssBANK2                       000110  000050  000160       110       1  BANK2       1
                bssBANK3                       000190  000047  0001D7       190       1  BANK3       1
                text20                         000120  0000BC  0001DC       240       0  CODE        2
                text18                         0001DC  00060B  0007E7       3B8       0  CODE        2
                cinit                          0007E7  000019  000800       FCE       0  CODE        2
                text8                          00082D  000003  000830      105A       0  CODE        2
                text13                         000830  000007  000837      1060       0  CODE        2
                clrtext                        000837  000008  00083F      106E       0  CODE        2
                text6                          00083F  00000C  00084B      107E       0  CODE        2
                text14                         00084B  00000E  000859      1096       0  CODE        2
                text7                          000859  000010  000869      10B2       0  CODE        2
                text10                         000869  000011  00087A      10D2       0  CODE        2
                text25                         00087A  000015  00088F      10F4       0  CODE        2
                text16                         00088F  000019  0008A8      111E       0  CODE        2
                text11                         0008A8  00001B  0008C3      1150       0  CODE        2
                text17                         0008C3  00001C  0008DF      1186       0  CODE        2
                text1                          0008DF  00001D  0008FC      11BE       0  CODE        2
                maintext                       0008FC  000026  000922      11F8       0  CODE        2
                text12                         000922  000029  00094B      1244       0  CODE        2
                text15                         00094B  00002B  000976      1296       0  CODE        2
                text2                          000976  00002B  0009A1      12EC       0  CODE        2
                text5                          0009A1  00002D  0009CE      1342       0  CODE        2
                text9                          0009CE  000037  000A05      139C       0  CODE        2
                text21                         000A05  000048  000A4D      140A       0  CODE        2
                text3                          000A4D  000052  000A9F      149A       0  CODE        2
                text26                         000A9F  000059  000AF8      153E       0  CODE        2
                text23                         000AF8  000093  000B8B      15F0       0  CODE        2
                text19                         000B8B  0001E0  000D6B      1716       0  CODE        2
                text24                         000D6B  000295  001000      1AD6       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK1            00E9-00EF              7           1
        BANK2            0160-016F             10           1
        BANK3            01D7-01E4              E           1
        CODE             0019-001A              2           2
                         0800-082C             2D
                         1000-1EFF            800
                         1FFF-1FFF              1
        CONST            0019-001A              2           2
                         0800-082C             2D
                         1000-1EFF            100
                         1FFF-1FFF              1
        EEDATA           2100-21FF            100           2
        ENTRY            0019-001A              2           2
                         0800-082C             2D
                         1000-1EFF            100
                         1FFF-1FFF              1
        IDLOC            2000-2003              4           2
        RAM              00E9-00EF              7           1
                         0160-016F             10
                         01D7-01E4              E
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0160-016F             10           1
        STRCODE          0019-001A              2           2
                         0800-082C             2D
                         1000-1EFF            F00
                         1FFF-1FFF              1
        STRING           0019-001A              2           2
                         0800-082C             2D
                         1000-1EFF            100
                         1FFF-1FFF              1

                                  Symbol Table

?___aldiv                          cstackBANK3  01C2
?___awmod                          cstackCOMMON 0071
?___fldiv                          cstackBANK0  0064
?___fltol                          cstackBANK1  00B2
?___lldiv                          cstackBANK0  0020
?___lmul                           cstackBANK0  002D
?___xxtofl                         cstackBANK0  0039
?_sqrt                             cstackBANK0  0047
GBS_Stepper_Exe@sBufferX           cstackBANK1  00B6
GBS_Stepper_Exe@stepperX           cstackBANK1  00E2
GBS_T2I_Config@mode                cstackBANK3  01C2
GBS_USART_Buffer_Read@buffer       cstackBANK3  01C4
GBS_USART_Buffer_Read@result       cstackBANK3  01C3
GBS_USART_Buffer_Write@buffer      cstackBANK3  01C4
GBS_USART_Buffer_Write@value       cstackBANK3  01C2
GBS_USART_Init@baudRate            cstackBANK3  01D1
GBS_USART_Receive@buffer           cstackCOMMON 0074
GBS_USART_Send@buffer              cstackBANK3  01C5
_ANSEL                             (abs)        0188
_ANSELH                            (abs)        0189
_BAUDCTLbits                       (abs)        0187
_CCP1CONbits                       (abs)        0017
_CCPR1L                            (abs)        0015
_GBS_Interrupt_Enable              text8        082D
_GBS_Interrupt_Init                text6        083F
_GBS_Stepper_Exe                   text18       01DC
_GBS_Stepper_Exe$1640              cstackBANK1  00C6
_GBS_Stepper_Exe$1641              cstackBANK1  00CA
_GBS_Stepper_Exe$1642              cstackBANK1  00CE
_GBS_Stepper_Exe$1643              cstackBANK1  00D2
_GBS_Stepper_Exe$1644              cstackBANK1  00D6
_GBS_Stepper_Exe$1645              cstackBANK1  00DA
_GBS_Stepper_Exe$1646              cstackBANK1  00DE
_GBS_Stepper_Update                text17       08C3
_GBS_T2I_Config                    text7        0859
_GBS_USART_Buffer_Read             text2        0976
_GBS_USART_Buffer_Write            text5        09A1
_GBS_USART_Init                    text3        0A4D
_GBS_USART_Init$1647               cstackBANK3  01D3
_GBS_USART_Receive                 text14       084B
_GBS_USART_Send                    text1        08DF
_INTCONbits                        (abs)        000B
_IOCBbits                          (abs)        0096
_ISR                               text9        09CE
_OPTION_REGbits                    (abs)        0081
_PIE1bits                          (abs)        008C
_PIR1bits                          (abs)        000C
_PR2                               (abs)        0092
_PSA                               (abs)        040B
_RCREG                             (abs)        001A
_RCSTAbits                         (abs)        0018
_SPBRG                             (abs)        0099
_T0CS                              (abs)        040D
_T1CONbits                         (abs)        0010
_T2CKPS1                           (abs)        0091
_T2CONbits                         (abs)        0012
_T2I_ISR                           text16       088F
_TMR0                              (abs)        0001
_TMR1                              (abs)        000E
_TMR2                              (abs)        0011
_TMR2ON                            (abs)        0092
_TRISAbits                         (abs)        0085
_TRISBbits                         (abs)        0086
_TRISCbits                         (abs)        0087
_TRISDbits                         (abs)        0088
_TRISEbits                         (abs)        0089
_TXREG                             (abs)        0019
_TXSTAbits                         (abs)        0098
_USART_RX_ISR                      text13       0830
_USART_TX_ISR                      text10       0869
__Habs1                            abs1         0000
__Hbank0                           bank0        0000
__Hbank1                           bank1        0000
__Hbank2                           bank2        0000
__Hbank3                           bank3        0000
__HbssBANK1                        bssBANK1     0000
__HbssBANK2                        bssBANK2     0000
__HbssBANK3                        bssBANK3     0000
__Hcinit                           cinit        0800
__Hclrtext                         clrtext      0000
__Hcode                            code         0000
__Hcommon                          common       0000
__Hconfig                          config       2009
__HcstackBANK0                     cstackBANK0  0000
__HcstackBANK1                     cstackBANK1  0000
__HcstackBANK3                     cstackBANK3  0000
__HcstackCOMMON                    cstackCOMMON 0000
__Heeprom_data                     eeprom_data  0000
__Hend_init                        end_init     0019
__Hfunctab                         functab      0000
__Hinit                            init         0016
__Hintentry                        intentry     0016
__Hmaintext                        maintext     0000
__Hpowerup                         powerup      0000
__Hram                             ram          0000
__Hreset_vec                       reset_vec    0004
__Hsfr0                            sfr0         0000
__Hsfr1                            sfr1         0000
__Hsfr2                            sfr2         0000
__Hsfr3                            sfr3         0000
__Hspace_0                         (abs)        1000
__Hspace_1                         (abs)        01D7
__Hspace_2                         (abs)        0000
__Hspace_3                         (abs)        0000
__Hspace_4                         (abs)        4010
__Hstack                           stack        0000
__Hstrings                         strings      0000
__Htext                            text         0000
__Labs1                            abs1         0000
__Lbank0                           bank0        0000
__Lbank1                           bank1        0000
__Lbank2                           bank2        0000
__Lbank3                           bank3        0000
__LbssBANK1                        bssBANK1     0000
__LbssBANK2                        bssBANK2     0000
__LbssBANK3                        bssBANK3     0000
__Lcinit                           cinit        07E7
__Lclrtext                         clrtext      0000
__Lcode                            code         0000
__Lcommon                          common       0000
__Lconfig                          config       0000
__LcstackBANK0                     cstackBANK0  0000
__LcstackBANK1                     cstackBANK1  0000
__LcstackBANK3                     cstackBANK3  0000
__LcstackCOMMON                    cstackCOMMON 0000
__Leeprom_data                     eeprom_data  0000
__Lend_init                        end_init     0016
__Lfunctab                         functab      0000
__Linit                            init         0016
__Lintentry                        intentry     0004
__Lmaintext                        maintext     0000
__Lpowerup                         powerup      0000
__Lram                             ram          0000
__Lreset_vec                       reset_vec    0000
__Lsfr0                            sfr0         0000
__Lsfr1                            sfr1         0000
__Lsfr2                            sfr2         0000
__Lsfr3                            sfr3         0000
__Lspace_0                         (abs)        0000
__Lspace_1                         (abs)        0000
__Lspace_2                         (abs)        0000
__Lspace_3                         (abs)        0000
__Lspace_4                         (abs)        0000
__Lstack                           stack        0000
__Lstrings                         strings      0000
__Ltext                            text         0000
__S0                               (abs)        1000
__S1                               (abs)        01D7
__S2                               (abs)        0000
__S3                               (abs)        0000
___aldiv                           text4        0083
___aldiv@counter                   cstackBANK3  01CB
___aldiv@dividend                  cstackBANK3  01C6
___aldiv@divisor                   cstackBANK3  01C2
___aldiv@quotient                  cstackBANK3  01CD
___aldiv@sign                      cstackBANK3  01CC
___awmod                           text26       0A9F
___awmod@counter                   cstackCOMMON 0075
___awmod@dividend                  cstackCOMMON 0073
___awmod@divisor                   cstackCOMMON 0071
___awmod@sign                      cstackCOMMON 0076
___bmul                            text25       087A
___bmul@multiplicand               cstackCOMMON 0077
___bmul@multiplier                 cstackCOMMON 0079
___bmul@product                    cstackCOMMON 0078
___fldiv                           text24       0D6B
___fldiv@a                         cstackBANK0  0064
___fldiv@aexp                      cstackBANK1  00B1
___fldiv@b                         cstackBANK0  0068
___fldiv@bexp                      cstackBANK1  00B0
___fldiv@grs                       cstackBANK1  00AC
___fldiv@new_exp                   cstackBANK1  00AA
___fldiv@rem                       cstackBANK1  00A5
___fldiv@sign                      cstackBANK1  00A9
___fltol                           text23       0AF8
___fltol@exp1                      cstackCOMMON 007D
___fltol@f1                        cstackBANK1  00B2
___fltol@sign1                     cstackCOMMON 007C
___int_sp                          stack        0000
___latbits                         (abs)        0002
___lldiv                           text22       001B
___lldiv@counter                   cstackBANK0  002C
___lldiv@dividend                  cstackBANK0  0024
___lldiv@divisor                   cstackBANK0  0020
___lldiv@quotient                  cstackBANK0  0028
___lmul                            text21       0A05
___lmul@multiplicand               cstackBANK0  0031
___lmul@multiplier                 cstackBANK0  002D
___lmul@product                    cstackBANK0  0035
___sp                              stack        0000
___stackhi                         (abs)        0000
___stacklo                         (abs)        0000
___xxtofl                          text20       0120
___xxtofl@arg                      cstackBANK0  0043
___xxtofl@exp                      cstackBANK0  0042
___xxtofl@sign                     cstackBANK0  0041
___xxtofl@val                      cstackBANK0  0039
__end_of_GBS_Interrupt_Enable      text8        0830
__end_of_GBS_Interrupt_Init        text6        084B
__end_of_GBS_Stepper_Exe           text18       07E7
__end_of_GBS_Stepper_Update        text17       08DF
__end_of_GBS_T2I_Config            text7        0869
__end_of_GBS_USART_Buffer_Read     text2        09A1
__end_of_GBS_USART_Buffer_Write    text5        09CE
__end_of_GBS_USART_Init            text3        0A9F
__end_of_GBS_USART_Receive         text14       0859
__end_of_GBS_USART_Send            text1        08FC
__end_of_ISR                       text9        0A05
__end_of_T2I_ISR                   text16       08A8
__end_of_USART_RX_ISR              text13       0837
__end_of_USART_TX_ISR              text10       087A
__end_of___aldiv                   text4        0120
__end_of___awmod                   text26       0AF8
__end_of___bmul                    text25       088F
__end_of___fldiv                   text24       1000
__end_of___fltol                   text23       0B8B
__end_of___lldiv                   text22       0083
__end_of___lmul                    text21       0A4D
__end_of___xxtofl                  text20       01DC
__end_of__initialization           cinit        07FC
__end_of_main                      maintext     0922
__end_of_sqrt                      text19       0D6B
__end_ofi1_GBS_USART_Buffer_Read   text12       094B
__end_ofi1_GBS_USART_Buffer_Write  text15       0976
__end_ofi1_GBS_USART_Send          text11       08C3
__initialization                   cinit        07E7
__pbssBANK1                        bssBANK1     00E7
__pbssBANK2                        bssBANK2     0110
__pbssBANK3                        bssBANK3     0190
__pcstackBANK0                     cstackBANK0  0020
__pcstackBANK1                     cstackBANK1  00A0
__pcstackBANK3                     cstackBANK3  01C2
__pcstackCOMMON                    cstackCOMMON 0071
__pintentry                        intentry     0004
__pmaintext                        maintext     08FC
__ptext1                           text1        08DF
__ptext10                          text10       0869
__ptext11                          text11       08A8
__ptext12                          text12       0922
__ptext13                          text13       0830
__ptext14                          text14       084B
__ptext15                          text15       094B
__ptext16                          text16       088F
__ptext17                          text17       08C3
__ptext18                          text18       01DC
__ptext19                          text19       0B8B
__ptext2                           text2        0976
__ptext20                          text20       0120
__ptext21                          text21       0A05
__ptext22                          text22       001B
__ptext23                          text23       0AF8
__ptext24                          text24       0D6B
__ptext25                          text25       087A
__ptext26                          text26       0A9F
__ptext3                           text3        0A4D
__ptext4                           text4        0083
__ptext5                           text5        09A1
__ptext6                           text6        083F
__ptext7                           text7        0859
__ptext8                           text8        082D
__ptext9                           text9        09CE
__size_of_GBS_Interrupt_Enable     (abs)        0000
__size_of_GBS_Interrupt_Init       (abs)        0000
__size_of_GBS_Stepper_Exe          (abs)        0000
__size_of_GBS_Stepper_Update       (abs)        0000
__size_of_GBS_T2I_Config           (abs)        0000
__size_of_GBS_USART_Buffer_Read    (abs)        0000
__size_of_GBS_USART_Buffer_Write   (abs)        0000
__size_of_GBS_USART_Init           (abs)        0000
__size_of_GBS_USART_Receive        (abs)        0000
__size_of_GBS_USART_Send           (abs)        0000
__size_of_ISR                      (abs)        0000
__size_of_T2I_ISR                  (abs)        0000
__size_of_USART_RX_ISR             (abs)        0000
__size_of_USART_TX_ISR             (abs)        0000
__size_of___aldiv                  (abs)        0000
__size_of___awmod                  (abs)        0000
__size_of___bmul                   (abs)        0000
__size_of___fldiv                  (abs)        0000
__size_of___fltol                  (abs)        0000
__size_of___lldiv                  (abs)        0000
__size_of___lmul                   (abs)        0000
__size_of___xxtofl                 (abs)        0000
__size_of_main                     (abs)        0000
__size_of_sqrt                     (abs)        0000
__size_ofi1_GBS_USART_Buffer_Read  (abs)        0000
__size_ofi1_GBS_USART_Buffer_Write (abs)        0000
__size_ofi1_GBS_USART_Send         (abs)        0000
_errno                             bssBANK1     00E7
_main                              maintext     08FC
_sBufferA                          bssBANK2     0110
_sqrt                              text19       0B8B
_stepperA                          bssBANK3     01B6
_usartReceiveBuffer                bssBANK3     01A3
_usartSendBuffer                   bssBANK3     0190
btemp                              (abs)        007E
clear_ram0                         clrtext      0837
end_of_initialization              cinit        07FC
i1GBS_USART_Buffer_Read@buffer     cstackCOMMON 0073
i1GBS_USART_Buffer_Read@result     cstackCOMMON 0072
i1GBS_USART_Buffer_Write@buffer    cstackCOMMON 0073
i1GBS_USART_Buffer_Write@value     cstackCOMMON 0071
i1GBS_USART_Send@buffer            cstackCOMMON 0074
i1_GBS_USART_Buffer_Read           text12       0922
i1_GBS_USART_Buffer_Write          text15       094B
i1_GBS_USART_Send                  text11       08A8
interrupt_function                 intentry     0004
intlevel0                          functab      0000
intlevel1                          functab      0000
intlevel2                          functab      0000
intlevel3                          functab      0000
intlevel4                          functab      0000
intlevel5                          functab      0000
reset_vec                          reset_vec    0000
saved_w                            (abs)        007E
sqrt@a                             cstackBANK0  0047
sqrt@exp                           cstackBANK0  005A
sqrt@frac                          cstackBANK0  0060
sqrt@grs                           cstackBANK0  0056
sqrt@i                             cstackBANK0  0050
sqrt@p                             cstackBANK0  0055
sqrt@root                          cstackBANK0  005C
sqrt@sign                          cstackBANK0  004F
sqrt@tfrac                         cstackBANK0  0051
start                              init         0016
start_initialization               cinit        07E7
wtemp0                             (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 14 in file "../test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   20[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_GBS_Interrupt_Init
		_GBS_USART_Buffer_Write
		_GBS_USART_Init
		_GBS_USART_Send
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _GBS_USART_Send *****************
 Defined at:
		line 58 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    3[BANK3 ] PTR struct .
		 -> usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_USART_Buffer_Read
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Read *****************
 Defined at:
		line 46 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    2[BANK3 ] PTR struct .
		 -> usartSendBuffer(19), 
  result          1    1[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       2       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Send
 This function uses a non-reentrant model


 *************** function _GBS_USART_Init *****************
 Defined at:
		line 6 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  baudRate        2   15[BANK3 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       2       0
      Locals:         0       0       0       4       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       6       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		___aldiv
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___aldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK3 ] long 
  dividend        4    4[BANK3 ] long 
 Auto vars:     Size  Location     Type
  quotient        4   11[BANK3 ] long 
  sign            1   10[BANK3 ] unsigned char 
  counter         1    9[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK3 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       8       0
      Locals:         0       0       0       6       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0      15       0
Total ram usage:       15 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Init
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Write *****************
 Defined at:
		line 39 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    0[BANK3 ] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[BANK3 ] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       1       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       1       0
      Totals:         0       0       0       3       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Init *****************
 Defined at:
		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_Interrupt_Enable
		_GBS_T2I_Config
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_T2I_Config *****************
 Defined at:
		line 82 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
  mode            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  mode            1    0[BANK3 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       1       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       1       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_Interrupt_Init
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Enable *****************
 Defined at:
		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_Interrupt_Init
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       4       0       0
      Totals:         0       0       4       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_T2I_ISR
		_USART_RX_ISR
		_USART_TX_ISR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USART_TX_ISR *****************
 Defined at:
		line 73 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_GBS_USART_Send
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Send *****************
 Defined at:
		line 58 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    3[COMMON] PTR struct .
		 -> usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Read
 This function is called by:
		_USART_TX_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Buffer_Read *****************
 Defined at:
		line 46 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR struct .
		 -> usartSendBuffer(19), 
  result          1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_GBS_USART_Send
 This function uses a non-reentrant model


 *************** function _USART_RX_ISR *****************
 Defined at:
		line 80 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_GBS_USART_Receive
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _GBS_USART_Receive *****************
 Defined at:
		line 68 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    3[COMMON] PTR struct .
		 -> usartReceiveBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         1       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Write
 This function is called by:
		_USART_RX_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Buffer_Write *****************
 Defined at:
		line 39 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Receive
 This function uses a non-reentrant model


 *************** function _T2I_ISR *****************
 Defined at:
		line 325 in file "../gbs8/driver/scr/gbs8_stepper.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_GBS_Stepper_Exe
		_GBS_Stepper_Update
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function _GBS_Stepper_Update *****************
 Defined at:
		line 261 in file "../gbs8/driver/scr/gbs8_stepper.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_T2I_ISR
 This function uses a non-reentrant model


 *************** function _GBS_Stepper_Exe *****************
 Defined at:
		line 198 in file "../gbs8/driver/scr/gbs8_stepper.c"
 Parameters:    Size  Location     Type
  stepperX        1    wreg     PTR struct .
		 -> stepperA(12), 
  sBufferX        1   22[BANK1 ] PTR struct .
		 -> sBufferA(80), 
 Auto vars:     Size  Location     Type
  stepperX        1   66[BANK1 ] PTR struct .
		 -> stepperA(12), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       1       0       0
      Locals:         0       0      29       0       0
      Temps:          0       0      15       0       0
      Totals:         0       0      45       0       0
Total ram usage:       45 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		___awmod
		___bmul
		___fldiv
		___fltol
		___lldiv
		___lmul
		___xxtofl
		_sqrt
 This function is called by:
		_T2I_ISR
 This function uses a non-reentrant model


 *************** function _sqrt *****************
 Defined at:
		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c"
 Parameters:    Size  Location     Type
  a               4   39[BANK0 ] void 
 Auto vars:     Size  Location     Type
  frac            4   64[BANK0 ] unsigned long 
  root            4   60[BANK0 ] struct .
  grs             4   54[BANK0 ] unsigned long 
  tfrac           4   49[BANK0 ] unsigned long 
  exp             2   58[BANK0 ] int 
  p               1   53[BANK0 ] unsigned char 
  i               1   48[BANK0 ] unsigned char 
  sign            1   47[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   39[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0      21       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      29       0       0       0
Total ram usage:       29 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
 This function uses a non-reentrant model


 *************** function ___xxtofl *****************
 Defined at:
		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c"
 Parameters:    Size  Location     Type
  sign            1    wreg     unsigned char 
  val             4   25[BANK0 ] long 
 Auto vars:     Size  Location     Type
  sign            1   33[BANK0 ] unsigned char 
  arg             4   35[BANK0 ] unsigned long 
  exp             1   34[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4   25[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       4       0       0       0
      Locals:         0       6       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0      14       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Planner
 This function uses a non-reentrant model


 *************** function ___lmul *****************
 Defined at:
		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c"
 Parameters:    Size  Location     Type
  multiplier      4   13[BANK0 ] unsigned long 
  multiplicand    4   17[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  product         4   21[BANK0 ] unsigned long 
 Return value:  Size  Location     Type
                  4   13[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       4       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      12       0       0       0
Total ram usage:       13 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Planner
 This function uses a non-reentrant model


 *************** function ___lldiv *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c"
 Parameters:    Size  Location     Type
  divisor         4    0[BANK0 ] unsigned long 
  dividend        4    4[BANK0 ] unsigned long 
 Auto vars:     Size  Location     Type
  quotient        4    8[BANK0 ] unsigned long 
  counter         1   12[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  4    0[BANK0 ] unsigned long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       5       0       0       0
      Temps:          1       0       0       0       0
      Totals:         1      13       0       0       0
Total ram usage:       14 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
 This function uses a non-reentrant model


 *************** function ___fltol *****************
 Defined at:
		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c"
 Parameters:    Size  Location     Type
  f1              4   18[BANK1 ] unsigned long 
 Auto vars:     Size  Location     Type
  exp1            1   12[COMMON] unsigned char 
  sign1           1   11[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  4   18[BANK1 ] long 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       4       0       0
      Locals:         2       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         2       4       4       0       0
Total ram usage:       10 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Planner
 This function uses a non-reentrant model


 *************** function ___fldiv *****************
 Defined at:
		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c"
 Parameters:    Size  Location     Type
  a               4   68[BANK0 ] long 
  b               4   72[BANK0 ] long 
 Auto vars:     Size  Location     Type
  grs             4   12[BANK1 ] unsigned long 
  rem             4    5[BANK1 ] unsigned long 
  new_exp         2   10[BANK1 ] int 
  aexp            1   17[BANK1 ] unsigned char 
  bexp            1   16[BANK1 ] unsigned char 
  sign            1    9[BANK1 ] unsigned char 
 Return value:  Size  Location     Type
                  4   68[BANK0 ] unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       8       0       0       0
      Locals:         0       0      13       0       0
      Temps:          0       0       5       0       0
      Totals:         0       8      18       0       0
Total ram usage:       26 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Planner
 This function uses a non-reentrant model


 *************** function ___bmul *****************
 Defined at:
		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c"
 Parameters:    Size  Location     Type
  multiplier      1    wreg     unsigned char 
  multiplicand    1    6[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  multiplier      1    8[COMMON] unsigned char 
  product         1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Buffer_Init
		_GBS_Stepper_Planner
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c"
 Parameters:    Size  Location     Type
  divisor         2    0[COMMON] int 
  dividend        2    2[COMMON] int 
 Auto vars:     Size  Location     Type
  sign            1    5[COMMON] unsigned char 
  counter         1    4[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  2    0[COMMON] int 
 Registers used:
		wreg, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         4       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         6       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_Stepper_Exe
		_GBS_Stepper_Planner
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c
		___lmul        		CODE           	0A05	0000	73

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul32.c estimated size: 73

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c
		___aldiv       		CODE           	0083	0000	158

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\aldiv.c estimated size: 158

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c
		___lldiv       		CODE           	001B	0000	105

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\__lldiv.c estimated size: 105

../test.c
		_main          		CODE           	08FC	0000	39

../test.c estimated size: 39

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c
		_sqrt          		CODE           	0B8B	0000	481

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcsqrt.c estimated size: 481

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c
		___xxtofl      		CODE           	0120	0000	189

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\xxtofl.c estimated size: 189

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c
		___awmod       		CODE           	0A9F	0000	90

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\awmod.c estimated size: 90

shared
		i1_GBS_USART_Buffer_Read		CODE           	0922	0000	42
		__initialization		CODE           	07E7	0000	22
		i1_GBS_USART_Buffer_Write		CODE           	094B	0000	44
		i1_GBS_USART_Send		CODE           	08A8	0000	28

shared estimated size: 136

../gbs8/bsp/scr/gbs8_interrupt.c
		_GBS_T2I_Config		CODE           	0859	0000	17
		_ISR           		CODE           	09CE	0000	56
		_GBS_Interrupt_Enable		CODE           	082D	0000	4
		_GBS_Interrupt_Init		CODE           	083F	0000	13

../gbs8/bsp/scr/gbs8_interrupt.c estimated size: 90

../gbs8/bsp/scr/gbs8_usart.c
		_GBS_USART_Receive		CODE           	084B	0000	15
		_GBS_USART_Send		CODE           	08DF	0000	30
		_GBS_USART_Init		CODE           	0A4D	0000	83
		_USART_RX_ISR  		CODE           	0830	0000	8
		_GBS_USART_Buffer_Write		CODE           	09A1	0000	46
		_USART_TX_ISR  		CODE           	0869	0000	18
		_GBS_USART_Buffer_Read		CODE           	0976	0000	44

../gbs8/bsp/scr/gbs8_usart.c estimated size: 244

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c
		___fltol       		CODE           	0AF8	0000	148

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\fltol.c estimated size: 148

../gbs8/driver/scr/gbs8_stepper.c
		_GBS_Stepper_Update		CODE           	08C3	0000	29
		_GBS_Stepper_Exe		CODE           	01DC	0000	1548
		_T2I_ISR       		CODE           	088F	0000	26

../gbs8/driver/scr/gbs8_stepper.c estimated size: 1603

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c
		___bmul        		CODE           	087A	0000	22

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\Umul8.c estimated size: 22

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c
		___fldiv       		CODE           	0D6B	0000	662

C:\Program Files\Microchip\xc8\v2.20\pic\sources\c90\common\sprcdiv.c estimated size: 662

