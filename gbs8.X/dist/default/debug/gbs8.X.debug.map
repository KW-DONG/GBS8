Microchip MPLAB XC8 Compiler V2.20

Linker command line:

-W-3 --edf=C:\Program Files\Microchip\xc8\v2.20\pic\dat\en_msgs.txt -cn \
  -h+dist/default/debug\gbs8.X.debug.sym \
  --cmf=dist/default/debug\gbs8.X.debug.cmf -z -Q16F887 \
  -oC:\Users\ssge\AppData\Local\Temp\ssrg.2 --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/debug/gbs8.X.debug.map -E1 -ver=XC8 Compiler --acfsm=1493 \
  -ASTACK=0110h-016Fh -pstack=STACK \
  -ACODE=00h-07FFhx3,01800h-01EFFh,01FFFh-01FFFh \
  -ASTRCODE=00h-01EFFh,01FFFh-01FFFh -ASTRING=00h-0FFhx31,01FFFh-01FFFh \
  -ACONST=00h-0FFhx31,01FFFh-01FFFh -AENTRY=00h-0FFhx31,01FFFh-01FFFh \
  -ACOMMON=071h-07Fh -ABANK0=020h-06Fh -ABANK1=0A0h-0EFh \
  -ABANK2=0110h-016Fh -ABANK3=0190h-01E4h \
  -ARAM=020h-06Fh,0A0h-0EFh,0110h-016Fh,0190h-01E4h \
  -AABS1=020h-07Fh,0A0h-0EFh,0110h-016Fh,0190h-01EFh -ASFR0=00h-01Fh \
  -ASFR1=080h-09Fh -ASFR2=0100h-010Fh -ASFR3=0180h-018Fh \
  -ACONFIG=02007h-02008h -DCONFIG=2 -AIDLOC=02000h-02003h -DIDLOC=2 \
  -preset_vec=00h,intentry=04h,init,end_init -ppowerup=CODE -pcinit=CODE \
  -pfunctab=ENTRY -AEEDATA=00h-0FFh/02100h -peeprom_data=EEDATA -DEEDATA=2 \
  -DCODE=2 -DSTRCODE=2 -DSTRING=2 -DCONST=2 -DENTRY=2 -k \
  C:\Users\ssge\AppData\Local\Temp\ssrg.o dist/default/debug\gbs8.X.debug.o 

Object code version is 3.11

Machine type is 16F887



                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ssge\AppData\Local\Temp\ssrg.o
                end_init                             12       12        3        8       0
                reset_vec                             0        0        4        0       0
                config                             2007     2007        2        0       4
dist/default/debug\gbs8.X.debug.o
                cinit                               7E9      7E9       17      FD2       0
                intentry                              4        4        E        8       0
                config                             2007     2007        2        0       4
                text15                              607      607       2B      C0E       0
                text14                              550      550        D      AA0       0
                text13                              68A      68A       45      D14       0
                text12                              767      767       82      ECE       0
                text11                              5DE      5DE       29      BBC       0
                text10                              56D      56D       1A      ADA       0
                text9                               55D      55D       10      ABA       0
                text8                               5BB      5BB       23      B76       0
                text7                               53F      53F        3      A7E       0
                text6                               542      542        6      A84       0
                text5                               587      587       1A      B0E       0
                text4                               632      632       2B      C64       0
                text3                               5A1      5A1       1A      B42       0
                text2                               65D      65D       2D      CBA       0
                text1                               718      718       4F      E30       0
                maintext                            6CF      6CF       49      D9E       0
                cstackBANK0                          54       54        F       20       1
                cstackCOMMON                         71       71        A       71       1
                clrtext                             548      548        8      A90       0
                bssBANK1                             A0       A0       50       A0       1
                bssBANK0                             20       20       34       20       1
                bssCOMMON                            7B       7B        2       71       1
                strings                              15       15       1D       2A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                end_init                             12       12        3         0
                cinit                               7E9      7E9       17         0
                intentry                              4        4        E         0
                reset_vec                             0        0        4         0
                text15                              607      607       2B         0
                text14                              550      550        D         0
                text13                              68A      68A       45         0
                text12                              767      767       82         0
                text11                              5DE      5DE       29         0
                text10                              56D      56D       1A         0
                text9                               55D      55D       10         0
                text8                               5BB      5BB       23         0
                text7                               53F      53F        3         0
                text6                               542      542        6         0
                text5                               587      587       1A         0
                text4                               632      632       2B         0
                text3                               5A1      5A1       1A         0
                text2                               65D      65D       2D         0
                text1                               718      718       4F         0
                maintext                            6CF      6CF       49         0
                clrtext                             548      548        8         0

        CLASS   STRCODE        

        CLASS   STRING         
                strings                              15       15       1D         0

        CLASS   CONST          

        CLASS   ENTRY          

        CLASS   COMMON         
                cstackCOMMON                         71       71        A         1
                bssCOMMON                            7B       7B        2         1

        CLASS   BANK0          
                cstackBANK0                          54       54        F         1
                bssBANK0                             20       20       34         1

        CLASS   BANK1          
                bssBANK1                             A0       A0       50         1

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   RAM            

        CLASS   ABS1           
                abs_s1                               7E       7E        2         1

        CLASS   SFR0           

        CLASS   SFR1           

        CLASS   SFR2           

        CLASS   SFR3           

        CLASS   CONFIG         
                config                             2007     2007        2         4

        CLASS   IDLOC          

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class     Delta

                reset_vec                      000000  000004  000004         0       0  CODE        2
                intentry                       000004  000011  000015         8       0  CODE        2
                bssBANK0                       000020  000043  000063        20       1  BANK0       1
                strings                        000015  00001D  000032        2A       0  STRING      2
                cstackCOMMON                   000071  00000C  00007D        71       1  COMMON      1
                bssBANK1                       0000A0  000050  0000F0        A0       1  BANK1       1
                text7                          00053F  000003  000542       A7E       0  CODE        2
                text6                          000542  000006  000548       A84       0  CODE        2
                clrtext                        000548  000008  000550       A90       0  CODE        2
                text14                         000550  00000D  00055D       AA0       0  CODE        2
                text9                          00055D  000010  00056D       ABA       0  CODE        2
                text10                         00056D  00001A  000587       ADA       0  CODE        2
                text5                          000587  00001A  0005A1       B0E       0  CODE        2
                text3                          0005A1  00001A  0005BB       B42       0  CODE        2
                text8                          0005BB  000023  0005DE       B76       0  CODE        2
                text11                         0005DE  000029  000607       BBC       0  CODE        2
                text15                         000607  00002B  000632       C0E       0  CODE        2
                text4                          000632  00002B  00065D       C64       0  CODE        2
                text2                          00065D  00002D  00068A       CBA       0  CODE        2
                text13                         00068A  000045  0006CF       D14       0  CODE        2
                maintext                       0006CF  000049  000718       D9E       0  CODE        2
                text1                          000718  00004F  000767       E30       0  CODE        2
                text12                         000767  000082  0007E9       ECE       0  CODE        2
                cinit                          0007E9  000017  000800       FD2       0  CODE        2


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            0063-006F              D           1
        BANK2            0110-016F             60           1
        BANK3            0190-01E4             55           1
        CODE             0032-053E            50D           2
                         0800-1EFF            800
                         1FFF-1FFF              1
        COMMON           007D-007D              1           1
        CONST            0032-053E            100           2
                         0800-1EFF            100
                         1FFF-1FFF              1
        EEDATA           2100-21FF            100           2
        ENTRY            0032-053E            100           2
                         0800-1EFF            100
                         1FFF-1FFF              1
        IDLOC            2000-2003              4           2
        RAM              0063-006F              D           1
                         0110-016F             60
                         0190-01E4             55
        SFR0             0000-001F             20           1
        SFR1             0080-009F             20           1
        SFR2             0100-010F             10           1
        SFR3             0180-018F             10           1
        STACK            0110-016F             60           1
        STRCODE          0032-053E            50D           2
                         0800-1EFF           1700
                         1FFF-1FFF              1
        STRING           0032-053E            100           2
                         0800-1EFF            100
                         1FFF-1FFF              1

                                  Symbol Table

GBS_USART_Buffer_Read@buffer       cstackBANK0  005A
GBS_USART_Buffer_Read@result       cstackBANK0  0059
GBS_USART_Buffer_Write@buffer      cstackBANK0  005A
GBS_USART_Buffer_Write@value       cstackBANK0  0058
GBS_USART_Init@baudRate            cstackBANK0  0058
GBS_USART_Write_Char@c             cstackBANK0  005E
GBS_USART_Write_Char@i             cstackBANK0  005F
GBS_USART_Write_Char@size          cstackBANK0  005B
_ANSEL                             (abs)        0188
_ANSELH                            (abs)        0189
_BAUDCTLbits                       (abs)        0187
_CCP1CONbits                       (abs)        0017
_CCPR1L                            (abs)        0015
_GBS_Interrupt_Enable              text7        053F
_GBS_Interrupt_Init                text6        0542
_GBS_USART_Buffer_Read             text4        0632
_GBS_USART_Buffer_Write            text2        065D
_GBS_USART_Init                    text5        0587
_GBS_USART_Receive                 text14       0550
_GBS_USART_Send                    text3        05A1
_GBS_USART_Write_Char              text1        0718
_INTCONbits                        (abs)        000B
_IOCBbits                          (abs)        0096
_ISR                               text8        05BB
_OPTION_REGbits                    (abs)        0081
_PIE1bits                          (abs)        008C
_PIR1bits                          (abs)        000C
_PR2                               (abs)        0092
_PSA                               (abs)        040B
_RCREG                             (abs)        001A
_RCSTAbits                         (abs)        0018
_SPBRG                             (abs)        0099
_T0CS                              (abs)        040D
_T1CONbits                         (abs)        0010
_T2CKPS1                           (abs)        0091
_T2CONbits                         (abs)        0012
_TMR0                              (abs)        0001
_TMR1                              (abs)        000E
_TMR2                              (abs)        0011
_TMR2ON                            (abs)        0092
_TRISAbits                         (abs)        0085
_TRISBbits                         (abs)        0086
_TRISCbits                         (abs)        0087
_TRISDbits                         (abs)        0088
_TRISEbits                         (abs)        0089
_TXREG                             (abs)        0019
_TXSTAbits                         (abs)        0098
_USART_RX_ISR                      text12       0767
_USART_TX_ISR                      text9        055D
__Habs1                            abs1         0000
__Hbank0                           bank0        0000
__Hbank1                           bank1        0000
__Hbank2                           bank2        0000
__Hbank3                           bank3        0000
__HbssBANK0                        bssBANK0     0000
__HbssBANK1                        bssBANK1     0000
__HbssCOMMON                       bssCOMMON    0000
__Hcinit                           cinit        0800
__Hclrtext                         clrtext      0000
__Hcode                            code         0000
__Hcommon                          common       0000
__Hconfig                          config       2009
__HcstackBANK0                     cstackBANK0  0000
__HcstackCOMMON                    cstackCOMMON 0000
__Heeprom_data                     eeprom_data  0000
__Hend_init                        end_init     0015
__Hfunctab                         functab      0000
__Hinit                            init         0012
__Hintentry                        intentry     0012
__Hmaintext                        maintext     0000
__Hpowerup                         powerup      0000
__Hram                             ram          0000
__Hreset_vec                       reset_vec    0004
__Hsfr0                            sfr0         0000
__Hsfr1                            sfr1         0000
__Hsfr2                            sfr2         0000
__Hsfr3                            sfr3         0000
__Hspace_0                         (abs)        0800
__Hspace_1                         (abs)        00F0
__Hspace_2                         (abs)        0000
__Hspace_3                         (abs)        0000
__Hspace_4                         (abs)        4010
__Hstack                           stack        0000
__Hstrings                         strings      0000
__Htext                            text         0000
__Labs1                            abs1         0000
__Lbank0                           bank0        0000
__Lbank1                           bank1        0000
__Lbank2                           bank2        0000
__Lbank3                           bank3        0000
__LbssBANK0                        bssBANK0     0000
__LbssBANK1                        bssBANK1     0000
__LbssCOMMON                       bssCOMMON    0000
__Lcinit                           cinit        07E9
__Lclrtext                         clrtext      0000
__Lcode                            code         0000
__Lcommon                          common       0000
__Lconfig                          config       0000
__LcstackBANK0                     cstackBANK0  0000
__LcstackCOMMON                    cstackCOMMON 0000
__Leeprom_data                     eeprom_data  0000
__Lend_init                        end_init     0012
__Lfunctab                         functab      0000
__Linit                            init         0012
__Lintentry                        intentry     0004
__Lmaintext                        maintext     0000
__Lpowerup                         powerup      0000
__Lram                             ram          0000
__Lreset_vec                       reset_vec    0000
__Lsfr0                            sfr0         0000
__Lsfr1                            sfr1         0000
__Lsfr2                            sfr2         0000
__Lsfr3                            sfr3         0000
__Lspace_0                         (abs)        0000
__Lspace_1                         (abs)        0000
__Lspace_2                         (abs)        0000
__Lspace_3                         (abs)        0000
__Lspace_4                         (abs)        0000
__Lstack                           stack        0000
__Lstrings                         strings      0000
__Ltext                            text         0000
__S0                               (abs)        0800
__S1                               (abs)        00F0
__S2                               (abs)        0000
__S3                               (abs)        0000
___int_sp                          stack        0000
___latbits                         (abs)        0002
___sp                              stack        0000
___stackhi                         (abs)        0000
___stacklo                         (abs)        0000
__end_of_GBS_Interrupt_Enable      text7        0542
__end_of_GBS_Interrupt_Init        text6        0548
__end_of_GBS_USART_Buffer_Read     text4        065D
__end_of_GBS_USART_Buffer_Write    text2        068A
__end_of_GBS_USART_Init            text5        05A1
__end_of_GBS_USART_Receive         text14       055D
__end_of_GBS_USART_Send            text3        05BB
__end_of_GBS_USART_Write_Char      text1        0767
__end_of_ISR                       text8        05DE
__end_of_USART_RX_ISR              text12       07E9
__end_of_USART_TX_ISR              text9        056D
__end_of__initialization           cinit        07FC
__end_of__stringtab                strings      001B
__end_of_main                      maintext     0718
__end_ofi1_GBS_USART_Buffer_Read   text11       0607
__end_ofi1_GBS_USART_Buffer_Write  text15       0632
__end_ofi1_GBS_USART_Send          text10       0587
__end_ofi1_GBS_USART_Write_Char    text13       06CF
__initialization                   cinit        07E9
__pbssBANK0                        bssBANK0     0020
__pbssBANK1                        bssBANK1     00A0
__pbssCOMMON                       bssCOMMON    007B
__pcstackBANK0                     cstackBANK0  0054
__pcstackCOMMON                    cstackCOMMON 0071
__pintentry                        intentry     0004
__pmaintext                        maintext     06CF
__pstrings                         strings      0015
__ptext1                           text1        0718
__ptext10                          text10       056D
__ptext11                          text11       05DE
__ptext12                          text12       0767
__ptext13                          text13       068A
__ptext14                          text14       0550
__ptext15                          text15       0607
__ptext2                           text2        065D
__ptext3                           text3        05A1
__ptext4                           text4        0632
__ptext5                           text5        0587
__ptext6                           text6        0542
__ptext7                           text7        053F
__ptext8                           text8        05BB
__ptext9                           text9        055D
__size_of_GBS_Interrupt_Enable     (abs)        0000
__size_of_GBS_Interrupt_Init       (abs)        0000
__size_of_GBS_USART_Buffer_Read    (abs)        0000
__size_of_GBS_USART_Buffer_Write   (abs)        0000
__size_of_GBS_USART_Init           (abs)        0000
__size_of_GBS_USART_Receive        (abs)        0000
__size_of_GBS_USART_Send           (abs)        0000
__size_of_GBS_USART_Write_Char     (abs)        0000
__size_of_ISR                      (abs)        0000
__size_of_USART_RX_ISR             (abs)        0000
__size_of_USART_TX_ISR             (abs)        0000
__size_of_main                     (abs)        0000
__size_ofi1_GBS_USART_Buffer_Read  (abs)        0000
__size_ofi1_GBS_USART_Buffer_Write (abs)        0000
__size_ofi1_GBS_USART_Send         (abs)        0000
__size_ofi1_GBS_USART_Write_Char   (abs)        0000
__stringbase                       strings      001A
__stringtab                        strings      0015
_ctrlBits                          bssCOMMON    007C
_errno                             bssBANK0     0020
_main                              maintext     06CF
_sBufferA                          bssBANK1     00A0
_stepperA                          bssBANK0     0048
_uFlag                             bssCOMMON    007B
_usartReceiveBuffer                bssBANK0     0035
_usartSendBuffer                   bssBANK0     0022
btemp                              (abs)        007E
clear_ram0                         clrtext      0548
end_of_initialization              cinit        07FC
i1GBS_USART_Buffer_Read@buffer     cstackCOMMON 0073
i1GBS_USART_Buffer_Read@result     cstackCOMMON 0072
i1GBS_USART_Buffer_Write@buffer    cstackCOMMON 0073
i1GBS_USART_Buffer_Write@value     cstackCOMMON 0071
i1GBS_USART_Write_Char@c           cstackCOMMON 0077
i1GBS_USART_Write_Char@i           cstackCOMMON 0078
i1GBS_USART_Write_Char@size        cstackCOMMON 0074
i1_GBS_USART_Buffer_Read           text11       05DE
i1_GBS_USART_Buffer_Write          text15       0607
i1_GBS_USART_Send                  text10       056D
i1_GBS_USART_Write_Char            text13       068A
interrupt_function                 intentry     0004
intlevel0                          functab      0000
intlevel1                          functab      0000
intlevel2                          functab      0000
intlevel3                          functab      0000
intlevel4                          functab      0000
intlevel5                          functab      0000
reset_vec                          reset_vec    0000
saved_w                            (abs)        007E
start                              init         0012
start_initialization               cinit        07E9
wtemp0                             (abs)        007E


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 14 in file "../test.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  2   28[None  ] int 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       3       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_GBS_Interrupt_Init
		_GBS_USART_Init
		_GBS_USART_Send
		_GBS_USART_Write_Char
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _GBS_USART_Write_Char *****************
 Defined at:
		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  c               1    wreg     PTR unsigned char 
		 -> STR_3(9), STR_2(9), STR_1(5), 
  size            1    7[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  c               1   10[BANK0 ] PTR unsigned char 
		 -> STR_3(9), STR_2(9), STR_1(5), 
  i               1   11[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       2       0       0       0
      Totals:         0       5       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_USART_Buffer_Write
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Write *****************
 Defined at:
		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    4[BANK0 ] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    6[BANK0 ] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       1       0       0       0
      Locals:         0       1       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Write_Char
 This function uses a non-reentrant model


 *************** function _GBS_USART_Send *****************
 Defined at:
		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_USART_Buffer_Read
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_USART_Buffer_Read *****************
 Defined at:
		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    6[BANK0 ] PTR struct .
		 -> usartSendBuffer(19), 
  result          1    5[BANK0 ] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       2       0       0       0
      Temps:          0       1       0       0       0
      Totals:         0       3       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Send
 This function uses a non-reentrant model


 *************** function _GBS_USART_Init *****************
 Defined at:
		line 6 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  baudRate        2    4[BANK0 ] unsigned int 
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       2       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       2       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Init *****************
 Defined at:
		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		status,2, status,0, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_GBS_Interrupt_Enable
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _GBS_Interrupt_Enable *****************
 Defined at:
		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		None
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		Nothing
 This function is called by:
		_GBS_Interrupt_Init
 This function uses a non-reentrant model


 *************** function _ISR *****************
 Defined at:
		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       4       0       0       0
      Totals:         0       4       0       0       0
Total ram usage:        4 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_USART_RX_ISR
		_USART_TX_ISR
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _USART_TX_ISR *****************
 Defined at:
		line 75 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		i1_GBS_USART_Send
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Send *****************
 Defined at:
		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Read
 This function is called by:
		_USART_TX_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Buffer_Read *****************
 Defined at:
		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartSendBuffer(19), 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR struct .
		 -> usartSendBuffer(19), 
  result          1    1[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      unsigned char 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		i1_GBS_USART_Send
 This function uses a non-reentrant model


 *************** function _USART_RX_ISR *****************
 Defined at:
		line 82 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         2       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_GBS_USART_Receive
		i1_GBS_USART_Write_Char
 This function is called by:
		_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Write_Char *****************
 Defined at:
		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  c               1    wreg     PTR unsigned char 
		 -> STR_3(9), STR_2(9), STR_1(5), 
  size            1    3[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  c               1    6[COMMON] PTR unsigned char 
		 -> STR_3(9), STR_2(9), STR_1(5), 
  i               1    7[COMMON] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         2       0       0       0       0
      Temps:          2       0       0       0       0
      Totals:         5       0       0       0       0
Total ram usage:        5 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Write
 This function is called by:
		_USART_RX_ISR
 This function uses a non-reentrant model


 *************** function _GBS_USART_Receive *****************
 Defined at:
		line 70 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         0       0       0       0       0
      Locals:         0       0       0       0       0
      Temps:          0       0       0       0       0
      Totals:         0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		i1_GBS_USART_Buffer_Write
 This function is called by:
		_USART_RX_ISR
 This function uses a non-reentrant model


 *************** function i1_GBS_USART_Buffer_Write *****************
 Defined at:
		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
 Parameters:    Size  Location     Type
  buffer          1    wreg     PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  value           1    0[COMMON] unsigned char 
 Auto vars:     Size  Location     Type
  buffer          1    2[COMMON] PTR struct .
		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
      Params:         1       0       0       0       0
      Locals:         1       0       0       0       0
      Temps:          1       0       0       0       0
      Totals:         3       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		_GBS_USART_Receive
		i1_GBS_USART_Write_Char
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
../test.c
		_main          		CODE           	06CF	0000	74

../test.c estimated size: 74

shared
		__stringtab    		STRING         	0015	0000	7
		i1_GBS_USART_Buffer_Read		CODE           	05DE	0000	42
		__initialization		CODE           	07E9	0000	20
		i1_GBS_USART_Buffer_Write		CODE           	0607	0000	44
		i1_GBS_USART_Write_Char		CODE           	068A	0000	70
		i1_GBS_USART_Send		CODE           	056D	0000	27

shared estimated size: 210

../gbs8/bsp/scr/gbs8_interrupt.c
		_ISR           		CODE           	05BB	0000	36
		_GBS_Interrupt_Enable		CODE           	053F	0000	4
		_GBS_Interrupt_Init		CODE           	0542	0000	7

../gbs8/bsp/scr/gbs8_interrupt.c estimated size: 47

../gbs8/bsp/scr/gbs8_usart.c
		_GBS_USART_Receive		CODE           	0550	0000	14
		_GBS_USART_Send		CODE           	05A1	0000	27
		_GBS_USART_Init		CODE           	0587	0000	27
		_USART_RX_ISR  		CODE           	0767	0000	131
		_GBS_USART_Buffer_Write		CODE           	065D	0000	46
		_USART_TX_ISR  		CODE           	055D	0000	17
		_GBS_USART_Buffer_Read		CODE           	0632	0000	44
		_GBS_USART_Write_Char		CODE           	0718	0000	80

../gbs8/bsp/scr/gbs8_usart.c estimated size: 386

