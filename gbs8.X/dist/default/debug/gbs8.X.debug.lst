

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Nov 03 16:24:24 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 12/02/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F887 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  008F                     	;# 
   111  0090                     	;# 
   112  0091                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0093                     	;# 
   117  0094                     	;# 
   118  0095                     	;# 
   119  0096                     	;# 
   120  0097                     	;# 
   121  0098                     	;# 
   122  0099                     	;# 
   123  009A                     	;# 
   124  009B                     	;# 
   125  009C                     	;# 
   126  009D                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  0105                     	;# 
   130  0107                     	;# 
   131  0108                     	;# 
   132  0109                     	;# 
   133  010C                     	;# 
   134  010C                     	;# 
   135  010D                     	;# 
   136  010E                     	;# 
   137  010F                     	;# 
   138  0185                     	;# 
   139  0187                     	;# 
   140  0188                     	;# 
   141  0189                     	;# 
   142  018C                     	;# 
   143  018D                     	;# 
   144  0000                     	;# 
   145  0001                     	;# 
   146  0002                     	;# 
   147  0003                     	;# 
   148  0004                     	;# 
   149  0005                     	;# 
   150  0006                     	;# 
   151  0007                     	;# 
   152  0008                     	;# 
   153  0009                     	;# 
   154  000A                     	;# 
   155  000B                     	;# 
   156  000C                     	;# 
   157  000D                     	;# 
   158  000E                     	;# 
   159  000E                     	;# 
   160  000F                     	;# 
   161  0010                     	;# 
   162  0011                     	;# 
   163  0012                     	;# 
   164  0013                     	;# 
   165  0014                     	;# 
   166  0015                     	;# 
   167  0015                     	;# 
   168  0016                     	;# 
   169  0017                     	;# 
   170  0018                     	;# 
   171  0019                     	;# 
   172  001A                     	;# 
   173  001B                     	;# 
   174  001B                     	;# 
   175  001C                     	;# 
   176  001D                     	;# 
   177  001E                     	;# 
   178  001F                     	;# 
   179  0081                     	;# 
   180  0085                     	;# 
   181  0086                     	;# 
   182  0087                     	;# 
   183  0088                     	;# 
   184  0089                     	;# 
   185  008C                     	;# 
   186  008D                     	;# 
   187  008E                     	;# 
   188  008F                     	;# 
   189  0090                     	;# 
   190  0091                     	;# 
   191  0092                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0093                     	;# 
   195  0094                     	;# 
   196  0095                     	;# 
   197  0096                     	;# 
   198  0097                     	;# 
   199  0098                     	;# 
   200  0099                     	;# 
   201  009A                     	;# 
   202  009B                     	;# 
   203  009C                     	;# 
   204  009D                     	;# 
   205  009E                     	;# 
   206  009F                     	;# 
   207  0105                     	;# 
   208  0107                     	;# 
   209  0108                     	;# 
   210  0109                     	;# 
   211  010C                     	;# 
   212  010C                     	;# 
   213  010D                     	;# 
   214  010E                     	;# 
   215  010F                     	;# 
   216  0185                     	;# 
   217  0187                     	;# 
   218  0188                     	;# 
   219  0189                     	;# 
   220  018C                     	;# 
   221  018D                     	;# 
   222  0000                     	;# 
   223  0001                     	;# 
   224  0002                     	;# 
   225  0003                     	;# 
   226  0004                     	;# 
   227  0005                     	;# 
   228  0006                     	;# 
   229  0007                     	;# 
   230  0008                     	;# 
   231  0009                     	;# 
   232  000A                     	;# 
   233  000B                     	;# 
   234  000C                     	;# 
   235  000D                     	;# 
   236  000E                     	;# 
   237  000E                     	;# 
   238  000F                     	;# 
   239  0010                     	;# 
   240  0011                     	;# 
   241  0012                     	;# 
   242  0013                     	;# 
   243  0014                     	;# 
   244  0015                     	;# 
   245  0015                     	;# 
   246  0016                     	;# 
   247  0017                     	;# 
   248  0018                     	;# 
   249  0019                     	;# 
   250  001A                     	;# 
   251  001B                     	;# 
   252  001B                     	;# 
   253  001C                     	;# 
   254  001D                     	;# 
   255  001E                     	;# 
   256  001F                     	;# 
   257  0081                     	;# 
   258  0085                     	;# 
   259  0086                     	;# 
   260  0087                     	;# 
   261  0088                     	;# 
   262  0089                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  008F                     	;# 
   267  0090                     	;# 
   268  0091                     	;# 
   269  0092                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0093                     	;# 
   273  0094                     	;# 
   274  0095                     	;# 
   275  0096                     	;# 
   276  0097                     	;# 
   277  0098                     	;# 
   278  0099                     	;# 
   279  009A                     	;# 
   280  009B                     	;# 
   281  009C                     	;# 
   282  009D                     	;# 
   283  009E                     	;# 
   284  009F                     	;# 
   285  0105                     	;# 
   286  0107                     	;# 
   287  0108                     	;# 
   288  0109                     	;# 
   289  010C                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  0185                     	;# 
   295  0187                     	;# 
   296  0188                     	;# 
   297  0189                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  008F                     	;# 
   345  0090                     	;# 
   346  0091                     	;# 
   347  0092                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0095                     	;# 
   353  0096                     	;# 
   354  0097                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009A                     	;# 
   358  009B                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  0105                     	;# 
   364  0107                     	;# 
   365  0108                     	;# 
   366  0109                     	;# 
   367  010C                     	;# 
   368  010C                     	;# 
   369  010D                     	;# 
   370  010E                     	;# 
   371  010F                     	;# 
   372  0185                     	;# 
   373  0187                     	;# 
   374  0188                     	;# 
   375  0189                     	;# 
   376  018C                     	;# 
   377  018D                     	;# 
   378  0000                     	;# 
   379  0001                     	;# 
   380  0002                     	;# 
   381  0003                     	;# 
   382  0004                     	;# 
   383  0005                     	;# 
   384  0006                     	;# 
   385  0007                     	;# 
   386  0008                     	;# 
   387  0009                     	;# 
   388  000A                     	;# 
   389  000B                     	;# 
   390  000C                     	;# 
   391  000D                     	;# 
   392  000E                     	;# 
   393  000E                     	;# 
   394  000F                     	;# 
   395  0010                     	;# 
   396  0011                     	;# 
   397  0012                     	;# 
   398  0013                     	;# 
   399  0014                     	;# 
   400  0015                     	;# 
   401  0015                     	;# 
   402  0016                     	;# 
   403  0017                     	;# 
   404  0018                     	;# 
   405  0019                     	;# 
   406  001A                     	;# 
   407  001B                     	;# 
   408  001B                     	;# 
   409  001C                     	;# 
   410  001D                     	;# 
   411  001E                     	;# 
   412  001F                     	;# 
   413  0081                     	;# 
   414  0085                     	;# 
   415  0086                     	;# 
   416  0087                     	;# 
   417  0088                     	;# 
   418  0089                     	;# 
   419  008C                     	;# 
   420  008D                     	;# 
   421  008E                     	;# 
   422  008F                     	;# 
   423  0090                     	;# 
   424  0091                     	;# 
   425  0092                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0093                     	;# 
   429  0094                     	;# 
   430  0095                     	;# 
   431  0096                     	;# 
   432  0097                     	;# 
   433  0098                     	;# 
   434  0099                     	;# 
   435  009A                     	;# 
   436  009B                     	;# 
   437  009C                     	;# 
   438  009D                     	;# 
   439  009E                     	;# 
   440  009F                     	;# 
   441  0105                     	;# 
   442  0107                     	;# 
   443  0108                     	;# 
   444  0109                     	;# 
   445  010C                     	;# 
   446  010C                     	;# 
   447  010D                     	;# 
   448  010E                     	;# 
   449  010F                     	;# 
   450  0185                     	;# 
   451  0187                     	;# 
   452  0188                     	;# 
   453  0189                     	;# 
   454  018C                     	;# 
   455  018D                     	;# 
   456  0000                     	;# 
   457  0001                     	;# 
   458  0002                     	;# 
   459  0003                     	;# 
   460  0004                     	;# 
   461  0005                     	;# 
   462  0006                     	;# 
   463  0007                     	;# 
   464  0008                     	;# 
   465  0009                     	;# 
   466  000A                     	;# 
   467  000B                     	;# 
   468  000C                     	;# 
   469  000D                     	;# 
   470  000E                     	;# 
   471  000E                     	;# 
   472  000F                     	;# 
   473  0010                     	;# 
   474  0011                     	;# 
   475  0012                     	;# 
   476  0013                     	;# 
   477  0014                     	;# 
   478  0015                     	;# 
   479  0015                     	;# 
   480  0016                     	;# 
   481  0017                     	;# 
   482  0018                     	;# 
   483  0019                     	;# 
   484  001A                     	;# 
   485  001B                     	;# 
   486  001B                     	;# 
   487  001C                     	;# 
   488  001D                     	;# 
   489  001E                     	;# 
   490  001F                     	;# 
   491  0081                     	;# 
   492  0085                     	;# 
   493  0086                     	;# 
   494  0087                     	;# 
   495  0088                     	;# 
   496  0089                     	;# 
   497  008C                     	;# 
   498  008D                     	;# 
   499  008E                     	;# 
   500  008F                     	;# 
   501  0090                     	;# 
   502  0091                     	;# 
   503  0092                     	;# 
   504  0093                     	;# 
   505  0093                     	;# 
   506  0093                     	;# 
   507  0094                     	;# 
   508  0095                     	;# 
   509  0096                     	;# 
   510  0097                     	;# 
   511  0098                     	;# 
   512  0099                     	;# 
   513  009A                     	;# 
   514  009B                     	;# 
   515  009C                     	;# 
   516  009D                     	;# 
   517  009E                     	;# 
   518  009F                     	;# 
   519  0105                     	;# 
   520  0107                     	;# 
   521  0108                     	;# 
   522  0109                     	;# 
   523  010C                     	;# 
   524  010C                     	;# 
   525  010D                     	;# 
   526  010E                     	;# 
   527  010F                     	;# 
   528  0185                     	;# 
   529  0187                     	;# 
   530  0188                     	;# 
   531  0189                     	;# 
   532  018C                     	;# 
   533  018D                     	;# 
   534  0000                     	;# 
   535  0001                     	;# 
   536  0002                     	;# 
   537  0003                     	;# 
   538  0004                     	;# 
   539  0005                     	;# 
   540  0006                     	;# 
   541  0007                     	;# 
   542  0008                     	;# 
   543  0009                     	;# 
   544  000A                     	;# 
   545  000B                     	;# 
   546  000C                     	;# 
   547  000D                     	;# 
   548  000E                     	;# 
   549  000E                     	;# 
   550  000F                     	;# 
   551  0010                     	;# 
   552  0011                     	;# 
   553  0012                     	;# 
   554  0013                     	;# 
   555  0014                     	;# 
   556  0015                     	;# 
   557  0015                     	;# 
   558  0016                     	;# 
   559  0017                     	;# 
   560  0018                     	;# 
   561  0019                     	;# 
   562  001A                     	;# 
   563  001B                     	;# 
   564  001B                     	;# 
   565  001C                     	;# 
   566  001D                     	;# 
   567  001E                     	;# 
   568  001F                     	;# 
   569  0081                     	;# 
   570  0085                     	;# 
   571  0086                     	;# 
   572  0087                     	;# 
   573  0088                     	;# 
   574  0089                     	;# 
   575  008C                     	;# 
   576  008D                     	;# 
   577  008E                     	;# 
   578  008F                     	;# 
   579  0090                     	;# 
   580  0091                     	;# 
   581  0092                     	;# 
   582  0093                     	;# 
   583  0093                     	;# 
   584  0093                     	;# 
   585  0094                     	;# 
   586  0095                     	;# 
   587  0096                     	;# 
   588  0097                     	;# 
   589  0098                     	;# 
   590  0099                     	;# 
   591  009A                     	;# 
   592  009B                     	;# 
   593  009C                     	;# 
   594  009D                     	;# 
   595  009E                     	;# 
   596  009F                     	;# 
   597  0105                     	;# 
   598  0107                     	;# 
   599  0108                     	;# 
   600  0109                     	;# 
   601  010C                     	;# 
   602  010C                     	;# 
   603  010D                     	;# 
   604  010E                     	;# 
   605  010F                     	;# 
   606  0185                     	;# 
   607  0187                     	;# 
   608  0188                     	;# 
   609  0189                     	;# 
   610  018C                     	;# 
   611  018D                     	;# 
   612  0000                     	;# 
   613  0001                     	;# 
   614  0002                     	;# 
   615  0003                     	;# 
   616  0004                     	;# 
   617  0005                     	;# 
   618  0006                     	;# 
   619  0007                     	;# 
   620  0008                     	;# 
   621  0009                     	;# 
   622  000A                     	;# 
   623  000B                     	;# 
   624  000C                     	;# 
   625  000D                     	;# 
   626  000E                     	;# 
   627  000E                     	;# 
   628  000F                     	;# 
   629  0010                     	;# 
   630  0011                     	;# 
   631  0012                     	;# 
   632  0013                     	;# 
   633  0014                     	;# 
   634  0015                     	;# 
   635  0015                     	;# 
   636  0016                     	;# 
   637  0017                     	;# 
   638  0018                     	;# 
   639  0019                     	;# 
   640  001A                     	;# 
   641  001B                     	;# 
   642  001B                     	;# 
   643  001C                     	;# 
   644  001D                     	;# 
   645  001E                     	;# 
   646  001F                     	;# 
   647  0081                     	;# 
   648  0085                     	;# 
   649  0086                     	;# 
   650  0087                     	;# 
   651  0088                     	;# 
   652  0089                     	;# 
   653  008C                     	;# 
   654  008D                     	;# 
   655  008E                     	;# 
   656  008F                     	;# 
   657  0090                     	;# 
   658  0091                     	;# 
   659  0092                     	;# 
   660  0093                     	;# 
   661  0093                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009C                     	;# 
   672  009D                     	;# 
   673  009E                     	;# 
   674  009F                     	;# 
   675  0105                     	;# 
   676  0107                     	;# 
   677  0108                     	;# 
   678  0109                     	;# 
   679  010C                     	;# 
   680  010C                     	;# 
   681  010D                     	;# 
   682  010E                     	;# 
   683  010F                     	;# 
   684  0185                     	;# 
   685  0187                     	;# 
   686  0188                     	;# 
   687  0189                     	;# 
   688  018C                     	;# 
   689  018D                     	;# 
   690  000E                     _TMR1	set	14
   691  001A                     _RCREG	set	26
   692  0019                     _TXREG	set	25
   693  0018                     _RCSTAbits	set	24
   694  0015                     _CCPR1L	set	21
   695  0017                     _CCP1CONbits	set	23
   696  0011                     _TMR2	set	17
   697  0012                     _T2CONbits	set	18
   698  0010                     _T1CONbits	set	16
   699  0001                     _TMR0	set	1
   700  000C                     _PIR1bits	set	12
   701  000B                     _INTCONbits	set	11
   702  0091                     _T2CKPS1	set	145
   703  0092                     _TMR2ON	set	146
   704  0099                     _SPBRG	set	153
   705  0098                     _TXSTAbits	set	152
   706  0092                     _PR2	set	146
   707  008C                     _PIE1bits	set	140
   708  0096                     _IOCBbits	set	150
   709  0081                     _OPTION_REGbits	set	129
   710  0087                     _TRISCbits	set	135
   711  0088                     _TRISDbits	set	136
   712  0086                     _TRISBbits	set	134
   713  0085                     _TRISAbits	set	133
   714  0089                     _TRISEbits	set	137
   715  040D                     _T0CS	set	1037
   716  040B                     _PSA	set	1035
   717  0187                     _BAUDCTLbits	set	391
   718  0189                     _ANSELH	set	393
   719  0188                     _ANSEL	set	392
   720                           
   721                           	psect	strings
   722  0015                     __pstrings:
   723  0015                     stringtab:
   724  0015                     __stringtab:
   725  0015                     stringcode:	
   726                           ;	String table - string pointers are 1 byte each
   727                           
   728  0015                     stringdir:
   729  0015  3000               	movlw	high stringdir
   730  0016  008A               	movwf	10
   731  0017  0804               	movf	4,w
   732  0018  0A84               	incf	4,f
   733  0019  0782               	addwf	2,f
   734  001A                     __stringbase:
   735  001A  3400               	retlw	0
   736  001B                     __end_of__stringtab:
   737  001B                     STR_3:
   738  001B  3443               	retlw	67	;'C'
   739  001C  3452               	retlw	82	;'R'
   740  001D  3465               	retlw	101	;'e'
   741  001E  3463               	retlw	99	;'c'
   742  001F  3465               	retlw	101	;'e'
   743  0020  3469               	retlw	105	;'i'
   744  0021  3476               	retlw	118	;'v'
   745  0022  3465               	retlw	101	;'e'
   746  0023  3400               	retlw	0
   747  0024                     STR_2:
   748  0024  3444               	retlw	68	;'D'
   749  0025  3452               	retlw	82	;'R'
   750  0026  3465               	retlw	101	;'e'
   751  0027  3463               	retlw	99	;'c'
   752  0028  3465               	retlw	101	;'e'
   753  0029  3469               	retlw	105	;'i'
   754  002A  3476               	retlw	118	;'v'
   755  002B  3465               	retlw	101	;'e'
   756  002C  3400               	retlw	0
   757  002D                     STR_1:
   758  002D  3431               	retlw	49	;'1'
   759  002E  3432               	retlw	50	;'2'
   760  002F  3433               	retlw	51	;'3'
   761  0030  3434               	retlw	52	;'4'
   762  0031  3400               	retlw	0
   763                           
   764                           	psect	cinit
   765  07E9                     start_initialization:	
   766                           ; #config settings
   767                           
   768  07E9                     __initialization:
   769                           
   770                           ; Clear objects allocated to COMMON
   771  07E9  01FB               	clrf	__pbssCOMMON& (0+127)
   772  07EA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   773                           
   774                           ; Clear objects allocated to BANK0
   775  07EB  1383               	bcf	3,7	;select IRP bank0
   776  07EC  3020               	movlw	low __pbssBANK0
   777  07ED  0084               	movwf	4
   778  07EE  3054               	movlw	low (__pbssBANK0+52)
   779  07EF  120A  118A  2548  120A  118A  	fcall	clear_ram0
   780                           
   781                           ; Clear objects allocated to BANK1
   782  07F4  30A0               	movlw	low __pbssBANK1
   783  07F5  0084               	movwf	4
   784  07F6  30F0               	movlw	low (__pbssBANK1+80)
   785  07F7  120A  118A  2548  120A  118A  	fcall	clear_ram0
   786  07FC                     end_of_initialization:	
   787                           ;End of C runtime variable initialization code
   788                           
   789  07FC                     __end_of__initialization:
   790  07FC  0183               	clrf	3
   791  07FD  120A  118A  2ECF   	ljmp	_main	;jump to C main() function
   792                           
   793                           	psect	bssCOMMON
   794  007B                     __pbssCOMMON:
   795  007B                     _uFlag:
   796  007B                     	ds	1
   797  007C                     _ctrlBits:
   798  007C                     	ds	1
   799                           
   800                           	psect	bssBANK0
   801  0020                     __pbssBANK0:
   802  0020                     _errno:
   803  0020                     	ds	2
   804  0022                     _usartSendBuffer:
   805  0022                     	ds	19
   806  0035                     _usartReceiveBuffer:
   807  0035                     	ds	19
   808  0048                     _stepperA:
   809  0048                     	ds	12
   810                           
   811                           	psect	bssBANK1
   812  00A0                     __pbssBANK1:
   813  00A0                     _sBufferA:
   814  00A0                     	ds	80
   815                           
   816                           	psect	clrtext
   817  0548                     clear_ram0:	
   818                           ;	Called with FSR containing the base address, and
   819                           ;	W with the last address+1
   820                           
   821  0548  0064               	clrwdt	;clear the watchdog before getting into this loop
   822  0549                     clrloop0:
   823  0549  0180               	clrf	0	;clear RAM location pointed to by FSR
   824  054A  0A84               	incf	4,f	;increment pointer
   825  054B  0604               	xorwf	4,w	;XOR with final address
   826  054C  1903               	btfsc	3,2	;have we reached the end yet?
   827  054D  3400               	retlw	0	;all done for this memory range, return
   828  054E  0604               	xorwf	4,w	;XOR again to restore value
   829  054F  2D49               	goto	clrloop0	;do the next byte
   830                           
   831                           	psect	cstackCOMMON
   832  0071                     __pcstackCOMMON:
   833  0071                     ?_GBS_Interrupt_Init:
   834  0071                     ?_GBS_USART_Send:	
   835                           ; 1 bytes @ 0x0
   836                           
   837  0071                     ?_GBS_Interrupt_Enable:	
   838                           ; 1 bytes @ 0x0
   839                           
   840  0071                     ?_USART_TX_ISR:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0071                     ?_USART_RX_ISR:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0071                     ?_ISR:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0071                     ?_GBS_USART_Buffer_Read:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0071                     ?_GBS_USART_Receive:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0071                     ?i1_GBS_USART_Buffer_Write:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0071                     ?i1_GBS_USART_Buffer_Read:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0071                     ??i1_GBS_USART_Buffer_Read:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0071                     ?i1_GBS_USART_Send:	
   865                           ; 1 bytes @ 0x0
   866                           
   867  0071                     ?_main:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0071                     i1GBS_USART_Buffer_Write@value:	
   871                           ; 2 bytes @ 0x0
   872                           
   873                           
   874                           ; 1 bytes @ 0x0
   875  0071                     	ds	1
   876  0072                     ??i1_GBS_USART_Buffer_Write:
   877  0072                     i1GBS_USART_Buffer_Read@result:	
   878                           ; 1 bytes @ 0x1
   879                           
   880                           
   881                           ; 1 bytes @ 0x1
   882  0072                     	ds	1
   883  0073                     i1GBS_USART_Buffer_Write@buffer:
   884  0073                     i1GBS_USART_Buffer_Read@buffer:	
   885                           ; 1 bytes @ 0x2
   886                           
   887                           
   888                           ; 1 bytes @ 0x2
   889  0073                     	ds	1
   890  0074                     ??_USART_TX_ISR:
   891  0074                     ??_GBS_USART_Receive:	
   892                           ; 1 bytes @ 0x3
   893                           
   894  0074                     ??i1_GBS_USART_Send:	
   895                           ; 1 bytes @ 0x3
   896                           
   897  0074                     ?i1_GBS_USART_Write_Char:	
   898                           ; 1 bytes @ 0x3
   899                           
   900  0074                     i1GBS_USART_Write_Char@size:	
   901                           ; 1 bytes @ 0x3
   902                           
   903                           
   904                           ; 1 bytes @ 0x3
   905  0074                     	ds	1
   906  0075                     ??i1_GBS_USART_Write_Char:
   907                           
   908                           ; 1 bytes @ 0x4
   909  0075                     	ds	2
   910  0077                     i1GBS_USART_Write_Char@c:
   911                           
   912                           ; 1 bytes @ 0x6
   913  0077                     	ds	1
   914  0078                     i1GBS_USART_Write_Char@i:
   915                           
   916                           ; 1 bytes @ 0x7
   917  0078                     	ds	1
   918  0079                     ??_USART_RX_ISR:
   919                           
   920                           ; 1 bytes @ 0x8
   921  0079                     	ds	2
   922                           
   923                           	psect	cstackBANK0
   924  0054                     __pcstackBANK0:
   925  0054                     ??_ISR:
   926                           
   927                           ; 1 bytes @ 0x0
   928  0054                     	ds	4
   929  0058                     ??_GBS_Interrupt_Init:
   930  0058                     ?_GBS_USART_Init:	
   931                           ; 1 bytes @ 0x4
   932                           
   933  0058                     ??_GBS_Interrupt_Enable:	
   934                           ; 1 bytes @ 0x4
   935                           
   936  0058                     ?_GBS_USART_Buffer_Write:	
   937                           ; 1 bytes @ 0x4
   938                           
   939  0058                     ??_GBS_USART_Buffer_Read:	
   940                           ; 1 bytes @ 0x4
   941                           
   942  0058                     GBS_USART_Buffer_Write@value:	
   943                           ; 1 bytes @ 0x4
   944                           
   945  0058                     GBS_USART_Init@baudRate:	
   946                           ; 1 bytes @ 0x4
   947                           
   948                           
   949                           ; 2 bytes @ 0x4
   950  0058                     	ds	1
   951  0059                     ??_GBS_USART_Buffer_Write:
   952  0059                     GBS_USART_Buffer_Read@result:	
   953                           ; 1 bytes @ 0x5
   954                           
   955                           
   956                           ; 1 bytes @ 0x5
   957  0059                     	ds	1
   958  005A                     ??_GBS_USART_Init:
   959  005A                     GBS_USART_Buffer_Write@buffer:	
   960                           ; 1 bytes @ 0x6
   961                           
   962  005A                     GBS_USART_Buffer_Read@buffer:	
   963                           ; 1 bytes @ 0x6
   964                           
   965                           
   966                           ; 1 bytes @ 0x6
   967  005A                     	ds	1
   968  005B                     ?_GBS_USART_Write_Char:
   969  005B                     ??_GBS_USART_Send:	
   970                           ; 1 bytes @ 0x7
   971                           
   972  005B                     GBS_USART_Write_Char@size:	
   973                           ; 1 bytes @ 0x7
   974                           
   975                           
   976                           ; 1 bytes @ 0x7
   977  005B                     	ds	1
   978  005C                     ??_GBS_USART_Write_Char:
   979                           
   980                           ; 1 bytes @ 0x8
   981  005C                     	ds	2
   982  005E                     GBS_USART_Write_Char@c:
   983                           
   984                           ; 1 bytes @ 0xA
   985  005E                     	ds	1
   986  005F                     GBS_USART_Write_Char@i:
   987                           
   988                           ; 1 bytes @ 0xB
   989  005F                     	ds	1
   990  0060                     ??_main:
   991                           
   992                           ; 1 bytes @ 0xC
   993  0060                     	ds	3
   994                           
   995                           	psect	maintext
   996  06CF                     __pmaintext:	
   997 ;;
   998 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   999 ;;
  1000 ;; *************** function _main *****************
  1001 ;; Defined at:
  1002 ;;		line 14 in file "../test.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  2   28[None  ] int 
  1009 ;; Registers used:
  1010 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : B00/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1016 ;;      Params:         0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0
  1018 ;;      Temps:          0       3       0       0       0
  1019 ;;      Totals:         0       3       0       0       0
  1020 ;;Total ram usage:        3 bytes
  1021 ;; Hardware stack levels required when called:    6
  1022 ;; This function calls:
  1023 ;;		_GBS_Interrupt_Init
  1024 ;;		_GBS_USART_Init
  1025 ;;		_GBS_USART_Send
  1026 ;;		_GBS_USART_Write_Char
  1027 ;; This function is called by:
  1028 ;;		Startup code after reset
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _main
  1034  06CF                     _main:
  1035  06CF                     l1555:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1038                           
  1039                           
  1040                           ;../test.c: 16:     GBS_Interrupt_Init();
  1041  06CF  120A  118A  2542  120A  118A  	fcall	_GBS_Interrupt_Init
  1042  06D4                     l1557:
  1043                           
  1044                           ;../test.c: 18:     GBS_USART_Init(9600);
  1045  06D4  3080               	movlw	128
  1046  06D5  1283               	bcf	3,5	;RP0=0, select bank0
  1047  06D6  1303               	bcf	3,6	;RP1=0, select bank0
  1048  06D7  00D8               	movwf	GBS_USART_Init@baudRate
  1049  06D8  3025               	movlw	37
  1050  06D9  00D9               	movwf	GBS_USART_Init@baudRate+1
  1051  06DA  120A  118A  2587  120A  118A  	fcall	_GBS_USART_Init
  1052  06DF                     l1559:
  1053                           
  1054                           ;../test.c: 21:     {;../test.c: 22:         TRISEbits.TRISE0 = 1;
  1055  06DF  1683               	bsf	3,5	;RP0=1, select bank1
  1056  06E0  1303               	bcf	3,6	;RP1=0, select bank1
  1057  06E1  1409               	bsf	9,0	;volatile
  1058                           
  1059                           ;../test.c: 24:         _delay((unsigned long)((1000)*(11059200/4000.0)));
  1060  06E2  300F               	movlw	15
  1061  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1062  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1063  06E5  00E2               	movwf	??_main+2
  1064  06E6  3007               	movlw	7
  1065  06E7  00E1               	movwf	??_main+1
  1066  06E8  3099               	movlw	153
  1067  06E9  00E0               	movwf	??_main
  1068  06EA                     u1857:
  1069  06EA  0BE0               	decfsz	??_main,f
  1070  06EB  2EEA               	goto	u1857
  1071  06EC  0BE1               	decfsz	??_main+1,f
  1072  06ED  2EEA               	goto	u1857
  1073  06EE  0BE2               	decfsz	??_main+2,f
  1074  06EF  2EEA               	goto	u1857
  1075  06F0  2EF1               	nop2
  1076  06F1                     l1561:
  1077                           
  1078                           ;../test.c: 25:         TRISEbits.TRISE0 = 0;
  1079  06F1  1683               	bsf	3,5	;RP0=1, select bank1
  1080  06F2  1303               	bcf	3,6	;RP1=0, select bank1
  1081  06F3  1009               	bcf	9,0	;volatile
  1082                           
  1083                           ;../test.c: 26:         _delay((unsigned long)((1000)*(11059200/4000.0)));
  1084  06F4  300F               	movlw	15
  1085  06F5  1283               	bcf	3,5	;RP0=0, select bank0
  1086  06F6  1303               	bcf	3,6	;RP1=0, select bank0
  1087  06F7  00E2               	movwf	??_main+2
  1088  06F8  3007               	movlw	7
  1089  06F9  00E1               	movwf	??_main+1
  1090  06FA  3099               	movlw	153
  1091  06FB  00E0               	movwf	??_main
  1092  06FC                     u1867:
  1093  06FC  0BE0               	decfsz	??_main,f
  1094  06FD  2EFC               	goto	u1867
  1095  06FE  0BE1               	decfsz	??_main+1,f
  1096  06FF  2EFC               	goto	u1867
  1097  0700  0BE2               	decfsz	??_main+2,f
  1098  0701  2EFC               	goto	u1867
  1099  0702  2F03               	nop2
  1100  0703                     l1563:
  1101                           
  1102                           ;../test.c: 27:         GBS_USART_Write_Char("1234", sizeof("1234"));;
  1103  0703  3005               	movlw	5
  1104  0704  00FF               	movwf	btemp+1
  1105  0705  087F               	movf	btemp+1,w
  1106  0706  1283               	bcf	3,5	;RP0=0, select bank0
  1107  0707  1303               	bcf	3,6	;RP1=0, select bank0
  1108  0708  00DB               	movwf	GBS_USART_Write_Char@size
  1109  0709  3013               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1110  070A  120A  118A  2718  120A  118A  	fcall	_GBS_USART_Write_Char
  1111  070F                     l1565:
  1112                           
  1113                           ;../test.c: 28:         GBS_USART_Send();
  1114  070F  120A  118A  25A1  120A  118A  	fcall	_GBS_USART_Send
  1115  0714  2EDF               	goto	l1559
  1116  0715  120A  118A  2812   	ljmp	start
  1117  0718                     __end_of_main:
  1118                           
  1119                           	psect	text1
  1120  0718                     __ptext1:	
  1121 ;; *************** function _GBS_USART_Write_Char *****************
  1122 ;; Defined at:
  1123 ;;		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1124 ;; Parameters:    Size  Location     Type
  1125 ;;  c               1    wreg     PTR unsigned char 
  1126 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  1127 ;;  size            1    7[BANK0 ] unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  c               1   10[BANK0 ] PTR unsigned char 
  1130 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  1131 ;;  i               1   11[BANK0 ] unsigned char 
  1132 ;; Return value:  Size  Location     Type
  1133 ;;                  1    wreg      void 
  1134 ;; Registers used:
  1135 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1136 ;; Tracked objects:
  1137 ;;		On entry : 0/0
  1138 ;;		On exit  : 0/0
  1139 ;;		Unchanged: 0/0
  1140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1141 ;;      Params:         0       1       0       0       0
  1142 ;;      Locals:         0       2       0       0       0
  1143 ;;      Temps:          0       2       0       0       0
  1144 ;;      Totals:         0       5       0       0       0
  1145 ;;Total ram usage:        5 bytes
  1146 ;; Hardware stack levels used:    1
  1147 ;; Hardware stack levels required when called:    5
  1148 ;; This function calls:
  1149 ;;		_GBS_USART_Buffer_Write
  1150 ;; This function is called by:
  1151 ;;		_main
  1152 ;; This function uses a non-reentrant model
  1153 ;;
  1154                           
  1155                           
  1156                           ;psect for function _GBS_USART_Write_Char
  1157  0718                     _GBS_USART_Write_Char:
  1158                           
  1159                           ;incstack = 0
  1160                           ; Regs used in _GBS_USART_Write_Char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstac
      +                          k]
  1161                           ;GBS_USART_Write_Char@c stored from wreg
  1162  0718  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0719  1303               	bcf	3,6	;RP1=0, select bank0
  1164  071A  00DE               	movwf	GBS_USART_Write_Char@c
  1165  071B                     l1413:
  1166                           
  1167                           ;../gbs8/bsp/scr/gbs8_usart.c: 142: void GBS_USART_Write_Char(char* c, uint8_t size);../
      +                          gbs8/bsp/scr/gbs8_usart.c: 143: {;../gbs8/bsp/scr/gbs8_usart.c: 144:     if (size < (16 
      +                          -2))
  1168  071B  300E               	movlw	14
  1169  071C  025B               	subwf	GBS_USART_Write_Char@size,w
  1170  071D  1803               	skipnc
  1171  071E  2F20               	goto	u531
  1172  071F  2F21               	goto	u530
  1173  0720                     u531:
  1174  0720  2F66               	goto	l303
  1175  0721                     u530:
  1176  0721                     l1415:
  1177                           
  1178                           ;../gbs8/bsp/scr/gbs8_usart.c: 145:     {;../gbs8/bsp/scr/gbs8_usart.c: 146:         for
      +                           (uint8_t i = 0; i<(size-1); i++)
  1179  0721  01DF               	clrf	GBS_USART_Write_Char@i
  1180  0722  2F3C               	goto	l1421
  1181  0723                     l1417:
  1182                           
  1183                           ;../gbs8/bsp/scr/gbs8_usart.c: 147:         {;../gbs8/bsp/scr/gbs8_usart.c: 149:        
      +                               GBS_USART_Buffer_Write(&usartSendBuffer, c[i]);
  1184  0723  1283               	bcf	3,5	;RP0=0, select bank0
  1185  0724  1303               	bcf	3,6	;RP1=0, select bank0
  1186  0725  085F               	movf	GBS_USART_Write_Char@i,w
  1187  0726  075E               	addwf	GBS_USART_Write_Char@c,w
  1188  0727  0084               	movwf	4
  1189  0728  120A  118A  2015  120A  118A  	fcall	stringdir
  1190  072D  00FF               	movwf	btemp+1
  1191  072E  087F               	movf	btemp+1,w
  1192  072F  00D8               	movwf	GBS_USART_Buffer_Write@value
  1193  0730  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1194  0731  120A  118A  265D  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1195  0736                     l1419:
  1196                           
  1197                           ;../gbs8/bsp/scr/gbs8_usart.c: 150:         }
  1198  0736  3001               	movlw	1
  1199  0737  00FF               	movwf	btemp+1
  1200  0738  087F               	movf	btemp+1,w
  1201  0739  1283               	bcf	3,5	;RP0=0, select bank0
  1202  073A  1303               	bcf	3,6	;RP1=0, select bank0
  1203  073B  07DF               	addwf	GBS_USART_Write_Char@i,f
  1204  073C                     l1421:
  1205  073C  085B               	movf	GBS_USART_Write_Char@size,w
  1206  073D  3EFF               	addlw	255
  1207  073E  00DC               	movwf	??_GBS_USART_Write_Char
  1208  073F  30FF               	movlw	255
  1209  0740  1803               	skipnc
  1210  0741  3000               	movlw	0
  1211  0742  00DD               	movwf	??_GBS_USART_Write_Char+1
  1212  0743  085D               	movf	??_GBS_USART_Write_Char+1,w
  1213  0744  3A80               	xorlw	128
  1214  0745  3C80               	sublw	128
  1215  0746  1D03               	skipz
  1216  0747  2F4A               	goto	u545
  1217  0748  085C               	movf	??_GBS_USART_Write_Char,w
  1218  0749  025F               	subwf	GBS_USART_Write_Char@i,w
  1219  074A                     u545:
  1220  074A  1C03               	skipc
  1221  074B  2F4D               	goto	u541
  1222  074C  2F4E               	goto	u540
  1223  074D                     u541:
  1224  074D  2F23               	goto	l1417
  1225  074E                     u540:
  1226  074E                     l1423:
  1227                           
  1228                           ;../gbs8/bsp/scr/gbs8_usart.c: 151:         GBS_USART_Buffer_Write(&usartSendBuffer, 13)
      +                          ;
  1229  074E  300D               	movlw	13
  1230  074F  00FF               	movwf	btemp+1
  1231  0750  087F               	movf	btemp+1,w
  1232  0751  1283               	bcf	3,5	;RP0=0, select bank0
  1233  0752  1303               	bcf	3,6	;RP1=0, select bank0
  1234  0753  00D8               	movwf	GBS_USART_Buffer_Write@value
  1235  0754  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1236  0755  120A  118A  265D  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1237                           
  1238                           ;../gbs8/bsp/scr/gbs8_usart.c: 152:         GBS_USART_Buffer_Write(&usartSendBuffer, 10)
      +                          ;
  1239  075A  300A               	movlw	10
  1240  075B  00FF               	movwf	btemp+1
  1241  075C  087F               	movf	btemp+1,w
  1242  075D  1283               	bcf	3,5	;RP0=0, select bank0
  1243  075E  1303               	bcf	3,6	;RP1=0, select bank0
  1244  075F  00D8               	movwf	GBS_USART_Buffer_Write@value
  1245  0760  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1246  0761  120A  118A  265D  120A  118A  	fcall	_GBS_USART_Buffer_Write
  1247  0766                     l303:
  1248  0766  0008               	return
  1249  0767                     __end_of_GBS_USART_Write_Char:
  1250                           
  1251                           	psect	text2
  1252  065D                     __ptext2:	
  1253 ;; *************** function _GBS_USART_Buffer_Write *****************
  1254 ;; Defined at:
  1255 ;;		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1256 ;; Parameters:    Size  Location     Type
  1257 ;;  buffer          1    wreg     PTR struct .
  1258 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1259 ;;  value           1    4[BANK0 ] unsigned char 
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;  buffer          1    6[BANK0 ] PTR struct .
  1262 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       1       0       0       0
  1273 ;;      Locals:         0       1       0       0       0
  1274 ;;      Temps:          0       1       0       0       0
  1275 ;;      Totals:         0       3       0       0       0
  1276 ;;Total ram usage:        3 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    4
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_GBS_USART_Write_Char
  1283 ;; This function uses a non-reentrant model
  1284 ;;
  1285                           
  1286                           
  1287                           ;psect for function _GBS_USART_Buffer_Write
  1288  065D                     _GBS_USART_Buffer_Write:
  1289                           
  1290                           ;incstack = 0
  1291                           ; Regs used in _GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  1292                           ;GBS_USART_Buffer_Write@buffer stored from wreg
  1293  065D  1283               	bcf	3,5	;RP0=0, select bank0
  1294  065E  1303               	bcf	3,6	;RP1=0, select bank0
  1295  065F  00DA               	movwf	GBS_USART_Buffer_Write@buffer
  1296  0660                     l1361:
  1297                           
  1298                           ;../gbs8/bsp/scr/gbs8_usart.c: 41: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 42: {;../gbs8/bsp/scr/gbs8_usart.c: 43:     
      +                          buffer->buffer[buffer->tail] = value;
  1299  0660  0858               	movf	GBS_USART_Buffer_Write@value,w
  1300  0661  00FF               	movwf	btemp+1
  1301  0662  085A               	movf	GBS_USART_Buffer_Write@buffer,w
  1302  0663  3E11               	addlw	17
  1303  0664  0084               	movwf	4
  1304  0665  1383               	bcf	3,7	;select IRP bank0
  1305  0666  0800               	movf	0,w
  1306  0667  075A               	addwf	GBS_USART_Buffer_Write@buffer,w
  1307  0668  00D9               	movwf	??_GBS_USART_Buffer_Write
  1308  0669  0859               	movf	??_GBS_USART_Buffer_Write,w
  1309  066A  0084               	movwf	4
  1310  066B  087F               	movf	btemp+1,w
  1311  066C  0080               	movwf	0
  1312                           
  1313                           ;../gbs8/bsp/scr/gbs8_usart.c: 44:     buffer->tail = (buffer->tail + 1)%16;
  1314  066D  085A               	movf	GBS_USART_Buffer_Write@buffer,w
  1315  066E  3E11               	addlw	17
  1316  066F  0084               	movwf	4
  1317  0670  0800               	movf	0,w
  1318  0671  3E01               	addlw	1
  1319  0672  390F               	andlw	15
  1320  0673  00FF               	movwf	btemp+1
  1321  0674  085A               	movf	GBS_USART_Buffer_Write@buffer,w
  1322  0675  3E11               	addlw	17
  1323  0676  0084               	movwf	4
  1324  0677  087F               	movf	btemp+1,w
  1325  0678  0080               	movwf	0
  1326  0679                     l1363:
  1327                           
  1328                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     if (buffer->size<16) buffer->size++;
  1329  0679  085A               	movf	GBS_USART_Buffer_Write@buffer,w
  1330  067A  3E12               	addlw	18
  1331  067B  0084               	movwf	4
  1332  067C  3010               	movlw	16
  1333  067D  0200               	subwf	0,w
  1334  067E  1803               	skipnc
  1335  067F  2E81               	goto	u471
  1336  0680  2E82               	goto	u470
  1337  0681                     u471:
  1338  0681  2E89               	goto	l251
  1339  0682                     u470:
  1340  0682                     l1365:
  1341  0682  3001               	movlw	1
  1342  0683  00FF               	movwf	btemp+1
  1343  0684  085A               	movf	GBS_USART_Buffer_Write@buffer,w
  1344  0685  3E12               	addlw	18
  1345  0686  0084               	movwf	4
  1346  0687  087F               	movf	btemp+1,w
  1347  0688  0780               	addwf	0,f
  1348  0689                     l251:
  1349  0689  0008               	return
  1350  068A                     __end_of_GBS_USART_Buffer_Write:
  1351                           
  1352                           	psect	text3
  1353  05A1                     __ptext3:	
  1354 ;; *************** function _GBS_USART_Send *****************
  1355 ;; Defined at:
  1356 ;;		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1357 ;; Parameters:    Size  Location     Type
  1358 ;;		None
  1359 ;; Auto vars:     Size  Location     Type
  1360 ;;		None
  1361 ;; Return value:  Size  Location     Type
  1362 ;;                  1    wreg      void 
  1363 ;; Registers used:
  1364 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1365 ;; Tracked objects:
  1366 ;;		On entry : 0/0
  1367 ;;		On exit  : 0/0
  1368 ;;		Unchanged: 0/0
  1369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1370 ;;      Params:         0       0       0       0       0
  1371 ;;      Locals:         0       0       0       0       0
  1372 ;;      Temps:          0       0       0       0       0
  1373 ;;      Totals:         0       0       0       0       0
  1374 ;;Total ram usage:        0 bytes
  1375 ;; Hardware stack levels used:    1
  1376 ;; Hardware stack levels required when called:    5
  1377 ;; This function calls:
  1378 ;;		_GBS_USART_Buffer_Read
  1379 ;; This function is called by:
  1380 ;;		_main
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _GBS_USART_Send
  1386  05A1                     _GBS_USART_Send:
  1387  05A1                     l1425:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1390                           
  1391                           
  1392                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     PIE1bits.TXIE = 1;
  1393  05A1  1683               	bsf	3,5	;RP0=1, select bank1
  1394  05A2  1303               	bcf	3,6	;RP1=0, select bank1
  1395  05A3  160C               	bsf	12,4	;volatile
  1396  05A4                     l1427:
  1397                           
  1398                           ;../gbs8/bsp/scr/gbs8_usart.c: 63:     if (usartSendBuffer.size>0)
  1399  05A4  1283               	bcf	3,5	;RP0=0, select bank0
  1400  05A5  1303               	bcf	3,6	;RP1=0, select bank0
  1401  05A6  0834               	movf	_usartSendBuffer+18,w
  1402  05A7  1903               	btfsc	3,2
  1403  05A8  2DAA               	goto	u551
  1404  05A9  2DAB               	goto	u550
  1405  05AA                     u551:
  1406  05AA  2DBA               	goto	l262
  1407  05AB                     u550:
  1408  05AB                     l1429:
  1409                           
  1410                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     {;../gbs8/bsp/scr/gbs8_usart.c: 65:         TXREG
      +                           = GBS_USART_Buffer_Read(&usartSendBuffer);
  1411  05AB  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1412  05AC  120A  118A  2632  120A  118A  	fcall	_GBS_USART_Buffer_Read
  1413  05B1  1283               	bcf	3,5	;RP0=0, select bank0
  1414  05B2  1303               	bcf	3,6	;RP1=0, select bank0
  1415  05B3  0099               	movwf	25	;volatile
  1416  05B4                     l259:	
  1417                           ;../gbs8/bsp/scr/gbs8_usart.c: 66:         while (TXSTAbits.TRMT==0);
  1418                           
  1419  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  1420  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  1421  05B6  1C98               	btfss	24,1	;volatile
  1422  05B7  2DB9               	goto	u561
  1423  05B8  2DBA               	goto	u560
  1424  05B9                     u561:
  1425  05B9  2DB4               	goto	l259
  1426  05BA                     u560:
  1427  05BA                     l262:
  1428  05BA  0008               	return
  1429  05BB                     __end_of_GBS_USART_Send:
  1430                           
  1431                           	psect	text4
  1432  0632                     __ptext4:	
  1433 ;; *************** function _GBS_USART_Buffer_Read *****************
  1434 ;; Defined at:
  1435 ;;		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1436 ;; Parameters:    Size  Location     Type
  1437 ;;  buffer          1    wreg     PTR struct .
  1438 ;;		 -> usartSendBuffer(19), 
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  buffer          1    6[BANK0 ] PTR struct .
  1441 ;;		 -> usartSendBuffer(19), 
  1442 ;;  result          1    5[BANK0 ] unsigned char 
  1443 ;; Return value:  Size  Location     Type
  1444 ;;                  1    wreg      unsigned char 
  1445 ;; Registers used:
  1446 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1447 ;; Tracked objects:
  1448 ;;		On entry : 0/0
  1449 ;;		On exit  : 0/0
  1450 ;;		Unchanged: 0/0
  1451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1452 ;;      Params:         0       0       0       0       0
  1453 ;;      Locals:         0       2       0       0       0
  1454 ;;      Temps:          0       1       0       0       0
  1455 ;;      Totals:         0       3       0       0       0
  1456 ;;Total ram usage:        3 bytes
  1457 ;; Hardware stack levels used:    1
  1458 ;; Hardware stack levels required when called:    4
  1459 ;; This function calls:
  1460 ;;		Nothing
  1461 ;; This function is called by:
  1462 ;;		_GBS_USART_Send
  1463 ;; This function uses a non-reentrant model
  1464 ;;
  1465                           
  1466                           
  1467                           ;psect for function _GBS_USART_Buffer_Read
  1468  0632                     _GBS_USART_Buffer_Read:
  1469                           
  1470                           ;incstack = 0
  1471                           ; Regs used in _GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  1472                           ;GBS_USART_Buffer_Read@buffer stored from wreg
  1473  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1474  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1475  0634  00DA               	movwf	GBS_USART_Buffer_Read@buffer
  1476  0635                     l1367:
  1477                           
  1478                           ;../gbs8/bsp/scr/gbs8_usart.c: 48: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 49: {;../gbs8/bsp/scr/gbs8_usart.c: 50:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 51:     if (buffer->size>0)
  1479  0635  085A               	movf	GBS_USART_Buffer_Read@buffer,w
  1480  0636  3E12               	addlw	18
  1481  0637  0084               	movwf	4
  1482  0638  1383               	bcf	3,7	;select IRP bank0
  1483  0639  0800               	movf	0,w
  1484  063A  1903               	btfsc	3,2
  1485  063B  2E3D               	goto	u481
  1486  063C  2E3E               	goto	u480
  1487  063D                     u481:
  1488  063D  2E5C               	goto	l255
  1489  063E                     u480:
  1490  063E                     l1369:
  1491                           
  1492                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:     {;../gbs8/bsp/scr/gbs8_usart.c: 53:         resul
      +                          t = buffer->buffer[buffer->head];
  1493  063E  085A               	movf	GBS_USART_Buffer_Read@buffer,w
  1494  063F  3E10               	addlw	16
  1495  0640  0084               	movwf	4
  1496  0641  0800               	movf	0,w
  1497  0642  075A               	addwf	GBS_USART_Buffer_Read@buffer,w
  1498  0643  00D8               	movwf	??_GBS_USART_Buffer_Read
  1499  0644  0858               	movf	??_GBS_USART_Buffer_Read,w
  1500  0645  0084               	movwf	4
  1501  0646  0800               	movf	0,w
  1502  0647  00FF               	movwf	btemp+1
  1503  0648  087F               	movf	btemp+1,w
  1504  0649  00D9               	movwf	GBS_USART_Buffer_Read@result
  1505                           
  1506                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         buffer->head = (buffer->head + 1)%16;
  1507  064A  085A               	movf	GBS_USART_Buffer_Read@buffer,w
  1508  064B  3E10               	addlw	16
  1509  064C  0084               	movwf	4
  1510  064D  0800               	movf	0,w
  1511  064E  3E01               	addlw	1
  1512  064F  390F               	andlw	15
  1513  0650  00FF               	movwf	btemp+1
  1514  0651  085A               	movf	GBS_USART_Buffer_Read@buffer,w
  1515  0652  3E10               	addlw	16
  1516  0653  0084               	movwf	4
  1517  0654  087F               	movf	btemp+1,w
  1518  0655  0080               	movwf	0
  1519  0656                     l1371:
  1520                           
  1521                           ;../gbs8/bsp/scr/gbs8_usart.c: 55:         buffer->size--;
  1522  0656  085A               	movf	GBS_USART_Buffer_Read@buffer,w
  1523  0657  3E12               	addlw	18
  1524  0658  0084               	movwf	4
  1525  0659  3001               	movlw	1
  1526  065A  0280               	subwf	0,f
  1527  065B                     l1373:
  1528                           
  1529                           ;../gbs8/bsp/scr/gbs8_usart.c: 56:         return result;
  1530  065B  0859               	movf	GBS_USART_Buffer_Read@result,w
  1531  065C                     l255:
  1532  065C  0008               	return
  1533  065D                     __end_of_GBS_USART_Buffer_Read:
  1534                           
  1535                           	psect	text5
  1536  0587                     __ptext5:	
  1537 ;; *************** function _GBS_USART_Init *****************
  1538 ;; Defined at:
  1539 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  baudRate        2    4[BANK0 ] unsigned int 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       2       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         0       2       0       0       0
  1557 ;;Total ram usage:        2 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    4
  1560 ;; This function calls:
  1561 ;;		Nothing
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _GBS_USART_Init
  1569  0587                     _GBS_USART_Init:
  1570  0587                     l1399:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _GBS_USART_Init: [wreg]
  1573                           
  1574                           
  1575                           ;../gbs8/bsp/scr/gbs8_usart.c: 6: void GBS_USART_Init(uint16_t baudRate);../gbs8/bsp/scr
      +                          /gbs8_usart.c: 7: {;../gbs8/bsp/scr/gbs8_usart.c: 9:     PIE1bits.TXIE = 0;
  1576  0587  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0588  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0589  120C               	bcf	12,4	;volatile
  1579                           
  1580                           ;../gbs8/bsp/scr/gbs8_usart.c: 10:     PIE1bits.RCIE = 1;
  1581  058A  168C               	bsf	12,5	;volatile
  1582                           
  1583                           ;../gbs8/bsp/scr/gbs8_usart.c: 12:     TXSTAbits.TX9 = 0;
  1584  058B  1318               	bcf	24,6	;volatile
  1585                           
  1586                           ;../gbs8/bsp/scr/gbs8_usart.c: 15:     TXSTAbits.SYNC = 0;
  1587  058C  1218               	bcf	24,4	;volatile
  1588                           
  1589                           ;../gbs8/bsp/scr/gbs8_usart.c: 16:     RCSTAbits.RX9 = 0;
  1590  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1591  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1592  058F  1318               	bcf	24,6	;volatile
  1593                           
  1594                           ;../gbs8/bsp/scr/gbs8_usart.c: 17:     BAUDCTLbits.BRG16 = 0;
  1595  0590  1683               	bsf	3,5	;RP0=1, select bank3
  1596  0591  1703               	bsf	3,6	;RP1=1, select bank3
  1597  0592  1187               	bcf	7,3	;volatile
  1598                           
  1599                           ;../gbs8/bsp/scr/gbs8_usart.c: 20:     TXSTAbits.SENDB = 0;
  1600  0593  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0594  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0595  1198               	bcf	24,3	;volatile
  1603                           
  1604                           ;../gbs8/bsp/scr/gbs8_usart.c: 23:     TXSTAbits.BRGH = 1;
  1605  0596  1518               	bsf	24,2	;volatile
  1606  0597                     l1401:
  1607                           
  1608                           ;../gbs8/bsp/scr/gbs8_usart.c: 27:     SPBRG = 71;
  1609  0597  3047               	movlw	71
  1610  0598  0099               	movwf	25	;volatile
  1611  0599                     l1403:
  1612                           
  1613                           ;../gbs8/bsp/scr/gbs8_usart.c: 30:     TRISCbits.TRISC7 = 1;
  1614  0599  1787               	bsf	7,7	;volatile
  1615  059A                     l1405:
  1616                           
  1617                           ;../gbs8/bsp/scr/gbs8_usart.c: 33:     TRISCbits.TRISC6 = 0;
  1618  059A  1307               	bcf	7,6	;volatile
  1619  059B                     l1407:
  1620                           
  1621                           ;../gbs8/bsp/scr/gbs8_usart.c: 36:     TXSTAbits.TXEN = 1;
  1622  059B  1698               	bsf	24,5	;volatile
  1623  059C                     l1409:
  1624                           
  1625                           ;../gbs8/bsp/scr/gbs8_usart.c: 37:     RCSTAbits.CREN = 1;
  1626  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1627  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1628  059E  1618               	bsf	24,4	;volatile
  1629  059F                     l1411:
  1630                           
  1631                           ;../gbs8/bsp/scr/gbs8_usart.c: 38:     RCSTAbits.SPEN = 1;
  1632  059F  1798               	bsf	24,7	;volatile
  1633  05A0                     l247:
  1634  05A0  0008               	return
  1635  05A1                     __end_of_GBS_USART_Init:
  1636                           
  1637                           	psect	text6
  1638  0542                     __ptext6:	
  1639 ;; *************** function _GBS_Interrupt_Init *****************
  1640 ;; Defined at:
  1641 ;;		line 6 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		status,2, status,0, pclath, cstack
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1655 ;;      Params:         0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    5
  1662 ;; This function calls:
  1663 ;;		_GBS_Interrupt_Enable
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           
  1670                           ;psect for function _GBS_Interrupt_Init
  1671  0542                     _GBS_Interrupt_Init:
  1672  0542                     l1397:	
  1673                           ;incstack = 0
  1674                           ; Regs used in _GBS_Interrupt_Init: [status,2+status,0+pclath+cstack]
  1675                           
  1676                           
  1677                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 23:     GBS_Interrupt_Enable();
  1678  0542  120A  118A  253F  120A  118A  	fcall	_GBS_Interrupt_Enable
  1679  0547                     l78:
  1680  0547  0008               	return
  1681  0548                     __end_of_GBS_Interrupt_Init:
  1682                           
  1683                           	psect	text7
  1684  053F                     __ptext7:	
  1685 ;; *************** function _GBS_Interrupt_Enable *****************
  1686 ;; Defined at:
  1687 ;;		line 26 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1688 ;; Parameters:    Size  Location     Type
  1689 ;;		None
  1690 ;; Auto vars:     Size  Location     Type
  1691 ;;		None
  1692 ;; Return value:  Size  Location     Type
  1693 ;;                  1    wreg      void 
  1694 ;; Registers used:
  1695 ;;		None
  1696 ;; Tracked objects:
  1697 ;;		On entry : 0/0
  1698 ;;		On exit  : 0/0
  1699 ;;		Unchanged: 0/0
  1700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1701 ;;      Params:         0       0       0       0       0
  1702 ;;      Locals:         0       0       0       0       0
  1703 ;;      Temps:          0       0       0       0       0
  1704 ;;      Totals:         0       0       0       0       0
  1705 ;;Total ram usage:        0 bytes
  1706 ;; Hardware stack levels used:    1
  1707 ;; Hardware stack levels required when called:    4
  1708 ;; This function calls:
  1709 ;;		Nothing
  1710 ;; This function is called by:
  1711 ;;		_GBS_Interrupt_Init
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _GBS_Interrupt_Enable
  1717  053F                     _GBS_Interrupt_Enable:
  1718  053F                     l1359:	
  1719                           ;incstack = 0
  1720                           ; Regs used in _GBS_Interrupt_Enable: []
  1721                           
  1722                           
  1723                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 28:     INTCONbits.PEIE = 1;
  1724  053F  170B               	bsf	11,6	;volatile
  1725                           
  1726                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 29:     INTCONbits.GIE = 1;
  1727  0540  178B               	bsf	11,7	;volatile
  1728  0541                     l81:
  1729  0541  0008               	return
  1730  0542                     __end_of_GBS_Interrupt_Enable:
  1731                           
  1732                           	psect	text8
  1733  05BB                     __ptext8:	
  1734 ;; *************** function _ISR *****************
  1735 ;; Defined at:
  1736 ;;		line 90 in file "../gbs8/bsp/scr/gbs8_interrupt.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          0       4       0       0       0
  1753 ;;      Totals:         0       4       0       0       0
  1754 ;;Total ram usage:        4 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    3
  1757 ;; This function calls:
  1758 ;;		_USART_RX_ISR
  1759 ;;		_USART_TX_ISR
  1760 ;; This function is called by:
  1761 ;;		Interrupt level 1
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           
  1766                           ;psect for function _ISR
  1767  05BB                     _ISR:
  1768  05BB                     i1l1567:
  1769                           
  1770                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 137:     if (PIR1bits.TXIF)
  1771  05BB  1E0C               	btfss	12,4	;volatile
  1772  05BC  2DBE               	goto	u81_21
  1773  05BD  2DBF               	goto	u81_20
  1774  05BE                     u81_21:
  1775  05BE  2DC7               	goto	i1l1573
  1776  05BF                     u81_20:
  1777  05BF                     i1l1569:
  1778                           
  1779                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 138:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 139:    
      +                               USART_TX_ISR();
  1780  05BF  120A  118A  255D  120A  118A  	fcall	_USART_TX_ISR
  1781  05C4                     i1l1571:
  1782                           
  1783                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 140:         PIR1bits.TXIF = 0;
  1784  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  1785  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  1786  05C6  120C               	bcf	12,4	;volatile
  1787  05C7                     i1l1573:
  1788                           
  1789                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 143:     if (PIR1bits.RCIF)
  1790  05C7  1E8C               	btfss	12,5	;volatile
  1791  05C8  2DCA               	goto	u82_21
  1792  05C9  2DCB               	goto	u82_20
  1793  05CA                     u82_21:
  1794  05CA  2DD3               	goto	i1l106
  1795  05CB                     u82_20:
  1796  05CB                     i1l1575:
  1797                           
  1798                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 144:     {;../gbs8/bsp/scr/gbs8_interrupt.c: 145:    
      +                               USART_RX_ISR();
  1799  05CB  120A  118A  2767  120A  118A  	fcall	_USART_RX_ISR
  1800  05D0                     i1l1577:
  1801                           
  1802                           ;../gbs8/bsp/scr/gbs8_interrupt.c: 146:         PIR1bits.RCIF = 0;
  1803  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1804  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1805  05D2  128C               	bcf	12,5	;volatile
  1806  05D3                     i1l106:
  1807  05D3  0857               	movf	??_ISR+3,w
  1808  05D4  00FF               	movwf	btemp+1
  1809  05D5  0856               	movf	??_ISR+2,w
  1810  05D6  008A               	movwf	10
  1811  05D7  0855               	movf	??_ISR+1,w
  1812  05D8  0084               	movwf	4
  1813  05D9  0E54               	swapf	??_ISR^0,w
  1814  05DA  0083               	movwf	3
  1815  05DB  0EFE               	swapf	btemp,f
  1816  05DC  0E7E               	swapf	btemp,w
  1817  05DD  0009               	retfie
  1818  05DE                     __end_of_ISR:
  1819                           
  1820                           	psect	intentry
  1821  0004                     __pintentry:	
  1822                           ;incstack = 0
  1823                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1824                           
  1825  0004                     interrupt_function:
  1826  007E                     saved_w	set	btemp
  1827  0004  00FE               	movwf	btemp
  1828  0005  0E03               	swapf	3,w
  1829  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0008  00D4               	movwf	??_ISR
  1832  0009  0804               	movf	4,w
  1833  000A  00D5               	movwf	??_ISR+1
  1834  000B  080A               	movf	10,w
  1835  000C  00D6               	movwf	??_ISR+2
  1836  000D  087F               	movf	btemp+1,w
  1837  000E  00D7               	movwf	??_ISR+3
  1838  000F  120A  118A  2DBB   	ljmp	_ISR
  1839                           
  1840                           	psect	text9
  1841  055D                     __ptext9:	
  1842 ;; *************** function _USART_TX_ISR *****************
  1843 ;; Defined at:
  1844 ;;		line 75 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1845 ;; Parameters:    Size  Location     Type
  1846 ;;		None
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;		None
  1849 ;; Return value:  Size  Location     Type
  1850 ;;                  1    wreg      void 
  1851 ;; Registers used:
  1852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1853 ;; Tracked objects:
  1854 ;;		On entry : 0/0
  1855 ;;		On exit  : 0/0
  1856 ;;		Unchanged: 0/0
  1857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1858 ;;      Params:         0       0       0       0       0
  1859 ;;      Locals:         0       0       0       0       0
  1860 ;;      Temps:          0       0       0       0       0
  1861 ;;      Totals:         0       0       0       0       0
  1862 ;;Total ram usage:        0 bytes
  1863 ;; Hardware stack levels used:    1
  1864 ;; Hardware stack levels required when called:    2
  1865 ;; This function calls:
  1866 ;;		i1_GBS_USART_Send
  1867 ;; This function is called by:
  1868 ;;		_ISR
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           
  1873                           ;psect for function _USART_TX_ISR
  1874  055D                     _USART_TX_ISR:
  1875  055D                     i1l1431:	
  1876                           ;incstack = 0
  1877                           ; Regs used in _USART_TX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1878                           
  1879                           
  1880                           ;../gbs8/bsp/scr/gbs8_usart.c: 77:     if (usartSendBuffer.size!=0)
  1881  055D  1283               	bcf	3,5	;RP0=0, select bank0
  1882  055E  1303               	bcf	3,6	;RP1=0, select bank0
  1883  055F  0834               	movf	_usartSendBuffer+18,w
  1884  0560  1903               	btfsc	3,2
  1885  0561  2D63               	goto	u57_21
  1886  0562  2D64               	goto	u57_20
  1887  0563                     u57_21:
  1888  0563  2D69               	goto	i1l1435
  1889  0564                     u57_20:
  1890  0564                     i1l1433:
  1891                           
  1892                           ;../gbs8/bsp/scr/gbs8_usart.c: 78:     GBS_USART_Send();
  1893  0564  120A  118A  256D  120A  118A  	fcall	i1_GBS_USART_Send
  1894  0569                     i1l1435:
  1895                           
  1896                           ;../gbs8/bsp/scr/gbs8_usart.c: 79:     PIE1bits.TXIE = 0;
  1897  0569  1683               	bsf	3,5	;RP0=1, select bank1
  1898  056A  1303               	bcf	3,6	;RP1=0, select bank1
  1899  056B  120C               	bcf	12,4	;volatile
  1900  056C                     i1l269:
  1901  056C  0008               	return
  1902  056D                     __end_of_USART_TX_ISR:
  1903                           
  1904                           	psect	text10
  1905  056D                     __ptext10:	
  1906 ;; *************** function i1_GBS_USART_Send *****************
  1907 ;; Defined at:
  1908 ;;		line 60 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;		None
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;		None
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         0       0       0       0       0
  1926 ;;Total ram usage:        0 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    1
  1929 ;; This function calls:
  1930 ;;		i1_GBS_USART_Buffer_Read
  1931 ;; This function is called by:
  1932 ;;		_USART_TX_ISR
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function i1_GBS_USART_Send
  1938  056D                     i1_GBS_USART_Send:
  1939  056D                     i1l1379:	
  1940                           ;incstack = 0
  1941                           ; Regs used in i1_GBS_USART_Send: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1942                           
  1943                           
  1944                           ;../gbs8/bsp/scr/gbs8_usart.c: 62:     PIE1bits.TXIE = 1;
  1945  056D  1683               	bsf	3,5	;RP0=1, select bank1
  1946  056E  1303               	bcf	3,6	;RP1=0, select bank1
  1947  056F  160C               	bsf	12,4	;volatile
  1948  0570                     i1l1381:
  1949                           
  1950                           ;../gbs8/bsp/scr/gbs8_usart.c: 63:     if (usartSendBuffer.size>0)
  1951  0570  1283               	bcf	3,5	;RP0=0, select bank0
  1952  0571  1303               	bcf	3,6	;RP1=0, select bank0
  1953  0572  0834               	movf	_usartSendBuffer+18,w
  1954  0573  1903               	btfsc	3,2
  1955  0574  2D76               	goto	u49_21
  1956  0575  2D77               	goto	u49_20
  1957  0576                     u49_21:
  1958  0576  2D86               	goto	i1l262
  1959  0577                     u49_20:
  1960  0577                     i1l1383:
  1961                           
  1962                           ;../gbs8/bsp/scr/gbs8_usart.c: 64:     {;../gbs8/bsp/scr/gbs8_usart.c: 65:         TXREG
      +                           = GBS_USART_Buffer_Read(&usartSendBuffer);
  1963  0577  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  1964  0578  120A  118A  25DE  120A  118A  	fcall	i1_GBS_USART_Buffer_Read
  1965  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1966  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1967  057F  0099               	movwf	25	;volatile
  1968  0580                     i1l259:	
  1969                           ;../gbs8/bsp/scr/gbs8_usart.c: 66:         while (TXSTAbits.TRMT==0);
  1970                           
  1971  0580  1683               	bsf	3,5	;RP0=1, select bank1
  1972  0581  1303               	bcf	3,6	;RP1=0, select bank1
  1973  0582  1C98               	btfss	24,1	;volatile
  1974  0583  2D85               	goto	u50_21
  1975  0584  2D86               	goto	u50_20
  1976  0585                     u50_21:
  1977  0585  2D80               	goto	i1l259
  1978  0586                     u50_20:
  1979  0586                     i1l262:
  1980  0586  0008               	return
  1981  0587                     __end_ofi1_GBS_USART_Send:
  1982                           
  1983                           	psect	text11
  1984  05DE                     __ptext11:	
  1985 ;; *************** function i1_GBS_USART_Buffer_Read *****************
  1986 ;; Defined at:
  1987 ;;		line 48 in file "../gbs8/bsp/scr/gbs8_usart.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;  buffer          1    wreg     PTR struct .
  1990 ;;		 -> usartSendBuffer(19), 
  1991 ;; Auto vars:     Size  Location     Type
  1992 ;;  buffer          1    2[COMMON] PTR struct .
  1993 ;;		 -> usartSendBuffer(19), 
  1994 ;;  result          1    1[COMMON] unsigned char 
  1995 ;; Return value:  Size  Location     Type
  1996 ;;                  1    wreg      unsigned char 
  1997 ;; Registers used:
  1998 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1999 ;; Tracked objects:
  2000 ;;		On entry : 0/0
  2001 ;;		On exit  : 0/0
  2002 ;;		Unchanged: 0/0
  2003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2004 ;;      Params:         0       0       0       0       0
  2005 ;;      Locals:         2       0       0       0       0
  2006 ;;      Temps:          1       0       0       0       0
  2007 ;;      Totals:         3       0       0       0       0
  2008 ;;Total ram usage:        3 bytes
  2009 ;; Hardware stack levels used:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		i1_GBS_USART_Send
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           
  2018                           ;psect for function i1_GBS_USART_Buffer_Read
  2019  05DE                     i1_GBS_USART_Buffer_Read:
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in i1_GBS_USART_Buffer_Read: [wreg-fsr0h+status,2+status,0+btemp+1]
  2023                           ;i1GBS_USART_Buffer_Read@buffer stored from wreg
  2024  05DE  00F3               	movwf	i1GBS_USART_Buffer_Read@buffer
  2025  05DF                     i1l1349:
  2026                           
  2027                           ;../gbs8/bsp/scr/gbs8_usart.c: 48: uint8_t GBS_USART_Buffer_Read(USART_buffer_t* buffer)
      +                          ;../gbs8/bsp/scr/gbs8_usart.c: 49: {;../gbs8/bsp/scr/gbs8_usart.c: 50:     uint8_t resul
      +                          t;;../gbs8/bsp/scr/gbs8_usart.c: 51:     if (buffer->size>0)
  2028  05DF  0873               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2029  05E0  3E12               	addlw	18
  2030  05E1  0084               	movwf	4
  2031  05E2  1383               	bcf	3,7	;select IRP bank0
  2032  05E3  0800               	movf	0,w
  2033  05E4  1903               	btfsc	3,2
  2034  05E5  2DE7               	goto	u46_21
  2035  05E6  2DE8               	goto	u46_20
  2036  05E7                     u46_21:
  2037  05E7  2E06               	goto	i1l255
  2038  05E8                     u46_20:
  2039  05E8                     i1l1351:
  2040                           
  2041                           ;../gbs8/bsp/scr/gbs8_usart.c: 52:     {;../gbs8/bsp/scr/gbs8_usart.c: 53:         resul
      +                          t = buffer->buffer[buffer->head];
  2042  05E8  0873               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2043  05E9  3E10               	addlw	16
  2044  05EA  0084               	movwf	4
  2045  05EB  0800               	movf	0,w
  2046  05EC  0773               	addwf	i1GBS_USART_Buffer_Read@buffer,w
  2047  05ED  00F1               	movwf	??i1_GBS_USART_Buffer_Read
  2048  05EE  0871               	movf	??i1_GBS_USART_Buffer_Read,w
  2049  05EF  0084               	movwf	4
  2050  05F0  0800               	movf	0,w
  2051  05F1  00FF               	movwf	btemp+1
  2052  05F2  087F               	movf	btemp+1,w
  2053  05F3  00F2               	movwf	i1GBS_USART_Buffer_Read@result
  2054                           
  2055                           ;../gbs8/bsp/scr/gbs8_usart.c: 54:         buffer->head = (buffer->head + 1)%16;
  2056  05F4  0873               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2057  05F5  3E10               	addlw	16
  2058  05F6  0084               	movwf	4
  2059  05F7  0800               	movf	0,w
  2060  05F8  3E01               	addlw	1
  2061  05F9  390F               	andlw	15
  2062  05FA  00FF               	movwf	btemp+1
  2063  05FB  0873               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2064  05FC  3E10               	addlw	16
  2065  05FD  0084               	movwf	4
  2066  05FE  087F               	movf	btemp+1,w
  2067  05FF  0080               	movwf	0
  2068  0600                     i1l1353:
  2069                           
  2070                           ;../gbs8/bsp/scr/gbs8_usart.c: 55:         buffer->size--;
  2071  0600  0873               	movf	i1GBS_USART_Buffer_Read@buffer,w
  2072  0601  3E12               	addlw	18
  2073  0602  0084               	movwf	4
  2074  0603  3001               	movlw	1
  2075  0604  0280               	subwf	0,f
  2076  0605                     i1l1355:
  2077                           
  2078                           ;../gbs8/bsp/scr/gbs8_usart.c: 56:         return result;
  2079  0605  0872               	movf	i1GBS_USART_Buffer_Read@result,w
  2080  0606                     i1l255:
  2081  0606  0008               	return
  2082  0607                     __end_ofi1_GBS_USART_Buffer_Read:
  2083                           
  2084                           	psect	text12
  2085  0767                     __ptext12:	
  2086 ;; *************** function _USART_RX_ISR *****************
  2087 ;; Defined at:
  2088 ;;		line 82 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;		None
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;		None
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       0       0       0       0
  2103 ;;      Locals:         0       0       0       0       0
  2104 ;;      Temps:          2       0       0       0       0
  2105 ;;      Totals:         2       0       0       0       0
  2106 ;;Total ram usage:        2 bytes
  2107 ;; Hardware stack levels used:    1
  2108 ;; Hardware stack levels required when called:    2
  2109 ;; This function calls:
  2110 ;;		_GBS_USART_Receive
  2111 ;;		i1_GBS_USART_Write_Char
  2112 ;; This function is called by:
  2113 ;;		_ISR
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           
  2118                           ;psect for function _USART_RX_ISR
  2119  0767                     _USART_RX_ISR:
  2120  0767                     i1l1437:	
  2121                           ;incstack = 0
  2122                           ; Regs used in _USART_RX_ISR: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2123                           
  2124                           
  2125                           ;../gbs8/bsp/scr/gbs8_usart.c: 84:     if (uFlag.dFlag)
  2126  0767  1CFB               	btfss	_uFlag,1
  2127  0768  2F6A               	goto	u58_21
  2128  0769  2F6B               	goto	u58_20
  2129  076A                     u58_21:
  2130  076A  2F8C               	goto	i1l1447
  2131  076B                     u58_20:
  2132  076B                     i1l1439:
  2133                           
  2134                           ;../gbs8/bsp/scr/gbs8_usart.c: 85:     {;../gbs8/bsp/scr/gbs8_usart.c: 86:         if (R
      +                          CREG == ' ')
  2135  076B  3020               	movlw	32
  2136  076C  1283               	bcf	3,5	;RP0=0, select bank0
  2137  076D  1303               	bcf	3,6	;RP1=0, select bank0
  2138  076E  061A               	xorwf	26,w	;volatile
  2139  076F  1D03               	btfss	3,2
  2140  0770  2F72               	goto	u59_21
  2141  0771  2F73               	goto	u59_20
  2142  0772                     u59_21:
  2143  0772  2F86               	goto	i1l1445
  2144  0773                     u59_20:
  2145  0773                     i1l1441:
  2146                           
  2147                           ;../gbs8/bsp/scr/gbs8_usart.c: 87:         {;../gbs8/bsp/scr/gbs8_usart.c: 88:          
      +                             uFlag.dFlag = 0;
  2148  0773  10FB               	bcf	_uFlag,1
  2149                           
  2150                           ;../gbs8/bsp/scr/gbs8_usart.c: 89:             uFlag.rFlag = 1;
  2151  0774  157B               	bsf	_uFlag,2
  2152  0775                     i1l1443:
  2153                           
  2154                           ;../gbs8/bsp/scr/gbs8_usart.c: 92:             GBS_USART_Write_Char("DReceive", sizeof("
      +                          DReceive"));;
  2155  0775  3009               	movlw	9
  2156  0776  00FF               	movwf	btemp+1
  2157  0777  087F               	movf	btemp+1,w
  2158  0778  00F4               	movwf	i1GBS_USART_Write_Char@size
  2159  0779  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2160  077A  120A  118A  268A  120A  118A  	fcall	i1_GBS_USART_Write_Char
  2161  077F                     i1l274:	
  2162                           ;../gbs8/bsp/scr/gbs8_usart.c: 93:             while (TXSTAbits.TRMT==0);
  2163                           
  2164  077F  1683               	bsf	3,5	;RP0=1, select bank1
  2165  0780  1303               	bcf	3,6	;RP1=0, select bank1
  2166  0781  1C98               	btfss	24,1	;volatile
  2167  0782  2F84               	goto	u60_21
  2168  0783  2F85               	goto	u60_20
  2169  0784                     u60_21:
  2170  0784  2F7F               	goto	i1l274
  2171  0785                     u60_20:
  2172  0785  2FE8               	goto	i1l296
  2173  0786                     i1l1445:
  2174  0786  120A  118A  2550  120A  118A  	fcall	_GBS_USART_Receive
  2175  078B  2FE8               	goto	i1l296
  2176  078C                     i1l1447:
  2177  078C  3043               	movlw	67
  2178  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2179  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2180  078F  061A               	xorwf	26,w	;volatile
  2181  0790  1D03               	btfss	3,2
  2182  0791  2F93               	goto	u61_21
  2183  0792  2F94               	goto	u61_20
  2184  0793                     u61_21:
  2185  0793  2F9A               	goto	i1l1453
  2186  0794                     u61_20:
  2187  0794                     i1l1449:
  2188                           
  2189                           ;../gbs8/bsp/scr/gbs8_usart.c: 98:     {;../gbs8/bsp/scr/gbs8_usart.c: 99:         if (u
      +                          Flag.dFlag != 1) uFlag.cFlag = 1;
  2190  0794  18FB               	btfsc	_uFlag,1
  2191  0795  2F97               	goto	u62_21
  2192  0796  2F98               	goto	u62_20
  2193  0797                     u62_21:
  2194  0797  2FE8               	goto	i1l296
  2195  0798                     u62_20:
  2196  0798                     i1l1451:
  2197  0798  147B               	bsf	_uFlag,0
  2198  0799  2FE8               	goto	i1l296
  2199  079A                     i1l1453:
  2200  079A  3044               	movlw	68
  2201  079B  061A               	xorwf	26,w	;volatile
  2202  079C  1D03               	btfss	3,2
  2203  079D  2F9F               	goto	u63_21
  2204  079E  2FA0               	goto	u63_20
  2205  079F                     u63_21:
  2206  079F  2FA6               	goto	i1l282
  2207  07A0                     u63_20:
  2208  07A0                     i1l1455:
  2209                           
  2210                           ;../gbs8/bsp/scr/gbs8_usart.c: 102:     {;../gbs8/bsp/scr/gbs8_usart.c: 103:         if 
      +                          (uFlag.cFlag != 1) uFlag.dFlag = 1;
  2211  07A0  187B               	btfsc	_uFlag,0
  2212  07A1  2FA3               	goto	u64_21
  2213  07A2  2FA4               	goto	u64_20
  2214  07A3                     u64_21:
  2215  07A3  2FE8               	goto	i1l296
  2216  07A4                     u64_20:
  2217  07A4                     i1l1457:
  2218  07A4  14FB               	bsf	_uFlag,1
  2219  07A5  2FE8               	goto	i1l296
  2220  07A6                     i1l282:	
  2221                           ;../gbs8/bsp/scr/gbs8_usart.c: 105:     else if (uFlag.cFlag == 1)
  2222                           
  2223  07A6  1C7B               	btfss	_uFlag,0
  2224  07A7  2FA9               	goto	u65_21
  2225  07A8  2FAA               	goto	u65_20
  2226  07A9                     u65_21:
  2227  07A9  2FE8               	goto	i1l296
  2228  07AA                     u65_20:
  2229  07AA  2FBB               	goto	i1l1463
  2230  07AB                     i1l287:	
  2231                           ;../gbs8/bsp/scr/gbs8_usart.c: 108:         {;../gbs8/bsp/scr/gbs8_usart.c: 109:        
      +                           case '0':
  2232                           
  2233                           
  2234                           ;../gbs8/bsp/scr/gbs8_usart.c: 110:             ctrlBits.r0 = 1;
  2235  07AB  147C               	bsf	_ctrlBits,0
  2236                           
  2237                           ;../gbs8/bsp/scr/gbs8_usart.c: 111:             break;
  2238  07AC  2FDD               	goto	i1l288
  2239  07AD                     i1l289:	
  2240                           ;../gbs8/bsp/scr/gbs8_usart.c: 112:         case '1':
  2241                           
  2242                           
  2243                           ;../gbs8/bsp/scr/gbs8_usart.c: 113:             ctrlBits.r1 = 1;
  2244  07AD  14FC               	bsf	_ctrlBits,1
  2245                           
  2246                           ;../gbs8/bsp/scr/gbs8_usart.c: 114:             break;
  2247  07AE  2FDD               	goto	i1l288
  2248  07AF                     i1l290:	
  2249                           ;../gbs8/bsp/scr/gbs8_usart.c: 115:         case '2':
  2250                           
  2251                           
  2252                           ;../gbs8/bsp/scr/gbs8_usart.c: 116:             ctrlBits.r2 = 1;
  2253  07AF  157C               	bsf	_ctrlBits,2
  2254                           
  2255                           ;../gbs8/bsp/scr/gbs8_usart.c: 117:             break;
  2256  07B0  2FDD               	goto	i1l288
  2257  07B1                     i1l291:	
  2258                           ;../gbs8/bsp/scr/gbs8_usart.c: 118:         case '3':
  2259                           
  2260                           
  2261                           ;../gbs8/bsp/scr/gbs8_usart.c: 119:             ctrlBits.r3 = 1;
  2262  07B1  15FC               	bsf	_ctrlBits,3
  2263                           
  2264                           ;../gbs8/bsp/scr/gbs8_usart.c: 120:             break;
  2265  07B2  2FDD               	goto	i1l288
  2266  07B3                     i1l292:	
  2267                           ;../gbs8/bsp/scr/gbs8_usart.c: 121:         case '4':
  2268                           
  2269                           
  2270                           ;../gbs8/bsp/scr/gbs8_usart.c: 122:             ctrlBits.r4 = 1;
  2271  07B3  167C               	bsf	_ctrlBits,4
  2272                           
  2273                           ;../gbs8/bsp/scr/gbs8_usart.c: 123:             break;
  2274  07B4  2FDD               	goto	i1l288
  2275  07B5                     i1l293:	
  2276                           ;../gbs8/bsp/scr/gbs8_usart.c: 124:         case '5':
  2277                           
  2278                           
  2279                           ;../gbs8/bsp/scr/gbs8_usart.c: 125:             ctrlBits.r5 = 1;
  2280  07B5  16FC               	bsf	_ctrlBits,5
  2281                           
  2282                           ;../gbs8/bsp/scr/gbs8_usart.c: 126:             break;
  2283  07B6  2FDD               	goto	i1l288
  2284  07B7                     i1l294:	
  2285                           ;../gbs8/bsp/scr/gbs8_usart.c: 127:         case '6':
  2286                           
  2287                           
  2288                           ;../gbs8/bsp/scr/gbs8_usart.c: 128:             ctrlBits.r6 = 1;
  2289  07B7  177C               	bsf	_ctrlBits,6
  2290                           
  2291                           ;../gbs8/bsp/scr/gbs8_usart.c: 129:             break;
  2292  07B8  2FDD               	goto	i1l288
  2293  07B9                     i1l295:	
  2294                           ;../gbs8/bsp/scr/gbs8_usart.c: 130:         case '7':
  2295                           
  2296                           
  2297                           ;../gbs8/bsp/scr/gbs8_usart.c: 131:             ctrlBits.r7 = 1;
  2298  07B9  17FC               	bsf	_ctrlBits,7
  2299                           
  2300                           ;../gbs8/bsp/scr/gbs8_usart.c: 132:             break;
  2301  07BA  2FDD               	goto	i1l288
  2302  07BB                     i1l1463:
  2303  07BB  081A               	movf	26,w	;volatile
  2304  07BC  00F9               	movwf	??_USART_RX_ISR
  2305  07BD  01FA               	clrf	??_USART_RX_ISR+1
  2306                           
  2307                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2308                           ; Switch size 1, requested type "simple"
  2309                           ; Number of cases is 1, Range of values is 0 to 0
  2310                           ; switch strategies available:
  2311                           ; Name         Instructions Cycles
  2312                           ; simple_byte            4     3 (average)
  2313                           ; direct_byte           11     8 (fixed)
  2314                           ; jumptable            260     6 (fixed)
  2315                           ;	Chosen strategy is simple_byte
  2316  07BE  087A               	movf	??_USART_RX_ISR+1,w
  2317  07BF  3A00               	xorlw	0	; case 0
  2318  07C0  1903               	skipnz
  2319  07C1  2FC3               	goto	i1l2087
  2320  07C2  2FDD               	goto	i1l288
  2321  07C3                     i1l2087:
  2322                           
  2323                           ; Switch size 1, requested type "simple"
  2324                           ; Number of cases is 8, Range of values is 48 to 55
  2325                           ; switch strategies available:
  2326                           ; Name         Instructions Cycles
  2327                           ; simple_byte           25    13 (average)
  2328                           ; direct_byte           35    11 (fixed)
  2329                           ; jumptable            263     9 (fixed)
  2330                           ;	Chosen strategy is simple_byte
  2331  07C3  0879               	movf	??_USART_RX_ISR,w
  2332  07C4  3A30               	xorlw	48	; case 48
  2333  07C5  1903               	skipnz
  2334  07C6  2FAB               	goto	i1l287
  2335  07C7  3A01               	xorlw	1	; case 49
  2336  07C8  1903               	skipnz
  2337  07C9  2FAD               	goto	i1l289
  2338  07CA  3A03               	xorlw	3	; case 50
  2339  07CB  1903               	skipnz
  2340  07CC  2FAF               	goto	i1l290
  2341  07CD  3A01               	xorlw	1	; case 51
  2342  07CE  1903               	skipnz
  2343  07CF  2FB1               	goto	i1l291
  2344  07D0  3A07               	xorlw	7	; case 52
  2345  07D1  1903               	skipnz
  2346  07D2  2FB3               	goto	i1l292
  2347  07D3  3A01               	xorlw	1	; case 53
  2348  07D4  1903               	skipnz
  2349  07D5  2FB5               	goto	i1l293
  2350  07D6  3A03               	xorlw	3	; case 54
  2351  07D7  1903               	skipnz
  2352  07D8  2FB7               	goto	i1l294
  2353  07D9  3A01               	xorlw	1	; case 55
  2354  07DA  1903               	skipnz
  2355  07DB  2FB9               	goto	i1l295
  2356  07DC  2FDD               	goto	i1l288
  2357  07DD                     i1l288:
  2358                           
  2359                           ;../gbs8/bsp/scr/gbs8_usart.c: 134:         uFlag.cFlag = 0;
  2360  07DD  107B               	bcf	_uFlag,0
  2361  07DE                     i1l1465:
  2362                           
  2363                           ;../gbs8/bsp/scr/gbs8_usart.c: 136:         GBS_USART_Write_Char("CReceive", sizeof("CRe
      +                          ceive"));;
  2364  07DE  3009               	movlw	9
  2365  07DF  00FF               	movwf	btemp+1
  2366  07E0  087F               	movf	btemp+1,w
  2367  07E1  00F4               	movwf	i1GBS_USART_Write_Char@size
  2368  07E2  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2369  07E3  120A  118A  268A  120A  118A  	fcall	i1_GBS_USART_Write_Char
  2370  07E8                     i1l296:
  2371  07E8  0008               	return
  2372  07E9                     __end_of_USART_RX_ISR:
  2373                           
  2374                           	psect	text13
  2375  068A                     __ptext13:	
  2376 ;; *************** function i1_GBS_USART_Write_Char *****************
  2377 ;; Defined at:
  2378 ;;		line 142 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2379 ;; Parameters:    Size  Location     Type
  2380 ;;  c               1    wreg     PTR unsigned char 
  2381 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  2382 ;;  size            1    3[COMMON] unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  c               1    6[COMMON] PTR unsigned char 
  2385 ;;		 -> STR_3(9), STR_2(9), STR_1(5), 
  2386 ;;  i               1    7[COMMON] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  1    wreg      void 
  2389 ;; Registers used:
  2390 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         1       0       0       0       0
  2397 ;;      Locals:         2       0       0       0       0
  2398 ;;      Temps:          2       0       0       0       0
  2399 ;;      Totals:         5       0       0       0       0
  2400 ;;Total ram usage:        5 bytes
  2401 ;; Hardware stack levels used:    1
  2402 ;; Hardware stack levels required when called:    1
  2403 ;; This function calls:
  2404 ;;		i1_GBS_USART_Buffer_Write
  2405 ;; This function is called by:
  2406 ;;		_USART_RX_ISR
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410                           
  2411                           ;psect for function i1_GBS_USART_Write_Char
  2412  068A                     i1_GBS_USART_Write_Char:
  2413                           
  2414                           ;incstack = 0
  2415                           ; Regs used in i1_GBS_USART_Write_Char: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2416                           ;i1GBS_USART_Write_Char@c stored from wreg
  2417  068A  00F7               	movwf	i1GBS_USART_Write_Char@c
  2418  068B                     i1l1385:
  2419                           
  2420                           ;../gbs8/bsp/scr/gbs8_usart.c: 142: void GBS_USART_Write_Char(char* c, uint8_t size);../
      +                          gbs8/bsp/scr/gbs8_usart.c: 143: {;../gbs8/bsp/scr/gbs8_usart.c: 144:     if (size < (16 
      +                          -2))
  2421  068B  300E               	movlw	14
  2422  068C  0274               	subwf	i1GBS_USART_Write_Char@size,w
  2423  068D  1803               	skipnc
  2424  068E  2E90               	goto	u51_21
  2425  068F  2E91               	goto	u51_20
  2426  0690                     u51_21:
  2427  0690  2ECE               	goto	i1l303
  2428  0691                     u51_20:
  2429  0691                     i1l1387:
  2430                           
  2431                           ;../gbs8/bsp/scr/gbs8_usart.c: 145:     {;../gbs8/bsp/scr/gbs8_usart.c: 146:         for
      +                           (uint8_t i = 0; i<(size-1); i++)
  2432  0691  01F8               	clrf	i1GBS_USART_Write_Char@i
  2433  0692  2EA8               	goto	i1l1393
  2434  0693                     i1l1389:
  2435                           
  2436                           ;../gbs8/bsp/scr/gbs8_usart.c: 147:         {;../gbs8/bsp/scr/gbs8_usart.c: 149:        
      +                               GBS_USART_Buffer_Write(&usartSendBuffer, c[i]);
  2437  0693  0878               	movf	i1GBS_USART_Write_Char@i,w
  2438  0694  0777               	addwf	i1GBS_USART_Write_Char@c,w
  2439  0695  0084               	movwf	4
  2440  0696  120A  118A  2015  120A  118A  	fcall	stringdir
  2441  069B  00FF               	movwf	btemp+1
  2442  069C  087F               	movf	btemp+1,w
  2443  069D  00F1               	movwf	i1GBS_USART_Buffer_Write@value
  2444  069E  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2445  069F  120A  118A  2607  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2446  06A4                     i1l1391:
  2447                           
  2448                           ;../gbs8/bsp/scr/gbs8_usart.c: 150:         }
  2449  06A4  3001               	movlw	1
  2450  06A5  00FF               	movwf	btemp+1
  2451  06A6  087F               	movf	btemp+1,w
  2452  06A7  07F8               	addwf	i1GBS_USART_Write_Char@i,f
  2453  06A8                     i1l1393:
  2454  06A8  0874               	movf	i1GBS_USART_Write_Char@size,w
  2455  06A9  3EFF               	addlw	255
  2456  06AA  00F5               	movwf	??i1_GBS_USART_Write_Char
  2457  06AB  30FF               	movlw	255
  2458  06AC  1803               	skipnc
  2459  06AD  3000               	movlw	0
  2460  06AE  00F6               	movwf	??i1_GBS_USART_Write_Char+1
  2461  06AF  0876               	movf	??i1_GBS_USART_Write_Char+1,w
  2462  06B0  3A80               	xorlw	128
  2463  06B1  3C80               	sublw	128
  2464  06B2  1D03               	skipz
  2465  06B3  2EB6               	goto	u52_25
  2466  06B4  0875               	movf	??i1_GBS_USART_Write_Char,w
  2467  06B5  0278               	subwf	i1GBS_USART_Write_Char@i,w
  2468  06B6                     u52_25:
  2469  06B6  1C03               	skipc
  2470  06B7  2EB9               	goto	u52_21
  2471  06B8  2EBA               	goto	u52_20
  2472  06B9                     u52_21:
  2473  06B9  2E93               	goto	i1l1389
  2474  06BA                     u52_20:
  2475  06BA                     i1l1395:
  2476                           
  2477                           ;../gbs8/bsp/scr/gbs8_usart.c: 151:         GBS_USART_Buffer_Write(&usartSendBuffer, 13)
      +                          ;
  2478  06BA  300D               	movlw	13
  2479  06BB  00FF               	movwf	btemp+1
  2480  06BC  087F               	movf	btemp+1,w
  2481  06BD  00F1               	movwf	i1GBS_USART_Buffer_Write@value
  2482  06BE  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2483  06BF  120A  118A  2607  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2484                           
  2485                           ;../gbs8/bsp/scr/gbs8_usart.c: 152:         GBS_USART_Buffer_Write(&usartSendBuffer, 10)
      +                          ;
  2486  06C4  300A               	movlw	10
  2487  06C5  00FF               	movwf	btemp+1
  2488  06C6  087F               	movf	btemp+1,w
  2489  06C7  00F1               	movwf	i1GBS_USART_Buffer_Write@value
  2490  06C8  3022               	movlw	(low (_usartSendBuffer| 0))& (0+255)
  2491  06C9  120A  118A  2607  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2492  06CE                     i1l303:
  2493  06CE  0008               	return
  2494  06CF                     __end_ofi1_GBS_USART_Write_Char:
  2495                           
  2496                           	psect	text14
  2497  0550                     __ptext14:	
  2498 ;; *************** function _GBS_USART_Receive *****************
  2499 ;; Defined at:
  2500 ;;		line 70 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;		None
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0
  2517 ;;      Totals:         0       0       0       0       0
  2518 ;;Total ram usage:        0 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    1
  2521 ;; This function calls:
  2522 ;;		i1_GBS_USART_Buffer_Write
  2523 ;; This function is called by:
  2524 ;;		_USART_RX_ISR
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _GBS_USART_Receive
  2530  0550                     _GBS_USART_Receive:
  2531  0550                     i1l1377:	
  2532                           ;incstack = 0
  2533                           ; Regs used in _GBS_USART_Receive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2534                           
  2535                           
  2536                           ;../gbs8/bsp/scr/gbs8_usart.c: 72:     GBS_USART_Buffer_Write(&usartReceiveBuffer, RCREG
      +                          );
  2537  0550  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0551  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0552  081A               	movf	26,w	;volatile
  2540  0553  00FF               	movwf	btemp+1
  2541  0554  087F               	movf	btemp+1,w
  2542  0555  00F1               	movwf	i1GBS_USART_Buffer_Write@value
  2543  0556  3035               	movlw	(low (_usartReceiveBuffer| 0))& (0+255)
  2544  0557  120A  118A  2607  120A  118A  	fcall	i1_GBS_USART_Buffer_Write
  2545  055C                     i1l265:
  2546  055C  0008               	return
  2547  055D                     __end_of_GBS_USART_Receive:
  2548                           
  2549                           	psect	text15
  2550  0607                     __ptext15:	
  2551 ;; *************** function i1_GBS_USART_Buffer_Write *****************
  2552 ;; Defined at:
  2553 ;;		line 41 in file "../gbs8/bsp/scr/gbs8_usart.c"
  2554 ;; Parameters:    Size  Location     Type
  2555 ;;  buffer          1    wreg     PTR struct .
  2556 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2557 ;;  value           1    0[COMMON] unsigned char 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  buffer          1    2[COMMON] PTR struct .
  2560 ;;		 -> usartReceiveBuffer(19), usartSendBuffer(19), 
  2561 ;; Return value:  Size  Location     Type
  2562 ;;                  1    wreg      void 
  2563 ;; Registers used:
  2564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  2565 ;; Tracked objects:
  2566 ;;		On entry : 0/0
  2567 ;;		On exit  : 0/0
  2568 ;;		Unchanged: 0/0
  2569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2570 ;;      Params:         1       0       0       0       0
  2571 ;;      Locals:         1       0       0       0       0
  2572 ;;      Temps:          1       0       0       0       0
  2573 ;;      Totals:         3       0       0       0       0
  2574 ;;Total ram usage:        3 bytes
  2575 ;; Hardware stack levels used:    1
  2576 ;; This function calls:
  2577 ;;		Nothing
  2578 ;; This function is called by:
  2579 ;;		_GBS_USART_Receive
  2580 ;;		i1_GBS_USART_Write_Char
  2581 ;; This function uses a non-reentrant model
  2582 ;;
  2583                           
  2584                           
  2585                           ;psect for function i1_GBS_USART_Buffer_Write
  2586  0607                     i1_GBS_USART_Buffer_Write:
  2587                           
  2588                           ;incstack = 0
  2589                           ; Regs used in i1_GBS_USART_Buffer_Write: [wreg-fsr0h+status,2+status,0+btemp+1]
  2590                           ;i1GBS_USART_Buffer_Write@buffer stored from wreg
  2591  0607  00F3               	movwf	i1GBS_USART_Buffer_Write@buffer
  2592  0608                     i1l1343:
  2593                           
  2594                           ;../gbs8/bsp/scr/gbs8_usart.c: 41: void GBS_USART_Buffer_Write(USART_buffer_t* buffer, u
      +                          int8_t value);../gbs8/bsp/scr/gbs8_usart.c: 42: {;../gbs8/bsp/scr/gbs8_usart.c: 43:     
      +                          buffer->buffer[buffer->tail] = value;
  2595  0608  0871               	movf	i1GBS_USART_Buffer_Write@value,w
  2596  0609  00FF               	movwf	btemp+1
  2597  060A  0873               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2598  060B  3E11               	addlw	17
  2599  060C  0084               	movwf	4
  2600  060D  1383               	bcf	3,7	;select IRP bank0
  2601  060E  0800               	movf	0,w
  2602  060F  0773               	addwf	i1GBS_USART_Buffer_Write@buffer,w
  2603  0610  00F2               	movwf	??i1_GBS_USART_Buffer_Write
  2604  0611  0872               	movf	??i1_GBS_USART_Buffer_Write,w
  2605  0612  0084               	movwf	4
  2606  0613  087F               	movf	btemp+1,w
  2607  0614  0080               	movwf	0
  2608                           
  2609                           ;../gbs8/bsp/scr/gbs8_usart.c: 44:     buffer->tail = (buffer->tail + 1)%16;
  2610  0615  0873               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2611  0616  3E11               	addlw	17
  2612  0617  0084               	movwf	4
  2613  0618  0800               	movf	0,w
  2614  0619  3E01               	addlw	1
  2615  061A  390F               	andlw	15
  2616  061B  00FF               	movwf	btemp+1
  2617  061C  0873               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2618  061D  3E11               	addlw	17
  2619  061E  0084               	movwf	4
  2620  061F  087F               	movf	btemp+1,w
  2621  0620  0080               	movwf	0
  2622  0621                     i1l1345:
  2623                           
  2624                           ;../gbs8/bsp/scr/gbs8_usart.c: 45:     if (buffer->size<16) buffer->size++;
  2625  0621  0873               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2626  0622  3E12               	addlw	18
  2627  0623  0084               	movwf	4
  2628  0624  3010               	movlw	16
  2629  0625  0200               	subwf	0,w
  2630  0626  1803               	skipnc
  2631  0627  2E29               	goto	u45_21
  2632  0628  2E2A               	goto	u45_20
  2633  0629                     u45_21:
  2634  0629  2E31               	goto	i1l251
  2635  062A                     u45_20:
  2636  062A                     i1l1347:
  2637  062A  3001               	movlw	1
  2638  062B  00FF               	movwf	btemp+1
  2639  062C  0873               	movf	i1GBS_USART_Buffer_Write@buffer,w
  2640  062D  3E12               	addlw	18
  2641  062E  0084               	movwf	4
  2642  062F  087F               	movf	btemp+1,w
  2643  0630  0780               	addwf	0,f
  2644  0631                     i1l251:
  2645  0631  0008               	return
  2646  0632                     __end_ofi1_GBS_USART_Buffer_Write:
  2647  007E                     btemp	set	126	;btemp
  2648  007E                     wtemp0	set	126
  2649                           
  2650                           	psect	config
  2651                           
  2652                           ;Config register CONFIG1 @ 0x2007
  2653                           ;	Oscillator Selection bits
  2654                           ;	FOSC = HS, HS oscillator: High-speed crystal/resonator on RA6/OSC2/CLKOUT and RA7/OSC1
      +                          /CLKIN
  2655                           ;	Watchdog Timer Enable bit
  2656                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2657                           ;	Power-up Timer Enable bit
  2658                           ;	PWRTE = OFF, PWRT disabled
  2659                           ;	RE3/MCLR pin function select bit
  2660                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  2661                           ;	Code Protection bit
  2662                           ;	CP = OFF, Program memory code protection is disabled
  2663                           ;	Data Code Protection bit
  2664                           ;	CPD = OFF, Data memory code protection is disabled
  2665                           ;	Brown Out Reset Selection bits
  2666                           ;	BOREN = OFF, BOR disabled
  2667                           ;	Internal External Switchover bit
  2668                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2669                           ;	Fail-Safe Clock Monitor Enabled bit
  2670                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2671                           ;	Low Voltage Programming Enable bit
  2672                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2673                           ;	In-Circuit Debugger Mode bit
  2674                           ;	DEBUG = 0x1, unprogrammed default
  2675  2007                     	org	8199
  2676  2007  20F2               	dw	8434
  2677                           
  2678                           ;Config register CONFIG2 @ 0x2008
  2679                           ;	Brown-out Reset Selection bit
  2680                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  2681                           ;	Flash Program Memory Self Write Enable bits
  2682                           ;	WRT = OFF, Write protection off
  2683  2008                     	org	8200
  2684  2008  3EFF               	dw	16127

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         134
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13     10      12
    BANK0            80     15      67
    BANK1            80      0      80
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    GBS_USART_Write_Char@c	PTR unsigned char  size(1) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[9]), STR_1(CODE[5]), 

    GBS_USART_Buffer_Read@buffer	PTR struct . size(1) Largest target is 19
		 -> usartSendBuffer(BANK0[19]), 

    GBS_USART_Buffer_Write@buffer	PTR struct . size(1) Largest target is 19
		 -> usartReceiveBuffer(BANK0[19]), usartSendBuffer(BANK0[19]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_USART_RX_ISR
    i1_GBS_USART_Send->i1_GBS_USART_Buffer_Read
    _USART_RX_ISR->i1_GBS_USART_Write_Char
    i1_GBS_USART_Write_Char->i1_GBS_USART_Buffer_Write
    _GBS_USART_Receive->i1_GBS_USART_Buffer_Write

Critical Paths under _main in BANK0

    _main->_GBS_USART_Write_Char
    _GBS_USART_Write_Char->_GBS_USART_Buffer_Write
    _GBS_USART_Send->_GBS_USART_Buffer_Read

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1215
                                             12 BANK0      3     3      0
                 _GBS_Interrupt_Init
                     _GBS_USART_Init
                     _GBS_USART_Send
               _GBS_USART_Write_Char
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Write_Char                                 5     4      1     951
                                              7 BANK0      5     4      1
             _GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Buffer_Write                               3     2      1     564
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Send                                       0     0      0     188
              _GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (2) _GBS_USART_Buffer_Read                                3     3      0     188
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _GBS_USART_Init                                       2     0      2      76
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _GBS_Interrupt_Init                                   0     0      0       0
               _GBS_Interrupt_Enable
 ---------------------------------------------------------------------------------
 (2) _GBS_Interrupt_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  4     4      0     835
                                              0 BANK0      4     4      0
                       _USART_RX_ISR
                       _USART_TX_ISR
 ---------------------------------------------------------------------------------
 (4) _USART_TX_ISR                                         0     0      0     155
                   i1_GBS_USART_Send
 ---------------------------------------------------------------------------------
 (5) i1_GBS_USART_Send                                     0     0      0     155
            i1_GBS_USART_Buffer_Read
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Read                              3     3      0     155
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (4) _USART_RX_ISR                                         2     2      0     680
                                              8 COMMON     2     2      0
                  _GBS_USART_Receive
             i1_GBS_USART_Write_Char
 ---------------------------------------------------------------------------------
 (5) i1_GBS_USART_Write_Char                               5     4      1     422
                                              3 COMMON     5     4      1
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (5) _GBS_USART_Receive                                    0     0      0     258
           i1_GBS_USART_Buffer_Write
 ---------------------------------------------------------------------------------
 (6) i1_GBS_USART_Buffer_Write                             3     2      1     258
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _GBS_Interrupt_Init
     _GBS_Interrupt_Enable
   _GBS_USART_Init
   _GBS_USART_Send
     _GBS_USART_Buffer_Read
   _GBS_USART_Write_Char
     _GBS_USART_Buffer_Write

 _ISR (ROOT)
   _USART_RX_ISR
     _GBS_USART_Receive
       i1_GBS_USART_Buffer_Write
     i1_GBS_USART_Write_Char
       i1_GBS_USART_Buffer_Write
   _USART_TX_ISR
     i1_GBS_USART_Send
       i1_GBS_USART_Buffer_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      A       C       1       92.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      9F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      F      43       5       83.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0      50       7      100.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      9F      12        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Nov 03 16:24:24 2020

                                pc 0002                                 l81 0541  
                               l78 0547            ?i1_GBS_USART_Write_Char 0074  
                               fsr 0004             ??_GBS_USART_Write_Char 005C  
                              l303 0766                                l251 0689  
                              l262 05BA                                l247 05A0  
                              l255 065C                                l259 05B4  
        __end_of_GBS_USART_Receive 055D                                _PR2 0092  
                              u530 0721                                u531 0720  
                              u540 074E                                _ISR 05BB  
                              u541 074D                                u550 05AB  
                              u470 0682                                u551 05AA  
                              u471 0681                                u480 063E  
                              u560 05BA                                u481 063D  
                              u561 05B9                                u545 074A  
                              _PSA 040B                                fsr0 0004  
                              indf 0000                               ?_ISR 0071  
                             l1401 0597                               l1411 059F  
                             l1403 0599                               l1405 059A  
                             l1421 073C                               l1413 071B  
                             l1407 059B                               l1423 074E  
                             l1415 0721                               l1409 059C  
                             l1425 05A1                               l1361 0660  
                             l1417 0723                               l1371 0656  
                             l1427 05A4                               l1363 0679  
                             l1419 0736                               l1373 065B  
                             l1429 05AB                               l1365 0682  
                             l1359 053F                               l1367 0635  
                             l1369 063E                               l1561 06F1  
                             l1563 0703                               l1555 06CF  
                             l1397 0542                               l1565 070F  
                             l1557 06D4                               l1399 0587  
                             l1559 06DF                               STR_1 002D  
                             STR_2 0024                               STR_3 001B  
                             _T0CS 040D                               u1857 06EA  
                             u1867 06FC                               _TMR0 0001  
                             _TMR1 000E                               _TMR2 0011  
                             _main 06CF                               btemp 007E  
                             start 0012     __end_ofi1_GBS_USART_Write_Char 06CF  
                            ??_ISR 0054                              ?_main 0071  
                            _ANSEL 0188                              i1l106 05D3  
                            i1l303 06CE                              i1l251 0631  
                            i1l262 0586                              i1l255 0606  
                            i1l265 055C                              i1l290 07AF  
                            i1l282 07A6                              i1l274 077F  
                            i1l291 07B1                              i1l259 0580  
                            i1l292 07B3                              i1l293 07B5  
                            i1l269 056C                              i1l294 07B7  
                            i1l295 07B9                              i1l287 07AB  
                            i1l288 07DD                              i1l296 07E8  
                            i1l289 07AD                              _RCREG 001A  
                            u50_20 0586                              u50_21 0585  
                            _SPBRG 0099                              u51_20 0691  
                            u51_21 0690                              u52_20 06BA  
                            u60_20 0785                              u52_21 06B9  
                            u60_21 0784                              u52_25 06B6  
                            u45_20 062A                              u61_20 0794  
                            u45_21 0629                              u61_21 0793  
                            u62_20 0798                              u46_20 05E8  
                            u62_21 0797                              u46_21 05E7  
                            u63_20 07A0                              u63_21 079F  
                            u64_20 07A4                              u64_21 07A3  
                            u65_20 07AA                              u49_20 0577  
                            u57_20 0564                              u81_20 05BF  
                            u65_21 07A9                              u49_21 0576  
                            u57_21 0563                              u81_21 05BE  
                            u58_20 076B                              u82_20 05CB  
                            u58_21 076A                              u82_21 05CA  
                            u59_20 0773                              u59_21 0772  
                            _TXREG 0019                              _uFlag 007B  
                            _errno 0020                              pclath 000A  
                            status 0003                              wtemp0 007E  
                  __initialization 07E9                       __end_of_main 0718  
         __end_ofi1_GBS_USART_Send 0587                             ??_main 0060  
          i1_GBS_USART_Buffer_Read 05DE         __size_of_GBS_USART_Receive 000D  
 __end_ofi1_GBS_USART_Buffer_Write 0632        GBS_USART_Buffer_Read@buffer 005A  
                           _CCPR1L 0015                             _ANSELH 0189  
      GBS_USART_Buffer_Read@result 0059                             i1l1343 0608  
                           i1l1351 05E8                             i1l1431 055D  
                           i1l1345 0621                             i1l1441 0773  
                           i1l1353 0600                             i1l1433 0564  
                           i1l1347 062A                             i1l1451 0798  
                           i1l1443 0775                             i1l1355 0605  
                           i1l1435 0569                             i1l1453 079A  
                           i1l1445 0786                             i1l1437 0767  
                           i1l1349 05DF                             i1l1381 0570  
                           i1l1391 06A4                             i1l2087 07C3  
                           i1l1463 07BB                             i1l1455 07A0  
                           i1l1439 076B                             i1l1447 078C  
                           i1l1383 0577                             i1l1377 0550  
                           i1l1393 06A8                             i1l1385 068B  
                           i1l1465 07DE                             i1l1457 07A4  
                           i1l1449 0794                             i1l1395 06BA  
                           i1l1387 0691                             i1l1379 056D  
                           i1l1571 05C4                             i1l1389 0693  
                           i1l1573 05C7                             i1l1575 05CB  
                           i1l1567 05BB                             i1l1577 05D0  
                           i1l1569 05BF                             _TMR2ON 0092  
                           saved_w 007E       __end_of_GBS_Interrupt_Enable 0542  
          __end_of__initialization 07FC                     __pcstackCOMMON 0071  
   i1GBS_USART_Buffer_Write@buffer 0073          ??i1_GBS_USART_Buffer_Read 0071  
                   _OPTION_REGbits 0081              _GBS_USART_Buffer_Read 0632  
               _usartReceiveBuffer 0035            i1GBS_USART_Write_Char@c 0077  
          i1GBS_USART_Write_Char@i 0078         __end_of_GBS_Interrupt_Init 0548  
                       __pbssBANK0 0020                         __pbssBANK1 00A0  
         i1_GBS_USART_Buffer_Write 0607                         __pmaintext 06CF  
                       __pintentry 0004                            _T2CKPS1 0091  
    __size_of_GBS_USART_Write_Char 004F           ??_GBS_USART_Buffer_Write 0059  
                       __stringtab 0015               _GBS_Interrupt_Enable 053F  
                          __ptext1 0718                            __ptext2 065D  
                          __ptext3 05A1                            __ptext4 0632  
                          __ptext5 0587                            __ptext6 0542  
                          __ptext7 053F                            __ptext8 05BB  
                          __ptext9 055D                  ?i1_GBS_USART_Send 0071  
          __size_of_GBS_USART_Init 001A             ?_GBS_USART_Buffer_Read 0071  
                     __size_of_ISR 0023            __size_of_GBS_USART_Send 001A  
                        _T1CONbits 0010                          _T2CONbits 0012  
               ??i1_GBS_USART_Send 0074                            clrloop0 0549  
             end_of_initialization 07FC              GBS_USART_Write_Char@c 005E  
            GBS_USART_Write_Char@i 005F        GBS_USART_Buffer_Write@value 0058  
                        _RCSTAbits 0018              ?_GBS_Interrupt_Enable 0071  
     GBS_USART_Buffer_Write@buffer 005A    __size_of_GBS_USART_Buffer_Write 002D  
                        _TRISAbits 0085                          _TRISBbits 0086  
                        _TRISCbits 0087                          _TRISDbits 0088  
                        _TRISEbits 0089                      ?_USART_RX_ISR 0071  
                    ?_USART_TX_ISR 0071                        _CCP1CONbits 0017  
                        _TXSTAbits 0098           ??i1_GBS_USART_Write_Char 0075  
                      _BAUDCTLbits 0187         ??i1_GBS_USART_Buffer_Write 0072  
    i1GBS_USART_Buffer_Read@buffer 0073                start_initialization 07E9  
                      __end_of_ISR 05DE      i1GBS_USART_Buffer_Read@result 0072  
                   ??_USART_RX_ISR 0079                     ??_USART_TX_ISR 0074  
         GBS_USART_Write_Char@size 005B             _GBS_USART_Buffer_Write 065D  
           ??_GBS_Interrupt_Enable 0058                 _GBS_Interrupt_Init 0542  
              ?_GBS_Interrupt_Init 0071                     _GBS_USART_Init 0587  
                   _GBS_USART_Send 05A1         i1GBS_USART_Write_Char@size 0074  
                      __pbssCOMMON 007B                          ___latbits 0002  
                    __pcstackBANK0 0054               ??_GBS_Interrupt_Init 0058  
     __end_of_GBS_USART_Write_Char 0767    __size_ofi1_GBS_USART_Write_Char 0045  
         ?i1_GBS_USART_Buffer_Read 0071                    _usartSendBuffer 0022  
           __end_of_GBS_USART_Init 05A1            ??_GBS_USART_Buffer_Read 0058  
           __end_of_GBS_USART_Send 05BB                          __pstrings 0015  
           GBS_USART_Init@baudRate 0058          __size_ofi1_GBS_USART_Send 001A  
                interrupt_function 0004                           _IOCBbits 0096  
                        clear_ram0 0548                           _PIE1bits 008C  
                         _PIR1bits 000C               __end_of_USART_RX_ISR 07E9  
             __end_of_USART_TX_ISR 056D                    ?_GBS_USART_Init 0058  
                  ?_GBS_USART_Send 0071                        __stringbase 001A  
           i1_GBS_USART_Write_Char 068A    __end_ofi1_GBS_USART_Buffer_Read 0607  
               __end_of__stringtab 001B               _GBS_USART_Write_Char 0718  
                         _sBufferA 00A0                           __ptext10 056D  
                         __ptext11 05DE                           __ptext12 0767  
                         __ptext13 068A                           __ptext14 0550  
                         __ptext15 0607      i1GBS_USART_Buffer_Write@value 0071  
                         _ctrlBits 007C            ?_GBS_USART_Buffer_Write 0058  
                    __size_of_main 0049                           _stepperA 0048  
            ?_GBS_USART_Write_Char 005B                         _INTCONbits 000B  
   __end_of_GBS_USART_Buffer_Write 068A                           intlevel1 0000  
                 i1_GBS_USART_Send 056D  __size_ofi1_GBS_USART_Buffer_Write 002B  
        ?i1_GBS_USART_Buffer_Write 0071                          stringcode 0015  
            __size_of_USART_RX_ISR 0082              __size_of_USART_TX_ISR 0010  
    __size_of_GBS_Interrupt_Enable 0003     __size_of_GBS_USART_Buffer_Read 002B  
    __end_of_GBS_USART_Buffer_Read 065D   __size_ofi1_GBS_USART_Buffer_Read 0029  
                _GBS_USART_Receive 0550                           stringdir 0015  
                         stringtab 0015                 ?_GBS_USART_Receive 0071  
                     _USART_RX_ISR 0767                       _USART_TX_ISR 055D  
      __size_of_GBS_Interrupt_Init 0006                ??_GBS_USART_Receive 0074  
                 ??_GBS_USART_Init 005A                   ??_GBS_USART_Send 005B  
